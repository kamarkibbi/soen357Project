{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return {\n        awake: true\n      };\n    } else {\n      return null;\n    }\n  }\n  constructor(props) {\n    super();\n    _defineProperty(this, \"_mustAlwaysBeVisible\", () => {\n      return this.props.animationEnabled || this.props.swipeEnabled;\n    });\n    this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n  }\n  render() {\n    const {\n      awake\n    } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      collapsable: false,\n      removeClippedSubviews: Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews\n    }, /*#__PURE__*/React.createElement(View, {\n      style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached\n    }, awake ? /*#__PURE__*/React.createElement(SceneView, _extends({}, rest, {\n      navigation: childNavigation\n    })) : null));\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\nexport default ResourceSavingSceneView;","map":{"version":3,"names":["React","Platform","StyleSheet","View","SceneView","FAR_FAR_AWAY","ResourceSavingSceneView","PureComponent","getDerivedStateFromProps","nextProps","prevState","isFocused","awake","constructor","props","_defineProperty","animationEnabled","swipeEnabled","state","lazy","render","childNavigation","removeClippedSubviews","rest","createElement","style","styles","container","collapsable","OS","_mustAlwaysBeVisible","innerAttached","innerDetached","_extends","navigation","create","flex","overflow","top"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@react-navigation/native/lib/module/ResourceSavingSceneView.js"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true,\n    };\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n\n    return (\n      <View\n        style={styles.container}\n        collapsable={false}\n        removeClippedSubviews={\n          Platform.OS === 'android'\n            ? removeClippedSubviews\n            : !isFocused && removeClippedSubviews\n        }\n      >\n        <View\n          style={\n            this._mustAlwaysBeVisible() || isFocused\n              ? styles.innerAttached\n              : styles.innerDetached\n          }\n        >\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  innerAttached: {\n    flex: 1,\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n\nexport default ResourceSavingSceneView;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,cAA3C;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,MAAMC,YAAY,GAAG,IAArB,C,CAA2B;;AAE3B,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,aAA5C,CAA0D;EACxD,OAAOC,wBAAPA,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;IACpD,IAAID,SAAS,CAACE,SAAV,IAAuB,CAACD,SAAS,CAACE,KAAtC,EAA6C;MAC3C,OAAO;QAAEA,KAAK,EAAE;MAAT,CAAP;IACD,CAFD,MAEO;MACL,OAAO,IAAP;IACD;EACF;EAEDC,WAAWA,CAACC,KAAD,EAAQ;IACjB;IADiBC,eAAA,+BAQI,MAAM;MAC3B,OAAO,KAAKD,KAAL,CAAWE,gBAAX,IAA+B,KAAKF,KAAL,CAAWG,YAAjD;IACD,CAVkB;IAGjB,KAAKC,KAAL,GAAa;MACXN,KAAK,EAAEE,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACH,SAAnB,GAA+B;IAD3B,CAAb;EAGD;EAMDS,MAAMA,CAAA,EAAG;IACP,MAAM;MAAER;IAAF,IAAY,KAAKM,KAAvB;IACA,MAAM;MACJP,SADI;MAEJU,eAFI;MAGJC,qBAHI;MAIJ,GAAGC;IAJC,IAKF,KAAKT,KALT;IAOA,oBACEd,KAAA,CAAAwB,aAAA,CAACrB,IAAD;MACEsB,KAAK,EAAEC,MAAM,CAACC,SADhB;MAEEC,WAAW,EAAE,KAFf;MAGEN,qBAAqB,EACnBrB,QAAQ,CAAC4B,EAAT,KAAgB,SAAhB,GACIP,qBADJ,GAEI,CAACX,SAAD,IAAcW;IANtB,gBASEtB,KAAA,CAAAwB,aAAA,CAACrB,IAAD;MACEsB,KAAK,EACH,KAAKK,oBAAL,MAA+BnB,SAA/B,GACIe,MAAM,CAACK,aADX,GAEIL,MAAM,CAACM;IAJf,GAOGpB,KAAK,gBAAGZ,KAAA,CAAAwB,aAAA,CAACpB,SAAD,EAAA6B,QAAA,KAAeV,IAAf;MAAqBW,UAAU,EAAEb;IAAjC,GAAH,GAA0D,IAPlE,CATF,CADF;EAqBD;AAnDuD;AAsD1D,MAAMK,MAAM,GAAGxB,UAAU,CAACiC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CADG;IAETC,QAAQ,EAAE;EAFD,CADoB;EAK/BN,aAAa,EAAE;IACbK,IAAI,EAAE;EADO,CALgB;EAQ/BJ,aAAa,EAAE;IACbI,IAAI,EAAE,CADO;IAEbE,GAAG,EAAEjC;EAFQ;AARgB,CAAlB,CAAf;AAcA,eAAeC,uBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}