{"ast":null,"code":"const getActiveChildNavigationOptions = function (navigation, screenProps) {\n  let theme = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'light';\n  const {\n    state,\n    router,\n    getChildNavigation\n  } = navigation;\n  const activeRoute = state.routes[state.index];\n  const activeNavigation = getChildNavigation(activeRoute.key);\n  const options = router.getScreenOptions(activeNavigation, screenProps, theme);\n  return options;\n};\nexport default getActiveChildNavigationOptions;","map":{"version":3,"names":["getActiveChildNavigationOptions","navigation","screenProps","theme","arguments","length","undefined","state","router","getChildNavigation","activeRoute","routes","index","activeNavigation","key","options","getScreenOptions"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@react-navigation/core/lib/module/utils/getActiveChildNavigationOptions.js"],"sourcesContent":["const getActiveChildNavigationOptions = (\n  navigation,\n  screenProps,\n  theme = 'light'\n) => {\n  const { state, router, getChildNavigation } = navigation;\n  const activeRoute = state.routes[state.index];\n  const activeNavigation = getChildNavigation(activeRoute.key);\n  const options = router.getScreenOptions(activeNavigation, screenProps, theme);\n  return options;\n};\n\nexport default getActiveChildNavigationOptions;\n"],"mappings":"AAAA,MAAMA,+BAA+B,GAAG,SAAAA,CACtCC,UADsC,EAEtCC,WAFsC,EAInC;EAAA,IADHC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAH8B;EAKtC,MAAM;IAAEG,KAAF;IAASC,MAAT;IAAiBC;EAAjB,IAAwCR,UAA9C;EACA,MAAMS,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAaJ,KAAK,CAACK,KAAnB,CAApB;EACA,MAAMC,gBAAgB,GAAGJ,kBAAkB,CAACC,WAAW,CAACI,GAAb,CAA3C;EACA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,gBAAP,CAAwBH,gBAAxB,EAA0CX,WAA1C,EAAuDC,KAAvD,CAAhB;EACA,OAAOY,OAAP;AACD,CAVD;AAYA,eAAef,+BAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}