{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-scheduler\n * Generated: 2023-01-27\n * Version: 4.0.3\n * License: https://js.devexpress.com/Licensing\n */\n\nimport { createElement, PureComponent, Fragment, createRef, memo, useRef, useState, useCallback, useEffect } from 'react';\nimport { Plugin, Getter, Template, TemplatePlaceholder, PluginHost, TemplateConnector, Action, createStateHelper, DragDropProvider as DragDropProvider$1, DropTarget, PlaceholderWithRef, DragSource } from '@devexpress/dx-react-core';\nimport { formatDateTimeGetter, appointments, computed, availableViews, VERTICAL_GROUP_ORIENTATION, HORIZONTAL_GROUP_ORIENTATION, startViewDate, endViewDate, timeCellsData, getTimeTableHeight, calculateWeekDateIntervals, VIEW_TYPES, viewCellsData, monthCellsData, calculateMonthDateIntervals, viewBoundText, POSITION_START, POSITION_END, isTimeTableElementsMetaActual, getGroupsLastRow, calculateRectByDateAndGroupIntervals, getAppointmentStyle, isAllDayElementsMetaActual, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData, VERTICAL_TYPE, getVerticalRectByAppointmentData, allDayCells, calculateAllDayDateIntervals, changeCurrentDate, setCurrentViewName, preCommitChanges, addAppointment, changeAppointment, cancelAddedAppointment, startEditAppointment, stopEditAppointment, cancelChanges, RECURRENCE_EDIT_SCOPE, changedAppointmentById, TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY, getAppointmentResources, OPEN_COMMAND_BUTTON, CLOSE_COMMAND_BUTTON, DELETE_COMMAND_BUTTON, setAppointmentMeta, TOGGLE_APPOINTMENT_FORM_VISIBILITY, callActionIfExists, isAllDayCell, checkMultipleResourceFields, setAppointmentData, autoScroll, cellIndex, cellData, cellType, calculateInsidePart, intervalDuration, calculateAppointmentTimeBoundaries, calculateAppointmentGroups, appointmentDragged, calculateDraftAppointments, RESIZE_TOP, RESIZE_BOTTOM, SCROLL_SPEED_PX, validateResources, addResourcesToAppointments, convertResourcesToPlain, toggleExpandedGroups, HORIZONTAL_VIEW_LEFT_OFFSET, VERTICAL_VIEW_LEFT_OFFSET, isMonthCell, getCurrentTimeIndicatorTop, isCellShaded, isShadedAppointment, expandViewCellsDataWithGroups, getGroupsFromResources, sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource, expandGroups, updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData } from '@devexpress/dx-scheduler-core';\nimport { memoize, createClickHandlers, getMessagesFormatter } from '@devexpress/dx-core';\nimport moment from 'moment';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\nvar SchedulerCoreBase = /*#__PURE__*/function (_super) {\n  __extends(SchedulerCoreBase, _super);\n  function SchedulerCoreBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.formatDateTimeGetter = memoize(function (locale) {\n      return formatDateTimeGetter(locale);\n    });\n    return _this;\n  }\n  SchedulerCoreBase.prototype.render = function () {\n    var _a = this.props,\n      data = _a.data,\n      Root = _a.rootComponent,\n      locale = _a.locale,\n      height = _a.height,\n      firstDayOfWeek = _a.firstDayOfWeek;\n    return createElement(Plugin, {\n      name: \"SchedulerCore\"\n    }, createElement(Getter, {\n      name: \"appointments\",\n      value: appointments(data)\n    }), createElement(Getter, {\n      name: \"formatDate\",\n      value: this.formatDateTimeGetter(locale)\n    }), createElement(Getter, {\n      name: \"firstDayOfWeek\",\n      value: firstDayOfWeek\n    }), createElement(Getter, {\n      name: \"locale\",\n      value: locale\n    }), createElement(Template, {\n      name: \"root\"\n    }, createElement(Root, {\n      height: height\n    }, createElement(TemplatePlaceholder, {\n      name: \"schedulerRoot\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"header\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"body\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"footer\"\n    }))));\n  };\n  return SchedulerCoreBase;\n}(PureComponent);\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Scheduler's functionality\r\n * (data visualization and processing) is implemented in several plugins\r\n * specified as child components.\r\n * */\nvar SchedulerCore = SchedulerCoreBase;\nvar SchedulerBase = function (_a) {\n  var data = _a.data,\n    rootComponent = _a.rootComponent,\n    children = _a.children,\n    locale = _a.locale,\n    height = _a.height,\n    firstDayOfWeek = _a.firstDayOfWeek;\n  return createElement(PluginHost, null, createElement(SchedulerCore, {\n    data: data,\n    rootComponent: rootComponent,\n    locale: locale,\n    height: height,\n    firstDayOfWeek: firstDayOfWeek\n  }), children);\n};\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0\n};\n// tslint:disable: max-line-length\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Schedulerâ€™s functionality\r\n * (data visualization and processing) is implemented in several plugins specified as child components.\r\n * */\nvar Scheduler = SchedulerBase;\nvar CellPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"cell\",\n    params: params\n  });\n};\nvar TimeTableAppointmentLayer = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTableAppointmentLayer\"\n  });\n};\nvar startViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return startViewDate(viewCellsData);\n};\nvar endViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return endViewDate(viewCellsData);\n};\nvar TimeTablePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTable\"\n  });\n};\nvar DayScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScale\"\n  });\n};\nvar DayScaleEmptyCellPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScaleEmptyCell\"\n  });\n};\nvar GroupingPanelPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"groupingPanel\"\n  });\n};\nvar BasicViewBase = /*#__PURE__*/function (_super) {\n  __extends(BasicViewBase, _super);\n  function BasicViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      timeTableElementsMeta: {},\n      scrollingStrategy: {\n        topBoundary: 0,\n        bottomBoundary: 0,\n        leftBoundary: 0,\n        rightBoundary: 0,\n        changeVerticalScroll: function () {\n          return undefined;\n        },\n        changeHorizontalScroll: function () {\n          return undefined;\n        }\n      },\n      previousTimeTableCell: null,\n      // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n      // and, consequently, update timeTableElementsMeta\n      timeTableLayoutKey: 0\n    };\n    _this.scrollingStrategyComputed = memoize(function (viewName, scrollingStrategy) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return scrollingStrategy;\n        }, getters.scrollingStrategy);\n      };\n    });\n    _this.timeTableElementsMetaComputed = memoize(function (viewName, timeTableElementsMeta) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return timeTableElementsMeta;\n        }, getters.timeTableElementsMeta);\n      };\n    });\n    _this.intervalCountComputed = memoize(function (viewName, intervalCount) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return intervalCount;\n        }, getters.intervalCount);\n      };\n    });\n    _this.cellDurationComputed = memoize(function (viewName, cellDuration) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return cellDuration;\n        }, getters.cellDuration);\n      };\n    });\n    _this.excludedDaysComputed = memoize(function (viewName, excludedDays) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return excludedDays;\n        }, getters.excludedDays);\n      };\n    });\n    _this.availableViewsComputed = memoize(function (viewName, viewDisplayName) {\n      return function (_a) {\n        var availableViews$1 = _a.availableViews;\n        return availableViews(availableViews$1, viewName, viewDisplayName);\n      };\n    });\n    _this.currentViewComputed = memoize(function (viewName, viewDisplayName, type) {\n      return function (_a) {\n        var currentView = _a.currentView;\n        return currentView && currentView.name !== viewName ? currentView : {\n          name: viewName,\n          type: type,\n          displayName: viewDisplayName\n        };\n      };\n    });\n    _this.endViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, endViewDateBaseComputed, getters.endViewDate);\n    };\n    _this.startViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, startViewDateBaseComputed, getters.startViewDate);\n    };\n    _this.viewCellsDataComputed = memoize(function (viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed) {\n      return function (getters) {\n        return computed(getters, viewName, viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour), getters.viewCellsData);\n      };\n    });\n    _this.timeTableAppointmentsComputed = memoize(function (viewName, cellDuration, calculateAppointmentsIntervals) {\n      return function (getters) {\n        return computed(getters, viewName, calculateAppointmentsIntervals(cellDuration), getters.timeTableAppointments);\n      };\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        timeTableElementsMeta: cellElementsMeta\n      });\n    });\n    _this.setScrollingStrategy = function (scrollingStrategy) {\n      _this.setState({\n        scrollingStrategy: scrollingStrategy\n      });\n    };\n    return _this;\n  }\n  BasicViewBase.getDerivedStateFromProps = function (props, state) {\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return __assign(__assign({}, state), {\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random()\n      });\n    }\n    return null;\n  };\n  BasicViewBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      viewName = _a.name,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      type = _a.type,\n      excludedDays = _a.excludedDays,\n      cellDuration = _a.cellDuration,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour,\n      viewCellsDataComputed = _a.viewCellsDataComputed,\n      calculateAppointmentsIntervals = _a.calculateAppointmentsIntervals,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      DayScale = _a.dayScaleLayoutComponent,\n      TimeTableCell = _a.timeTableCellComponent,\n      TimeTableLayout = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      AppointmentLayer = _a.appointmentLayerComponent,\n      DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n      layoutProps = _a.layoutProps,\n      Layout = _a.layoutComponent;\n    var _b = this.state,\n      timeTableElementsMeta = _b.timeTableElementsMeta,\n      scrollingStrategy = _b.scrollingStrategy,\n      timeTableLayoutKey = _b.timeTableLayoutKey;\n    var viewDisplayName = displayName || viewName;\n    return createElement(Plugin, {\n      name: \"basicView\"\n    }, createElement(Getter, {\n      name: \"availableViews\",\n      computed: this.availableViewsComputed(viewName, viewDisplayName)\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.currentViewComputed(viewName, viewDisplayName, type)\n    }), createElement(Getter, {\n      name: \"intervalCount\",\n      computed: this.intervalCountComputed(viewName, intervalCount)\n    }), createElement(Getter, {\n      name: \"excludedDays\",\n      computed: this.excludedDaysComputed(viewName, excludedDays)\n    }), createElement(Getter, {\n      name: \"viewCellsData\",\n      computed: this.viewCellsDataComputed(viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed)\n    }), createElement(Getter, {\n      name: \"startViewDate\",\n      computed: this.startViewDateComputed\n    }), createElement(Getter, {\n      name: \"endViewDate\",\n      computed: this.endViewDateComputed\n    }), createElement(Getter, {\n      name: \"cellDuration\",\n      computed: this.cellDurationComputed(viewName, cellDuration)\n    }), createElement(Getter, {\n      name: \"timeTableElementsMeta\",\n      computed: this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)\n    }), createElement(Getter, {\n      name: \"scrollingStrategy\",\n      computed: this.scrollingStrategyComputed(viewName, scrollingStrategy)\n    }), createElement(Getter, {\n      name: \"timeTableAppointments\",\n      computed: this.timeTableAppointmentsComputed(viewName, cellDuration, calculateAppointmentsIntervals)\n    }), createElement(Template, {\n      name: \"body\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation,\n          groups = _a.groups;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var isVerticalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === VERTICAL_GROUP_ORIENTATION;\n        return createElement(Layout, __assign({\n          forwardedRef: params === null || params === void 0 ? void 0 : params.forwardedRef,\n          dayScaleComponent: DayScalePlaceholder,\n          timeTableComponent: TimeTablePlaceholder,\n          setScrollingStrategy: _this.setScrollingStrategy,\n          groupingPanelComponent: isVerticalGrouping ? GroupingPanelPlaceholder : undefined,\n          groupingPanelSize: isVerticalGrouping ? groups === null || groups === void 0 ? void 0 : groups.length : 0,\n          dayScaleEmptyCellComponent: DayScaleEmptyCellPlaceholder\n        }, layoutProps));\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        viewCellsData = _a.viewCellsData,\n        formatDate = _a.formatDate,\n        groupByDate = _a.groupByDate,\n        groupOrientation = _a.groupOrientation;\n      if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n      var groupByDateEnabled = groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(viewName);\n      var isHorizontalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === HORIZONTAL_GROUP_ORIENTATION;\n      return createElement(DayScale, {\n        cellComponent: dayScaleCellComponent,\n        rowComponent: dayScaleRowComponent,\n        groupingPanelComponent: isHorizontalGrouping ? GroupingPanelPlaceholder : undefined,\n        cellsData: viewCellsData,\n        formatDate: formatDate,\n        groupedByDate: groupByDateEnabled\n      });\n    })), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, {\n          params: params\n        });\n        return createElement(TimeTableCell, __assign({}, params));\n      });\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n          currentView = _a.currentView,\n          viewCellsData = _a.viewCellsData;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        return createElement(Fragment, null, createElement(TimeTableLayout, __assign({\n          cellsData: viewCellsData,\n          rowComponent: timeTableRowComponent,\n          cellComponent: CellPlaceholder,\n          formatDate: formatDate,\n          setCellElementsMeta: _this.updateCellElementsMeta,\n          key: timeTableLayoutKey\n        }, params)), createElement(AppointmentLayer, null, createElement(TimeTableAppointmentLayer, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView;\n      if (currentView.name !== viewName || !DayScaleEmptyCell) {\n        return createElement(TemplatePlaceholder, null);\n      }\n      return createElement(DayScaleEmptyCell, null);\n    })));\n  };\n  return BasicViewBase;\n}(PureComponent);\nvar BasicView = BasicViewBase;\nvar calculateAppointmentsIntervalsBaseComputed = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n      startViewDate = _a.startViewDate,\n      endViewDate = _a.endViewDate,\n      excludedDays = _a.excludedDays;\n    return calculateWeekDateIntervals(appointments, startViewDate, endViewDate, excludedDays, cellDuration);\n  };\n};\nvar timeCellsDataComputed = function (startDayHour, endDayHour) {\n  return function (_a) {\n    var viewCellsData = _a.viewCellsData,\n      cellDuration = _a.cellDuration;\n    return timeCellsData(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\nvar TimeScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeScale\"\n  });\n};\nvar VericalViewBase = /*#__PURE__*/function (_super) {\n  __extends(VericalViewBase, _super);\n  function VericalViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeCellsDataComputed = memoize(function (viewName, startDayHour, endDayHour) {\n      return function (getters) {\n        return computed(getters, viewName, timeCellsDataComputed(startDayHour, endDayHour), getters.timeCellsData);\n      };\n    });\n    return _this;\n  }\n  VericalViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n      TimeScale = _a.timeScaleLayoutComponent,\n      TimeScaleLabel = _a.timeScaleLabelComponent,\n      timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n      timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      cellDuration = _a.cellDuration,\n      excludedDays = _a.excludedDays,\n      viewName = _a.name,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour,\n      viewCellsDataComputed = _a.viewCellsDataComputed,\n      type = _a.type;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataComputed,\n      type: type,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      layoutProps: {\n        timeScaleComponent: TimeScalePlaceholder\n      }\n    }), createElement(Getter, {\n      name: \"timeCellsData\",\n      computed: this.timeCellsDataComputed(viewName, startDayHour, endDayHour)\n    }), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          timeCellsData = _a.timeCellsData,\n          groups = _a.groups,\n          formatDate = _a.formatDate,\n          getGroupOrientation = _a.groupOrientation,\n          timeTableElementsMeta = _a.timeTableElementsMeta;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var groupOrientation = getGroupOrientation === null || getGroupOrientation === void 0 ? void 0 : getGroupOrientation(viewName);\n        return createElement(TimeScale, __assign({\n          labelComponent: TimeScaleLabel,\n          tickCellComponent: timeScaleTickCellComponent,\n          rowComponent: timeScaleTicksRowComponent,\n          cellsData: timeCellsData,\n          formatDate: formatDate,\n          groups: groups,\n          groupOrientation: groupOrientation,\n          height: getTimeTableHeight(timeTableElementsMeta)\n        }, params));\n      });\n    }));\n  };\n  return VericalViewBase;\n}(PureComponent);\nvar VerticalView = VericalViewBase;\nvar viewCellsDataBaseComputed = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n      intervalCount = _a.intervalCount;\n    return viewCellsData(currentDate, undefined, intervalCount, [], startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\nvar DayViewBase = /*#__PURE__*/function (_super) {\n  __extends(DayViewBase, _super);\n  function DayViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DayViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n      timeScaleLabelComponent = _a.timeScaleLabelComponent,\n      timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n      timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      cellDuration = _a.cellDuration,\n      viewName = _a.name,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"DayView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed,\n      type: VIEW_TYPES.DAY,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n  DayViewBase.defaultProps = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1\n  };\n  DayViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return DayViewBase;\n}(PureComponent);\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\nvar DayView = DayViewBase;\nvar DAYS_IN_WEEK = 7;\nvar viewCellsDataBaseComputed$1 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var firstDayOfWeek = _a.firstDayOfWeek,\n      intervalCount = _a.intervalCount,\n      excludedDays = _a.excludedDays,\n      currentDate = _a.currentDate;\n    return viewCellsData(currentDate, firstDayOfWeek, intervalCount * DAYS_IN_WEEK, excludedDays, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\nvar WeekViewBase = /*#__PURE__*/function (_super) {\n  __extends(WeekViewBase, _super);\n  function WeekViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WeekViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n      timeScaleLabelComponent = _a.timeScaleLabelComponent,\n      timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n      timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      cellDuration = _a.cellDuration,\n      excludedDays = _a.excludedDays,\n      viewName = _a.name,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$1,\n      type: VIEW_TYPES.WEEK,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n  WeekViewBase.defaultProps = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week'\n  };\n  WeekViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return WeekViewBase;\n}(PureComponent);\n// tslint:disable: max-line-length\n/***\r\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\nvar WeekView = WeekViewBase;\nvar viewCellsDataBaseComputed$2 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n      firstDayOfWeek = _a.firstDayOfWeek,\n      intervalCount = _a.intervalCount;\n    return monthCellsData(currentDate, firstDayOfWeek, intervalCount, Date.now());\n  };\n};\nvar calculateAppointmentsIntervalsBaseComputed$1 = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n      startViewDate = _a.startViewDate,\n      endViewDate = _a.endViewDate,\n      excludedDays = _a.excludedDays;\n    return calculateMonthDateIntervals(appointments, startViewDate, endViewDate);\n  };\n};\nvar MonthViewBase = /*#__PURE__*/function (_super) {\n  __extends(MonthViewBase, _super);\n  function MonthViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MonthViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      viewName = _a.name,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName;\n    return createElement(Plugin, {\n      name: \"MonthView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$2,\n      type: VIEW_TYPES.MONTH,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed$1,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent\n    }));\n  };\n  MonthViewBase.defaultProps = {\n    intervalCount: 1,\n    name: 'Month'\n  };\n  MonthViewBase.components = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return MonthViewBase;\n}(PureComponent);\n// tslint:disable: max-line-length\n/***\r\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\r\n * An appointment's size depends on its duration in days.\r\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\r\n * The time scale and all-day panel are not available in this view.\r\n * */\nvar MonthView = MonthViewBase;\nvar ToolbarBase = /*#__PURE__*/function (_super) {\n  __extends(ToolbarBase, _super);\n  function ToolbarBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ToolbarBase.prototype.render = function () {\n    var _a = this.props,\n      Root = _a.rootComponent,\n      FlexibleSpaceComponent = _a.flexibleSpaceComponent;\n    return createElement(Plugin, {\n      name: \"Toolbar\"\n    }, createElement(Template, {\n      name: \"header\"\n    }, createElement(Root, null, createElement(TemplatePlaceholder, {\n      name: \"toolbarContent\"\n    })), createElement(TemplatePlaceholder, null)), createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(FlexibleSpaceComponent, null)));\n  };\n  ToolbarBase.components = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace'\n  };\n  return ToolbarBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's toolbar. */\nvar Toolbar = ToolbarBase;\nvar pluginDependencies = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar navigate = function (action, currentView, intervalCount) {\n  return function (direction, nextDate) {\n    return action({\n      direction: direction,\n      nextDate: nextDate,\n      amount: intervalCount,\n      step: currentView.type\n    });\n  };\n};\nvar DateNavigatorBase = /*#__PURE__*/function (_super) {\n  __extends(DateNavigatorBase, _super);\n  function DateNavigatorBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      visible: false\n    };\n    _this.setRootRef = function (target) {\n      _this.target = target;\n    };\n    _this.handleVisibilityToggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      });\n    };\n    _this.handleHide = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n    _this.navigateAction = memoize(function (changeCurrentDate, currentView, intervalCount, navigateAction) {\n      return navigateAction(changeCurrentDate, currentView, intervalCount);\n    });\n    return _this;\n  }\n  DateNavigatorBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      Root = _a.rootComponent,\n      Overlay = _a.overlayComponent,\n      OpenButton = _a.openButtonComponent,\n      NavigationButton = _a.navigationButtonComponent,\n      Calendar = _a.calendarComponent,\n      CalendarRow = _a.calendarRowComponent,\n      CalendarCell = _a.calendarCellComponent,\n      CalendarHeaderRow = _a.calendarHeaderRowComponent,\n      CalendarHeaderCell = _a.calendarHeaderCellComponent,\n      CalendarText = _a.calendarTextComponent,\n      CalendarNavigationButton = _a.calendarNavigationButtonComponent,\n      CalendarNavigator = _a.calendarNavigatorComponent;\n    var visible = this.state.visible;\n    return createElement(Plugin, {\n      name: \"DateNavigator\",\n      dependencies: pluginDependencies\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var currentDate = _a.currentDate,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        firstDayOfWeek = _a.firstDayOfWeek,\n        currentView = _a.currentView,\n        intervalCount = _a.intervalCount,\n        formatDate = _a.formatDate;\n      var changeCurrentDate = _b.changeCurrentDate;\n      var navigateAction = _this.navigateAction(changeCurrentDate, currentView, intervalCount, navigate);\n      var calendarDateChanged = function (nextDate) {\n        navigateAction(undefined, nextDate);\n        _this.handleHide();\n      };\n      var navigatorText = viewBoundText(startViewDate, endViewDate, currentView.type, currentDate, intervalCount, formatDate);\n      return createElement(Fragment, null, createElement(Root, {\n        navigationButtonComponent: NavigationButton,\n        openButtonComponent: OpenButton,\n        navigatorText: navigatorText,\n        rootRef: _this.setRootRef,\n        onVisibilityToggle: _this.handleVisibilityToggle,\n        onNavigate: navigateAction\n      }), createElement(Overlay, {\n        visible: visible,\n        target: _this.target,\n        onHide: _this.handleHide\n      }, createElement(Calendar, {\n        selectedDate: currentDate,\n        firstDayOfWeek: firstDayOfWeek,\n        getCells: monthCellsData,\n        textComponent: CalendarText,\n        navigationButtonComponent: CalendarNavigationButton,\n        rowComponent: CalendarRow,\n        cellComponent: CalendarCell,\n        headerRowComponent: CalendarHeaderRow,\n        headerCellComponent: CalendarHeaderCell,\n        navigatorComponent: CalendarNavigator,\n        onSelectedDateChange: calendarDateChanged,\n        formatDate: formatDate\n      })));\n    }), createElement(TemplatePlaceholder, null)));\n  };\n  DateNavigatorBase.components = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton'\n  };\n  return DateNavigatorBase;\n}(PureComponent);\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nvar DateNavigator = DateNavigatorBase;\nvar pluginDependencies$1 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar ViewSwitcherBase = /*#__PURE__*/function (_super) {\n  __extends(ViewSwitcherBase, _super);\n  function ViewSwitcherBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ViewSwitcherBase.prototype.render = function () {\n    var Switcher = this.props.switcherComponent;\n    return createElement(Plugin, {\n      name: \"ViewSwitcher\",\n      dependencies: pluginDependencies$1\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var currentView = _a.currentView,\n        availableViews = _a.availableViews;\n      var setCurrentViewName = _b.setCurrentViewName;\n      return createElement(Switcher, {\n        currentView: currentView,\n        availableViews: availableViews,\n        onChange: setCurrentViewName\n      });\n    })));\n  };\n  ViewSwitcherBase.components = {\n    switcherComponent: 'Switcher'\n  };\n  return ViewSwitcherBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's view switcher. */\nvar ViewSwitcher = ViewSwitcherBase;\nvar AppointmentPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"appointment\",\n    params: params\n  });\n};\nvar renderAppointments = function (rects) {\n  return rects.map(function (_a) {\n    var dataItem = _a.dataItem,\n      rectType = _a.type,\n      fromPrev = _a.fromPrev,\n      toNext = _a.toNext,\n      durationType = _a.durationType,\n      resources = _a.resources,\n      key = _a.key,\n      geometry = __rest(_a, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"key\"]);\n    return createElement(AppointmentPlaceholder, {\n      key: key,\n      type: rectType,\n      data: dataItem,\n      fromPrev: fromPrev,\n      toNext: toNext,\n      durationType: durationType,\n      resources: resources,\n      style: getAppointmentStyle(geometry)\n    });\n  });\n};\nvar pluginDependencies$2 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}];\nvar AppointmentsBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentsBase, _super);\n  function AppointmentsBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.updateTimeTableAppointments = memoize(function (timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate, placeAppointmentsNextToEachOther) {\n      if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n      var appointmentType = {\n        growDirection: VERTICAL_TYPE,\n        multiline: false\n      };\n      var getRects = getVerticalRectByAppointmentData;\n      if (currentView.type === VIEW_TYPES.MONTH) {\n        appointmentType = {\n          growDirection: HORIZONTAL_TYPE,\n          multiline: true\n        };\n        getRects = getHorizontalRectByAppointmentData;\n      }\n      return renderAppointments(calculateRectByDateAndGroupIntervals(appointmentType, timeTableAppointments, getRects, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        cellDuration: cellDuration,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther: placeAppointmentsNextToEachOther\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    _this.updateAllDayAppointments = memoize(function (allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, getGroupOrientation, groupByDate) {\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n      if (!isAllDayElementsMetaActual(viewCellsData, allDayElementsMeta, groupOrientation, groupCount)) {\n        return null;\n      }\n      return renderAppointments(calculateRectByDateAndGroupIntervals({\n        growDirection: HORIZONTAL_TYPE,\n        multiline: false\n      }, allDayAppointments, getHorizontalRectByAppointmentData, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: allDayElementsMeta\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    return _this;\n  }\n  AppointmentsBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      SplitIndicator = _a.splitIndicatorComponent,\n      Appointment = _a.appointmentComponent,\n      AppointmentContent = _a.appointmentContentComponent,\n      Container = _a.containerComponent,\n      recurringIconComponent = _a.recurringIconComponent,\n      placeAppointmentsNextToEachOther = _a.placeAppointmentsNextToEachOther;\n    return createElement(Plugin, {\n      name: \"Appointments\",\n      dependencies: pluginDependencies$2\n    }, createElement(Template, {\n      name: \"timeTableAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var timeTableAppointments = _a.timeTableAppointments,\n        viewCellsData = _a.viewCellsData,\n        timeTableElementsMeta = _a.timeTableElementsMeta,\n        currentView = _a.currentView,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        cellDuration = _a.cellDuration,\n        groupOrientation = _a.groupOrientation,\n        groups = _a.groups,\n        groupByDate = _a.groupByDate;\n      return _this.updateTimeTableAppointments(timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate, placeAppointmentsNextToEachOther);\n    })), createElement(Template, {\n      name: \"allDayAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var allDayAppointments = _a.allDayAppointments,\n        viewCellsData = _a.viewCellsData,\n        allDayElementsMeta = _a.allDayElementsMeta,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        groupOrientation = _a.groupOrientation,\n        currentView = _a.currentView,\n        groups = _a.groups,\n        groupByDate = _a.groupByDate;\n      return _this.updateAllDayAppointments(allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, groupOrientation, groupByDate);\n    })), createElement(Template, {\n      name: \"appointment\"\n    }, function (_a) {\n      var style = _a.style,\n        params = __rest(_a, [\"style\"]);\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate;\n        return createElement(Container, {\n          style: style\n        }, createElement(TemplatePlaceholder, {\n          name: \"appointmentTop\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.fromPrev\n          }\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentContent\",\n          params: __assign(__assign({}, params), {\n            formatDate: formatDate\n          })\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentBottom\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.toNext\n          }\n        }));\n      });\n    }), createElement(Template, {\n      name: \"appointmentContent\"\n    }, function (_a) {\n      var onClick = _a.onClick,\n        onDoubleClick = _a.onDoubleClick,\n        formatDate = _a.formatDate,\n        data = _a.data,\n        type = _a.type,\n        fromPrev = _a.fromPrev,\n        toNext = _a.toNext,\n        durationType = _a.durationType,\n        resources = _a.resources,\n        forwardedRef = _a.forwardedRef,\n        restParams = __rest(_a, [\"onClick\", \"onDoubleClick\", \"formatDate\", \"data\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"forwardedRef\"]);\n      return createElement(Appointment, __assign({\n        forwardedRef: forwardedRef,\n        data: data,\n        resources: resources\n      }, createClickHandlers(onClick, onDoubleClick), restParams), fromPrev && createElement(SplitIndicator, {\n        position: POSITION_START,\n        appointmentType: type\n      }), createElement(AppointmentContent, {\n        data: data,\n        type: type,\n        durationType: durationType,\n        recurringIconComponent: recurringIconComponent,\n        formatDate: formatDate,\n        resources: resources\n      }), toNext && createElement(SplitIndicator, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }));\n  };\n  AppointmentsBase.components = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  AppointmentsBase.defaultProps = {\n    placeAppointmentsNextToEachOther: false\n  };\n  return AppointmentsBase;\n}(PureComponent);\n/** A plugin that renders appointments. */\nvar Appointments = AppointmentsBase;\nvar isMonthView = function (currentView) {\n  return currentView.type === VIEW_TYPES.MONTH;\n};\nvar isVerticalGrouping = function (currentView, groupOrientation) {\n  return (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION;\n};\nvar pluginDependencies$3 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\nvar defaultMessages = {\n  allDay: 'All Day'\n};\nvar AllDayAppointmentLayerPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayAppointmentLayer\"\n  });\n};\nvar AllDayPanelPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanel\",\n    params: params\n  });\n};\nvar CellPlaceholder$1 = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanelCell\",\n    params: params\n  });\n};\nvar AllDayTitlePlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayTitle\",\n    params: params\n  });\n};\nvar AllDayPanelBase = /*#__PURE__*/function (_super) {\n  __extends(AllDayPanelBase, _super);\n  function AllDayPanelBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      elementsMeta: {},\n      previousCell: null,\n      // The key has to be generated every time the Cell component is updated to rerender the Layout\n      // and, consequently, update allDayElementsMeta\n      layoutKey: 0\n    };\n    _this.allDayCellsDataComputed = memoize(function (_a) {\n      var viewCellsData = _a.viewCellsData;\n      return allDayCells(viewCellsData);\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        elementsMeta: cellElementsMeta\n      });\n    });\n    _this.allDayAppointmentsComputed = memoize(function (_a) {\n      var appointments = _a.appointments,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays;\n      var allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n      var allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n      return calculateAllDayDateIntervals(appointments, allDayLeftBound, allDayRightBound, excludedDays);\n    });\n    _this.allDayPanelExistsComputed = memoize(function (_a) {\n      var currentView = _a.currentView;\n      return !isMonthView(currentView);\n    });\n    _this.getMessageFormatter = memoize(function (messages, allDayPanelDefaultMessages) {\n      return getMessagesFormatter(__assign(__assign({}, allDayPanelDefaultMessages), messages));\n    });\n    return _this;\n  }\n  AllDayPanelBase.getDerivedStateFromProps = function (props, state) {\n    if (props.cellComponent !== state.previousCell) {\n      return __assign(__assign({}, state), {\n        previousCell: props.cellComponent,\n        layoutKey: Math.random()\n      });\n    }\n    return null;\n  };\n  AllDayPanelBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      AppointmentLayer = _a.appointmentLayerComponent,\n      Layout = _a.layoutComponent,\n      Cell = _a.cellComponent,\n      rowComponent = _a.rowComponent,\n      TitleCell = _a.titleCellComponent,\n      Container = _a.containerComponent,\n      messages = _a.messages;\n    var _b = this.state,\n      elementsMeta = _b.elementsMeta,\n      layoutKey = _b.layoutKey;\n    var getMessage = this.getMessageFormatter(messages, defaultMessages);\n    return createElement(Plugin, {\n      name: \"AllDayPanel\",\n      dependencies: pluginDependencies$3\n    }, createElement(Getter, {\n      name: \"allDayElementsMeta\",\n      value: elementsMeta\n    }), createElement(Getter, {\n      name: \"allDayCellsData\",\n      computed: this.allDayCellsDataComputed\n    }), createElement(Getter, {\n      name: \"allDayPanelExists\",\n      computed: this.allDayPanelExistsComputed\n    }), createElement(Getter, {\n      name: \"allDayAppointments\",\n      computed: this.allDayAppointmentsComputed\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation,\n          allDayCellsData = _a.allDayCellsData;\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n        return createElement(Fragment, null, createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayCellComponent: CellPlaceholder$1,\n            allDayRowComponent: rowComponent,\n            allDayCellsData: allDayCellsData\n          })\n        }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return createElement(TemplatePlaceholder, null);\n      }\n      return createElement(AllDayTitlePlaceholder, null);\n    })), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayTitleComponent: AllDayTitlePlaceholder,\n            showAllDayTitle: true\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return null;\n      }\n      return createElement(Container, null, createElement(AllDayPanelPlaceholder, null));\n    })), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        formatDate = _a.formatDate,\n        allDayCellsData = _a.allDayCellsData;\n      if (currentView.type === VIEW_TYPES.MONTH) return null;\n      return createElement(Fragment, null, createElement(Layout, {\n        cellComponent: CellPlaceholder$1,\n        rowComponent: rowComponent,\n        cellsData: allDayCellsData[0],\n        setCellElementsMeta: _this.updateCellElementsMeta,\n        formatDate: formatDate,\n        key: layoutKey\n      }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n    })), createElement(Template, {\n      name: \"allDayTitle\"\n    }, function (params) {\n      return createElement(TitleCell, __assign({\n        getMessage: getMessage\n      }, params));\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(Cell, __assign({}, params));\n    }));\n  };\n  AllDayPanelBase.defaultProps = {\n    messages: {}\n  };\n  AllDayPanelBase.components = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container'\n  };\n  return AllDayPanelBase;\n}(PureComponent);\n/** A plugin that renders the All Day Panel. */\nvar AllDayPanel = AllDayPanelBase;\nvar ViewStateBase = /*#__PURE__*/function (_super) {\n  __extends(ViewStateBase, _super);\n  function ViewStateBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.getCurrentViewComputed = memoize(function (currentViewName) {\n      return function () {\n        return currentViewName ? {\n          name: currentViewName\n        } : undefined;\n      };\n    });\n    _this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName\n    };\n    var stateHelper = createStateHelper(_this, {\n      currentDate: function () {\n        var onCurrentDateChange = _this.props.onCurrentDateChange;\n        return onCurrentDateChange;\n      },\n      currentViewName: function () {\n        var onCurrentViewNameChange = _this.props.onCurrentViewNameChange;\n        return onCurrentViewNameChange;\n      }\n    });\n    _this.changeCurrentDate = stateHelper.applyFieldReducer.bind(stateHelper, 'currentDate', changeCurrentDate);\n    _this.setCurrentViewName = stateHelper.applyFieldReducer.bind(stateHelper, 'currentViewName', setCurrentViewName);\n    return _this;\n  }\n  ViewStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.currentDate,\n      currentDate = _a === void 0 ? prevState.currentDate : _a,\n      _b = nextProps.currentViewName,\n      currentViewName = _b === void 0 ? prevState.currentViewName : _b;\n    return {\n      currentDate: currentDate,\n      currentViewName: currentViewName\n    };\n  };\n  ViewStateBase.prototype.render = function () {\n    var _a = this.state,\n      currentDate = _a.currentDate,\n      stateCurrentViewName = _a.currentViewName;\n    return createElement(Plugin, {\n      name: \"ViewState\"\n    }, createElement(Getter, {\n      name: \"currentDate\",\n      value: currentDate\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.getCurrentViewComputed(stateCurrentViewName)\n    }), createElement(Action, {\n      name: \"changeCurrentDate\",\n      action: this.changeCurrentDate\n    }), createElement(Action, {\n      name: \"setCurrentViewName\",\n      action: this.setCurrentViewName\n    }));\n  };\n  ViewStateBase.defaultProps = {\n    defaultCurrentDate: new Date()\n  };\n  return ViewStateBase;\n}(PureComponent);\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nvar ViewState = ViewStateBase;\nvar EditingStateBase = /*#__PURE__*/function (_super) {\n  __extends(EditingStateBase, _super);\n  function EditingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges\n    };\n    var stateHelper = createStateHelper(_this, {\n      editingAppointment: function () {\n        var onEditingAppointmentChange = _this.props.onEditingAppointmentChange;\n        return onEditingAppointmentChange;\n      },\n      addedAppointment: function () {\n        var onAddedAppointmentChange = _this.props.onAddedAppointmentChange;\n        return onAddedAppointmentChange;\n      },\n      appointmentChanges: function () {\n        var onAppointmentChangesChange = _this.props.onAppointmentChangesChange;\n        return onAppointmentChangesChange;\n      }\n    });\n    _this.addAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', addAppointment);\n    _this.changeAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', changeAppointment);\n    _this.cancelAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n    _this.startEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', startEditAppointment);\n    _this.stopEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', stopEditAppointment);\n    _this.changeAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', changeAppointment);\n    _this.cancelChangedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', cancelChanges);\n    _this.commitChangedAppointment = function (type) {\n      if (type === void 0) {\n        type = RECURRENCE_EDIT_SCOPE.CURRENT;\n      }\n      var _a = _this.state,\n        appointmentChanges = _a.appointmentChanges,\n        editingAppointment = _a.editingAppointment;\n      var _b = _this.props,\n        onCommitChanges = _b.onCommitChanges,\n        preCommitChanges = _b.preCommitChanges;\n      if (!editingAppointment) {\n        return;\n      }\n      var changes = !editingAppointment.rRule ? {\n        changed: changedAppointmentById(appointmentChanges, editingAppointment.id)\n      } : preCommitChanges(appointmentChanges, editingAppointment, type);\n      onCommitChanges(changes);\n      _this.cancelChangedAppointment();\n      _this.stopEditAppointment();\n    };\n    _this.commitAddedAppointment = function () {\n      var onCommitChanges = _this.props.onCommitChanges;\n      var stateAddedAppointment = _this.state.addedAppointment;\n      onCommitChanges({\n        added: stateAddedAppointment\n      });\n    };\n    _this.commitDeletedAppointment = function (_a) {\n      var deletedAppointmentData = _a.deletedAppointmentData,\n        _b = _a.type,\n        type = _b === void 0 ? 'current' : _b;\n      var _c = _this.props,\n        onCommitChanges = _c.onCommitChanges,\n        preCommitChanges = _c.preCommitChanges;\n      var changes = deletedAppointmentData.rRule ? preCommitChanges(null, deletedAppointmentData, type) : {\n        deleted: deletedAppointmentData.id\n      };\n      onCommitChanges(changes);\n    };\n    return _this;\n  }\n  EditingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.editingAppointment,\n      editingAppointment = _a === void 0 ? prevState.editingAppointment : _a,\n      _b = nextProps.appointmentChanges,\n      appointmentChanges = _b === void 0 ? prevState.appointmentChanges : _b,\n      _c = nextProps.addedAppointment,\n      addedAppointment = _c === void 0 ? prevState.addedAppointment : _c;\n    return {\n      editingAppointment: editingAppointment,\n      appointmentChanges: appointmentChanges,\n      addedAppointment: addedAppointment\n    };\n  };\n  EditingStateBase.prototype.render = function () {\n    var _a = this.state,\n      addedAppointment = _a.addedAppointment,\n      editingAppointment = _a.editingAppointment,\n      appointmentChanges = _a.appointmentChanges;\n    return createElement(Plugin, {\n      name: \"EditingState\"\n    }, createElement(Getter, {\n      name: \"editingAppointment\",\n      value: editingAppointment\n    }), createElement(Action, {\n      name: \"startEditAppointment\",\n      action: this.startEditAppointment\n    }), createElement(Action, {\n      name: \"stopEditAppointment\",\n      action: this.stopEditAppointment\n    }), createElement(Getter, {\n      name: \"appointmentChanges\",\n      value: appointmentChanges\n    }), createElement(Action, {\n      name: \"changeAppointment\",\n      action: this.changeAppointment\n    }), createElement(Action, {\n      name: \"cancelChangedAppointment\",\n      action: this.cancelChangedAppointment\n    }), createElement(Action, {\n      name: \"commitChangedAppointment\",\n      action: this.commitChangedAppointment\n    }), createElement(Getter, {\n      name: \"addedAppointment\",\n      value: addedAppointment\n    }), createElement(Action, {\n      name: \"addAppointment\",\n      action: this.addAppointment\n    }), createElement(Action, {\n      name: \"changeAddedAppointment\",\n      action: this.changeAddedAppointment\n    }), createElement(Action, {\n      name: \"cancelAddedAppointment\",\n      action: this.cancelAddedAppointment\n    }), createElement(Action, {\n      name: \"commitAddedAppointment\",\n      action: this.commitAddedAppointment\n    }), createElement(Action, {\n      name: \"commitDeletedAppointment\",\n      action: this.commitDeletedAppointment\n    }));\n  };\n  EditingStateBase.defaultProps = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChanges\n  };\n  return EditingStateBase;\n}(PureComponent);\n/** A plugin that manages the scheduler appointment editing state. */\nvar EditingState = EditingStateBase;\nvar pluginDependencies$4 = [{\n  name: 'Appointments'\n}, {\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON\n};\nvar AppointmentTooltipBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentTooltipBase, _super);\n  function AppointmentTooltipBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentMeta: function () {\n        var onAppointmentMetaChange = _this.props.onAppointmentMetaChange;\n        return onAppointmentMetaChange;\n      }\n    });\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentMeta = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    _this.onAppointmentClick = function (_a) {\n      var target = _a.target,\n        data = _a.data;\n      _this.setAppointmentMeta({\n        target: target,\n        data: data\n      });\n      _this.toggleVisibility();\n    };\n    return _this;\n  }\n  AppointmentTooltipBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n      visible = _a === void 0 ? prevState.visible : _a,\n      _b = nextProps.appointmentMeta,\n      appointmentMeta = _b === void 0 ? prevState.appointmentMeta : _b;\n    return {\n      appointmentMeta: appointmentMeta,\n      visible: visible\n    };\n  };\n  AppointmentTooltipBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      showOpenButton = _a.showOpenButton,\n      showDeleteButton = _a.showDeleteButton,\n      showCloseButton = _a.showCloseButton,\n      Layout = _a.layoutComponent,\n      headerComponent = _a.headerComponent,\n      contentComponent = _a.contentComponent,\n      commandButtonComponent = _a.commandButtonComponent,\n      recurringIconComponent = _a.recurringIconComponent;\n    var _b = this.state,\n      visible = _b.visible,\n      appointmentMeta = _b.appointmentMeta;\n    return createElement(Plugin, {\n      name: \"AppointmentTooltip\",\n      dependencies: pluginDependencies$4\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var formatDate = _a.formatDate,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var finishDeleteAppointment = _b.finishDeleteAppointment,\n        openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n      var onDeleteButtonClick = function () {\n        if (!finishDeleteAppointment) {\n          return;\n        }\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n            appointmentData: appointmentMeta.data\n          });\n        } else {\n          _this.toggleVisibility();\n          finishDeleteAppointment(appointmentMeta.data);\n        }\n      };\n      return createElement(TemplatePlaceholder, {\n        name: \"tooltip\",\n        params: {\n          commandButtonComponent: commandButtonComponent,\n          recurringIconComponent: recurringIconComponent,\n          showOpenButton: showOpenButton,\n          showDeleteButton: showDeleteButton,\n          showCloseButton: showCloseButton,\n          headerComponent: headerComponent,\n          contentComponent: contentComponent,\n          appointmentMeta: appointmentMeta,\n          appointmentResources: appointmentMeta ? getAppointmentResources(appointmentMeta.data, resources, plainResources) : [],\n          visible: visible,\n          onHide: _this.toggleVisibility,\n          commandButtonIds: commandButtonIds,\n          onDeleteButtonClick: onDeleteButtonClick,\n          formatDate: formatDate\n        }\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(Layout, __assign({}, params));\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplatePlaceholder, {\n        params: __assign(__assign({}, params), {\n          onClick: function (_a) {\n            var target = _a.target,\n              data = _a.data;\n            return _this.onAppointmentClick({\n              target: target,\n              data: data\n            });\n          }\n        })\n      });\n    }));\n  };\n  AppointmentTooltipBase.defaultProps = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false\n  };\n  AppointmentTooltipBase.components = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  return AppointmentTooltipBase;\n}(PureComponent);\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nvar AppointmentTooltip = AppointmentTooltipBase;\nvar addDoubleClickToCell = function (title, startDate, endDate, groupingInfo, resources, allDay, openFormHandler, addAppointment, params) {\n  var resourceFields = !!groupingInfo ? groupingInfo.reduce(function (acc, currentGroup) {\n    var _a;\n    return __assign(__assign({}, acc), (_a = {}, _a[currentGroup.fieldName] = currentGroup.id, _a));\n  }, {}) : {};\n  var validResourceFields = resources ? checkMultipleResourceFields(resourceFields, resources) : resourceFields;\n  var newAppointmentData = __assign({\n    title: title,\n    startDate: startDate,\n    endDate: endDate,\n    allDay: allDay\n  }, validResourceFields);\n  return createElement(TemplatePlaceholder, {\n    params: __assign(__assign({}, params), {\n      onDoubleClick: function () {\n        openFormHandler(newAppointmentData);\n        callActionIfExists(addAppointment, {\n          appointmentData: newAppointmentData\n        });\n      }\n    })\n  });\n};\nvar defaultMessages$1 = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every'\n};\nvar CommandLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"commandLayout\"\n  });\n};\nvar BasicLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"basicLayout\"\n  });\n};\nvar RecurrenceLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"recurrenceLayout\"\n  });\n};\nvar pluginDependencies$5 = [{\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}, {\n  name: 'AppointmentTooltip',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar prepareChanges = function (appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources) {\n  var isNew = !editingAppointment;\n  var changedAppointment = __assign(__assign(__assign({}, appointmentData), appointmentChanges), isNew && addedAppointment);\n  var appointmentResources = getAppointmentResources(changedAppointment, resources, plainResources);\n  var isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return {\n    changedAppointment: changedAppointment,\n    appointmentResources: appointmentResources,\n    isNew: isNew,\n    isFormEdited: isFormEdited\n  };\n};\nvar isFormFullSize = function (isFormVisible, changedAppointmentRRule, previousAppointmentRRule) {\n  return !!changedAppointmentRRule || !isFormVisible && !!previousAppointmentRRule;\n};\nvar AppointmentFormBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentFormBase, _super);\n  function AppointmentFormBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.container = createRef();\n    _this.commitChanges = memoize(function (finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment) {\n      return function () {\n        _this.toggleVisibility();\n        if (isNew) {\n          callActionIfExists(commitAddedAppointment, changedAppointment);\n        } else if (finishCommitAppointment) {\n          finishCommitAppointment();\n        }\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.cancelChanges = memoize(function (openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges, changedAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n      return function () {\n        if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n          openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n        } else {\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentChanges);\n          } else {\n            callActionIfExists(stopEditAppointment, appointmentChanges);\n            callActionIfExists(cancelChangedAppointment, appointmentChanges);\n          }\n          _this.toggleVisibility();\n        }\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.deleteAppointment = memoize(function (finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew) {\n      return function () {\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n            appointmentData: changedAppointment\n          });\n        } else {\n          callActionIfExists(finishDeleteAppointment, appointmentData);\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentData);\n          } else {\n            callActionIfExists(cancelChangedAppointment, appointmentData);\n            callActionIfExists(stopEditAppointment, appointmentData);\n          }\n          _this.toggleVisibility();\n        }\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.changeAppointmentField = memoize(function (isNew, changeAddedAppointment, changeAppointment) {\n      return function (change) {\n        if (change && change.rRule) {\n          _this.setState({\n            previousAppointment: __assign(__assign({}, _this.state.previousAppointment), {\n              rRule: change.rRule\n            })\n          });\n        }\n        if (isNew) {\n          callActionIfExists(changeAddedAppointment, {\n            change: change\n          });\n        } else {\n          callActionIfExists(changeAppointment, {\n            change: change\n          });\n        }\n      };\n    });\n    _this.getMessage = memoize(function (menuMessages, messages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    _this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {}\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentData: function () {\n        var onAppointmentDataChange = _this.props.onAppointmentDataChange;\n        return onAppointmentDataChange;\n      }\n    });\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentData = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentData', setAppointmentData);\n    _this.openFormHandler = function (appointmentData) {\n      _this.setAppointmentData({\n        appointmentData: appointmentData\n      });\n      _this.toggleVisibility();\n    };\n    return _this;\n  }\n  AppointmentFormBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n      visible = _a === void 0 ? prevState.visible : _a,\n      _b = nextProps.appointmentData,\n      appointmentData = _b === void 0 ? prevState.appointmentData : _b;\n    return {\n      appointmentData: appointmentData,\n      visible: visible\n    };\n  };\n  AppointmentFormBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      Container = _a.containerComponent,\n      Overlay = _a.overlayComponent,\n      Layout = _a.layoutComponent,\n      CommandLayout = _a.commandLayoutComponent,\n      BasicLayout = _a.basicLayoutComponent,\n      RecurrenceLayout = _a.recurrenceLayoutComponent,\n      commandButtonComponent = _a.commandButtonComponent,\n      textEditorComponent = _a.textEditorComponent,\n      labelComponent = _a.labelComponent,\n      dateEditorComponent = _a.dateEditorComponent,\n      booleanEditorComponent = _a.booleanEditorComponent,\n      selectComponent = _a.selectComponent,\n      radioGroupComponent = _a.radioGroupComponent,\n      weeklyRecurrenceSelectorComponent = _a.weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent = _a.resourceEditorComponent,\n      readOnly = _a.readOnly,\n      messages = _a.messages;\n    var _b = this.state,\n      visible = _b.visible,\n      appointmentData = _b.appointmentData,\n      previousAppointment = _b.previousAppointment;\n    var getMessage = this.getMessage(defaultMessages$1, messages);\n    return createElement(Plugin, {\n      name: \"AppointmentForm\",\n      dependencies: pluginDependencies$5\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n        stopEditAppointment = _b.stopEditAppointment,\n        cancelAddedAppointment = _b.cancelAddedAppointment,\n        cancelChangedAppointment = _b.cancelChangedAppointment;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n        changedAppointment = _c.changedAppointment,\n        isNew = _c.isNew;\n      var fullSize = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      var onHideAction = function () {\n        return visible && _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment)();\n      };\n      return createElement(Fragment, null, createElement(Container, {\n        ref: _this.container\n      }), createElement(Overlay, {\n        visible: visible,\n        onHide: onHideAction,\n        fullSize: fullSize,\n        target: _this.container\n      }, createElement(Layout, {\n        basicLayoutComponent: BasicLayoutPlaceholder,\n        commandLayoutComponent: CommandLayoutPlaceholder,\n        recurrenceLayoutComponent: RecurrenceLayoutPlaceholder,\n        isRecurrence: fullSize\n      })), createElement(TemplatePlaceholder, null));\n    })), createElement(Template, {\n      name: \"commandLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var commitAddedAppointment = _b.commitAddedAppointment,\n        finishCommitAppointment = _b.finishCommitAppointment,\n        finishDeleteAppointment = _b.finishDeleteAppointment,\n        stopEditAppointment = _b.stopEditAppointment,\n        cancelAddedAppointment = _b.cancelAddedAppointment,\n        cancelChangedAppointment = _b.cancelChangedAppointment,\n        openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n        openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n        isNew = _c.isNew,\n        changedAppointment = _c.changedAppointment,\n        isFormEdited = _c.isFormEdited;\n      var isRecurrence = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      return createElement(CommandLayout, {\n        commandButtonComponent: commandButtonComponent,\n        onCommitButtonClick: _this.commitChanges(finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment),\n        onCancelButtonClick: _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment),\n        onDeleteButtonClick: _this.deleteAppointment(finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        fullSize: isRecurrence,\n        disableSaveButton: !isFormEdited,\n        hideDeleteButton: isNew\n      });\n    })), createElement(Template, {\n      name: \"basicLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        locale = _a.locale,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var changeAppointment = _b.changeAppointment,\n        changeAddedAppointment = _b.changeAddedAppointment;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n        isNew = _c.isNew,\n        changedAppointment = _c.changedAppointment,\n        appointmentResources = _c.appointmentResources;\n      return createElement(BasicLayout, {\n        locale: locale,\n        appointmentData: visible ? changedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        booleanEditorComponent: booleanEditorComponent,\n        selectComponent: selectComponent,\n        labelComponent: labelComponent,\n        resourceEditorComponent: resourceEditorComponent,\n        fullSize: !changedAppointment.rRule,\n        resources: resources,\n        appointmentResources: appointmentResources\n      });\n    })), createElement(Template, {\n      name: \"recurrenceLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        formatDate = _a.formatDate,\n        locale = _a.locale,\n        firstDayOfWeek = _a.firstDayOfWeek;\n      var changeAddedAppointment = _b.changeAddedAppointment,\n        changeAppointment = _b.changeAppointment;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, undefined, undefined),\n        isNew = _c.isNew,\n        changedAppointment = _c.changedAppointment;\n      var isRecurrenceLayoutVisible = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      var correctedAppointment = !changedAppointment.rRule ? __assign(__assign({}, changedAppointment), {\n        rRule: previousAppointment.rRule\n      }) : changedAppointment;\n      return createElement(RecurrenceLayout, {\n        locale: locale,\n        appointmentData: visible ? correctedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        formatDate: formatDate,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        radioGroupComponent: radioGroupComponent,\n        weeklyRecurrenceSelectorComponent: weeklyRecurrenceSelectorComponent,\n        labelComponent: labelComponent,\n        selectComponent: selectComponent,\n        visible: isRecurrenceLayoutVisible,\n        firstDayOfWeek: firstDayOfWeek\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onOpenButtonClick: function () {\n              _this.openFormHandler(params.appointmentMeta.data);\n              callActionIfExists(startEditAppointment, params.appointmentMeta.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onDoubleClick: function () {\n              _this.openFormHandler(params.data);\n              callActionIfExists(startEditAppointment, params.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, isAllDayCell(params.startDate, params.endDate), _this.openFormHandler, addAppointment, params);\n      });\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, true, _this.openFormHandler, addAppointment, params);\n      });\n    }));\n  };\n  AppointmentFormBase.defaultProps = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: function () {\n      return undefined;\n    },\n    onAppointmentDataChange: function () {\n      return undefined;\n    }\n  };\n  AppointmentFormBase.components = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container'\n  };\n  return AppointmentFormBase;\n}(PureComponent);\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nvar AppointmentForm = AppointmentFormBase;\nvar renderAppointmentItems = function (items, Wrapper, draftData) {\n  return items.length > 0 ? createElement(Wrapper, null, items.map(function (draftAppointment, index) {\n    return createElement(TemplatePlaceholder, {\n      name: \"draftAppointment\",\n      key: index.toString(),\n      params: {\n        data: draftData,\n        draftAppointment: draftAppointment\n      }\n    });\n  })) : null;\n};\nvar pluginDependencies$6 = [{\n  name: 'EditingState'\n}, {\n  name: 'Appointments'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'AllDayPanel',\n  optional: true\n}];\nvar DragDropProviderBase = /*#__PURE__*/function (_super) {\n  __extends(DragDropProviderBase, _super);\n  function DragDropProviderBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeTableDraftAppointments = [];\n    _this.allDayDraftAppointments = [];\n    _this.offsetTimeTop = null;\n    _this.appointmentStartTime = null;\n    _this.appointmentEndTime = null;\n    _this.appointmentGroupingInfo = {};\n    _this.state = {\n      startTime: null,\n      endTime: null,\n      appointmentGroupingInfo: null,\n      payload: null,\n      isOutside: false,\n      allowDrag: function () {\n        return true;\n      },\n      allowResize: function () {\n        return true;\n      },\n      appointmentContentTemplateKey: 0,\n      appointmentTopTemplateKey: 0,\n      appointmentBottomTemplateKey: 0\n    };\n    _this.handleDrop = function (_a) {\n      var finishCommitAppointment = _a.finishCommitAppointment;\n      return function () {\n        finishCommitAppointment();\n        _this.resetCache();\n      };\n    };\n    _this.handleLeave = function () {\n      _this.setState({\n        isOutside: true\n      });\n    };\n    return _this;\n  }\n  DragDropProviderBase.getDerivedStateFromProps = function (props, state) {\n    var isAllowDragSame = props.allowDrag === state.allowDrag;\n    var isAllowResizeSame = props.allowResize === state.allowResize;\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n    return __assign(__assign({}, state), {\n      appointmentContentTemplateKey: isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey: isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey: isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize\n    });\n  };\n  DragDropProviderBase.prototype.onPayloadChange = function (actions) {\n    var _this = this;\n    return function (args) {\n      return _this.handlePayloadChange(args, actions);\n    };\n  };\n  DragDropProviderBase.prototype.calculateNextBoundaries = function (getters, actions, scrollSpeed) {\n    var _this = this;\n    return function (args) {\n      return _this.calculateBoundaries(args, getters, actions, scrollSpeed);\n    };\n  };\n  DragDropProviderBase.prototype.resetCache = function () {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false\n    });\n  };\n  DragDropProviderBase.prototype.applyChanges = function (startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: __assign(__assign({\n        startDate: startTime,\n        endDate: endTime\n      }, payload.allDay && {\n        allDay: undefined\n      }), this.appointmentGroupingInfo)\n    });\n    this.setState({\n      startTime: startTime,\n      endTime: endTime,\n      payload: payload,\n      isOutside: false,\n      appointmentGroupingInfo: appointmentGroupingInfo\n    });\n  };\n  DragDropProviderBase.prototype.handlePayloadChange = function (_a, _b) {\n    var payload = _a.payload;\n    var finishCommitAppointment = _b.finishCommitAppointment;\n    var isOutside = this.state.isOutside;\n    if (payload || !isOutside) return;\n    finishCommitAppointment();\n    this.resetCache();\n  };\n  DragDropProviderBase.prototype.calculateBoundaries = function (_a, _b, _c, scrollSpeed) {\n    var payload = _a.payload,\n      clientOffset = _a.clientOffset;\n    var viewCellsData = _b.viewCellsData,\n      allDayCellsData = _b.allDayCellsData,\n      startViewDate = _b.startViewDate,\n      endViewDate = _b.endViewDate,\n      excludedDays = _b.excludedDays,\n      currentView = _b.currentView,\n      timeTableElementsMeta = _b.timeTableElementsMeta,\n      allDayElementsMeta = _b.allDayElementsMeta,\n      scrollingStrategy = _b.scrollingStrategy,\n      grouping = _b.grouping,\n      resources = _b.resources,\n      groups = _b.groups,\n      getGroupOrientation = _b.groupOrientation,\n      groupByDate = _b.groupByDate;\n    var changeAppointment = _c.changeAppointment,\n      startEditAppointment = _c.startEditAppointment;\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n    var tableCellElementsMeta = timeTableElementsMeta;\n    var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n    // AllDayPanel doesn't always exist\n    var allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects ? allDayElementsMeta : {\n      getCellRects: []\n    };\n    var timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    var allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n    var targetData = cellData(timeTableIndex, allDayIndex, viewCellsData, allDayCellsData);\n    var targetType = cellType(targetData);\n    var insidePart = calculateInsidePart(clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex);\n    var cellDurationMinutes = intervalDuration(targetData, 'minutes');\n    var _d = calculateAppointmentTimeBoundaries(payload, targetData, targetType, cellDurationMinutes, insidePart, this.offsetTimeTop),\n      appointmentStartTime = _d.appointmentStartTime,\n      appointmentEndTime = _d.appointmentEndTime,\n      offsetTimeTop = _d.offsetTimeTop;\n    var appointmentGroups = calculateAppointmentGroups(targetData.groupingInfo, resources, payload);\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop;\n    var _e = this.state,\n      startTime = _e.startTime,\n      endTime = _e.endTime,\n      appointmentGroupingInfo = _e.appointmentGroupingInfo;\n    if (!appointmentDragged(this.appointmentStartTime, startTime, this.appointmentEndTime, endTime, this.appointmentGroupingInfo, appointmentGroupingInfo)) {\n      return;\n    }\n    var draftAppointments = [{\n      dataItem: __assign(__assign(__assign({}, payload), {\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime\n      }), this.appointmentGroupingInfo),\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime\n    }];\n    var _f = calculateDraftAppointments(allDayIndex, draftAppointments, startViewDate, endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta, targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups, groupOrientation, groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name)),\n      allDayDraftAppointments = _f.allDayDraftAppointments,\n      timeTableDraftAppointments = _f.timeTableDraftAppointments;\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n    this.applyChanges(this.appointmentStartTime, this.appointmentEndTime, payload, startEditAppointment, changeAppointment, this.appointmentGroupingInfo);\n  };\n  DragDropProviderBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.state,\n      payload = _a.payload,\n      appointmentContentTemplateKey = _a.appointmentContentTemplateKey,\n      appointmentBottomTemplateKey = _a.appointmentBottomTemplateKey,\n      appointmentTopTemplateKey = _a.appointmentTopTemplateKey;\n    var _b = this.props,\n      Container = _b.containerComponent,\n      DraftAppointment = _b.draftAppointmentComponent,\n      SourceAppointment = _b.sourceAppointmentComponent,\n      Resize = _b.resizeComponent,\n      allowDrag = _b.allowDrag,\n      allowResize = _b.allowResize,\n      scrollSpeed = _b.scrollSpeed;\n    var draftData = __assign(__assign({}, payload), {\n      startDate: this.appointmentStartTime,\n      endDate: this.appointmentEndTime\n    });\n    return createElement(Plugin, {\n      name: \"DragDropProvider\",\n      dependencies: pluginDependencies$6\n    }, createElement(Template, {\n      name: \"body\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var viewCellsData = _a.viewCellsData,\n        allDayCellsData = _a.allDayCellsData,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays,\n        timeTableElementsMeta = _a.timeTableElementsMeta,\n        allDayElementsMeta = _a.allDayElementsMeta,\n        scrollingStrategy = _a.scrollingStrategy,\n        grouping = _a.grouping,\n        resources = _a.resources,\n        groups = _a.groups,\n        currentView = _a.currentView,\n        groupByDate = _a.groupByDate,\n        groupOrientation = _a.groupOrientation;\n      var changeAppointment = _b.changeAppointment,\n        startEditAppointment = _b.startEditAppointment,\n        finishCommitAppointment = _b.finishCommitAppointment;\n      var calculateBoundariesByMove = _this.calculateNextBoundaries({\n        viewCellsData: viewCellsData,\n        allDayCellsData: allDayCellsData,\n        currentView: currentView,\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        excludedDays: excludedDays,\n        timeTableElementsMeta: timeTableElementsMeta,\n        allDayElementsMeta: allDayElementsMeta,\n        scrollingStrategy: scrollingStrategy,\n        resources: resources,\n        grouping: grouping,\n        groups: groups,\n        groupByDate: groupByDate,\n        groupOrientation: groupOrientation\n      }, {\n        changeAppointment: changeAppointment,\n        startEditAppointment: startEditAppointment\n      }, scrollSpeed);\n      return createElement(DragDropProvider$1, {\n        onChange: _this.onPayloadChange({\n          finishCommitAppointment: finishCommitAppointment\n        })\n      }, createElement(DropTarget, {\n        onOver: calculateBoundariesByMove,\n        onEnter: calculateBoundariesByMove,\n        onDrop: _this.handleDrop({\n          finishCommitAppointment: finishCommitAppointment\n        }),\n        onLeave: _this.handleLeave\n      }, createElement(PlaceholderWithRef, null)));\n    })), createElement(Template, {\n      name: \"appointmentContent\",\n      predicate: function (_a) {\n        var data = _a.data;\n        return allowDrag(data);\n      },\n      key: appointmentContentTemplateKey\n    }, function (_a) {\n      var styles = _a.styles,\n        params = __rest(_a, [\"styles\"]);\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, params.data), {\n          type: params.type\n        })\n      }, payload && params.data.id === payload.id ? createElement(SourceAppointment, __assign({}, params)) : createElement(PlaceholderWithRef, {\n        params: __assign(__assign({}, params), {\n          draggable: true\n        })\n      }));\n    }), createElement(Template, {\n      name: \"appointmentTop\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentTopTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n        type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_TOP,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_START,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"appointmentBottom\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentBottomTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n        type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_BOTTOM,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) !== VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), renderAppointmentItems(_this.timeTableDraftAppointments, Container, draftData), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"draftAppointment\"\n    }, function (_a) {\n      var data = _a.data,\n        draftAppointment = _a.draftAppointment,\n        restParams = __rest(_a, [\"data\", \"draftAppointment\"]);\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n        var dataItem = draftAppointment.dataItem,\n          type = draftAppointment.type,\n          fromPrev = draftAppointment.fromPrev,\n          toNext = draftAppointment.toNext,\n          durationType = draftAppointment.durationType,\n          geometry = __rest(draftAppointment, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\"]);\n        return createElement(DraftAppointment, __assign({\n          data: data,\n          resources: getAppointmentResources(dataItem, resources, plainResources),\n          durationType: durationType,\n          style: getAppointmentStyle(geometry),\n          type: type,\n          fromPrev: fromPrev,\n          toNext: toNext,\n          formatDate: formatDate\n        }, restParams));\n      });\n    }));\n  };\n  DragDropProviderBase.components = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize'\n  };\n  DragDropProviderBase.defaultProps = {\n    allowDrag: function () {\n      return true;\n    },\n    allowResize: function () {\n      return true;\n    },\n    scrollSpeed: SCROLL_SPEED_PX\n  };\n  return DragDropProviderBase;\n}(PureComponent);\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nvar DragDropProvider = DragDropProviderBase;\nvar pluginDependencies$7 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar defaultMessages$2 = {\n  today: 'Today'\n};\nvar TodayButtonBase = /*#__PURE__*/function (_super) {\n  __extends(TodayButtonBase, _super);\n  function TodayButtonBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TodayButtonBase.prototype.render = function () {\n    var _a = this.props,\n      Button = _a.buttonComponent,\n      messages = _a.messages;\n    var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$2), messages));\n    return createElement(Plugin, {\n      name: \"TodayButton\",\n      dependencies: pluginDependencies$7\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var changeCurrentDate = _a.changeCurrentDate;\n      var setCurrentDate = function (nextDate) {\n        return changeCurrentDate({\n          nextDate: nextDate\n        });\n      };\n      return createElement(Button, {\n        getMessage: getMessage,\n        setCurrentDate: setCurrentDate\n      });\n    }), createElement(TemplatePlaceholder, null)));\n  };\n  TodayButtonBase.components = {\n    buttonComponent: 'Button'\n  };\n  return TodayButtonBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nvar TodayButton = TodayButtonBase;\nvar _a;\nvar pluginDependencies$8 = [{\n  name: 'EditingState'\n}];\nvar defaultAvailableOperations = [{\n  value: RECURRENCE_EDIT_SCOPE.CURRENT\n}, {\n  value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING\n}, {\n  value: RECURRENCE_EDIT_SCOPE.ALL\n}];\nvar defaultMessages$3 = (_a = {}, _a[RECURRENCE_EDIT_SCOPE.CURRENT] = 'This appointment', _a[RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING] = 'This and following appointments', _a[RECURRENCE_EDIT_SCOPE.ALL] = 'All appointments', _a.menuEditingTitle = 'Edit recurring appointment', _a.menuDeletingTitle = 'Delete recurring appointment', _a.cancelButton = 'Cancel', _a.commitButton = 'OK', _a);\nvar EditRecurrenceMenuBase = /*#__PURE__*/function (_super) {\n  __extends(EditRecurrenceMenuBase, _super);\n  function EditRecurrenceMenuBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.modalContainer = createRef();\n    _this.state = {\n      isOpen: false,\n      deletedAppointmentData: null\n    };\n    _this.finishCommitAppointment = function (payload, _a, _b) {\n      var editingAppointment = _a.editingAppointment;\n      var commitChangedAppointment = _b.commitChangedAppointment;\n      if (editingAppointment && !editingAppointment.rRule) {\n        commitChangedAppointment();\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: null\n        });\n      }\n    };\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n      if (payload && !payload.rRule) {\n        commitDeletedAppointment({\n          deletedAppointmentData: payload\n        });\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: payload\n        });\n      }\n    };\n    _this.commit = memoize(function (editAction, deleteAction, payload) {\n      return function (type) {\n        if (payload) {\n          deleteAction({\n            deletedAppointmentData: payload,\n            type: type\n          });\n        } else {\n          editAction(type);\n        }\n        _this.closeMenu();\n      };\n    });\n    _this.closeMenu = function () {\n      _this.setState({\n        isOpen: false,\n        deletedAppointmentData: null\n      });\n    };\n    _this.cancelEditing = memoize(function (cancelAction, stopEditAction) {\n      return function () {\n        stopEditAction();\n        cancelAction();\n        _this.closeMenu();\n      };\n    });\n    _this.availableOperations = memoize(function (getMessage, menuAvailableOperations) {\n      return menuAvailableOperations.map(function (_a) {\n        var value = _a.value;\n        return {\n          value: value,\n          title: getMessage([value])\n        };\n      });\n    });\n    _this.getMessage = memoize(function (messages, menuMessages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    return _this;\n  }\n  EditRecurrenceMenuBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.state,\n      isOpen = _a.isOpen,\n      deletedAppointmentData = _a.deletedAppointmentData;\n    var _b = this.props,\n      Layout = _b.layoutComponent,\n      Overlay = _b.overlayComponent,\n      Container = _b.containerComponent,\n      buttonComponent = _b.buttonComponent,\n      messages = _b.messages;\n    var getMessage = this.getMessage(messages, defaultMessages$3);\n    var availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n    return createElement(Plugin, {\n      name: \"EditRecurrenceMenu\",\n      dependencies: pluginDependencies$8\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplatePlaceholder, null), createElement(Container, {\n      ref: this.modalContainer\n    }), createElement(TemplatePlaceholder, {\n      name: \"overlay\"\n    })), createElement(Template, {\n      name: \"overlay\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment,\n        commitDeletedAppointment = _a.commitDeletedAppointment,\n        cancelChangedAppointment = _a.cancelChangedAppointment,\n        stopEditAppointment = _a.stopEditAppointment;\n      var commit = _this.commit(commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData);\n      var cancelEditing = _this.cancelEditing(cancelChangedAppointment, stopEditAppointment);\n      return createElement(Overlay, {\n        target: _this.modalContainer,\n        visible: isOpen,\n        onHide: _this.closeMenu\n      }, createElement(Layout, {\n        isDeleting: !!deletedAppointmentData,\n        buttonComponent: buttonComponent,\n        handleClose: cancelEditing,\n        commit: commit,\n        availableOperations: availableOperations,\n        getMessage: getMessage\n      }));\n    })));\n  };\n  EditRecurrenceMenuBase.components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container'\n  };\n  return EditRecurrenceMenuBase;\n}(PureComponent);\n/**\r\n * A plugin that renders the Scheduler's edit menu.\r\n * Should not be used with the `IntegratedEditing` plugin.\r\n */\nvar EditRecurrenceMenu = EditRecurrenceMenuBase;\nvar pluginDependencies$9 = [{\n  name: 'EditingState'\n}];\nvar IntegratedEditingBase = /*#__PURE__*/function (_super) {\n  __extends(IntegratedEditingBase, _super);\n  function IntegratedEditingBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.finishCommitAppointment = function (payload, getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment;\n      commitChangedAppointment();\n    };\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n      commitDeletedAppointment({\n        deletedAppointmentData: payload\n      });\n    };\n    return _this;\n  }\n  IntegratedEditingBase.prototype.render = function () {\n    return createElement(Plugin, {\n      name: \"IntegratedEditing\",\n      dependencies: pluginDependencies$9\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }));\n  };\n  IntegratedEditingBase.defaultProps = {\n    totalCount: 0\n  };\n  return IntegratedEditingBase;\n}(PureComponent);\n/** A plugin that allows implementing a editing calculation logic. */\nvar IntegratedEditing = IntegratedEditingBase;\nvar pluginDependencies$a = [{\n  name: 'Appointments'\n}];\nvar addResourcesToTimeTableAppointments = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n    resources = _a.resources,\n    plainResources = _a.plainResources;\n  return timeTableAppointments && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\n};\nvar addResourcesToAllDayAppointments = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n    resources = _a.resources,\n    plainResources = _a.plainResources;\n  return allDayAppointments && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n};\nvar ResourcesBase = memo(function (_a) {\n  var data = _a.data,\n    mainResourceName = _a.mainResourceName,\n    palette = _a.palette;\n  var convertResources = function (_a) {\n    var resources = _a.resources;\n    return convertResourcesToPlain(resources);\n  };\n  return createElement(Plugin, {\n    name: \"Resources\",\n    dependencies: pluginDependencies$a\n  }, createElement(Getter, {\n    name: \"resources\",\n    value: validateResources(data, mainResourceName, palette)\n  }), createElement(Getter, {\n    name: \"plainResources\",\n    computed: convertResources\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: addResourcesToTimeTableAppointments\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: addResourcesToAllDayAppointments\n  }));\n});\n/** A plugin that manages schedule's resources. */\nvar Resources = ResourcesBase;\nvar defaultMessages$4 = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?'\n};\nvar pluginDependencies$b = [{\n  name: 'EditingState'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete'\n};\nvar ConfirmationDialogBase = function (_a) {\n  var messages = _a.messages,\n    Overlay = _a.overlayComponent,\n    Layout = _a.layoutComponent,\n    Container = _a.containerComponent,\n    buttonComponent = _a.buttonComponent,\n    ignoreDelete = _a.ignoreDelete,\n    ignoreCancel = _a.ignoreCancel;\n  var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$4), messages));\n  var modalContainer = useRef();\n  var _b = __read(useState(false), 2),\n    visible = _b[0],\n    setVisible = _b[1];\n  var _c = __read(useState(''), 2),\n    actionType = _c[0],\n    setActionType = _c[1];\n  var _d = __read(useState(''), 2),\n    hideActionName = _d[0],\n    setHideActionName = _d[1];\n  var _e = __read(useState({}), 2),\n    appointmentData = _e[0],\n    setAppointmentData = _e[1];\n  var toggleVisibility = useCallback(function () {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n  var confirmCancelChanges = useCallback(function (hideAction) {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n  var confirmDelete = useCallback(function (_a) {\n    var hideAction = _a.hideActionName,\n      changedAppointment = _a.appointmentData;\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n  var confirmAction = useCallback(function (isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n    return function () {\n      hideEditor();\n      toggleVisibility();\n      if (isNewAppointment) {\n        cancelAddedAppointment();\n      } else {\n        stopEditAppointment();\n        cancelChangedAppointment();\n      }\n      if (actionType === ACTION_TYPES.DELETE) {\n        finishDeleteAppointment(appointmentData);\n      }\n    };\n  }, [toggleVisibility, actionType, appointmentData]);\n  return createElement(Plugin, {\n    name: \"ConfirmationDialog\",\n    dependencies: pluginDependencies$b\n  }, !ignoreCancel && createElement(Action, {\n    name: \"openCancelConfirmationDialog\",\n    action: confirmCancelChanges\n  }), !ignoreDelete && createElement(Action, {\n    name: \"openDeleteConfirmationDialog\",\n    action: confirmDelete\n  }), createElement(Template, {\n    name: \"schedulerRoot\"\n  }, createElement(TemplatePlaceholder, null), createElement(Container, {\n    ref: modalContainer\n  }), createElement(TemplatePlaceholder, {\n    name: \"confirmationDialogOverlay\"\n  })), createElement(Template, {\n    name: \"confirmationDialogOverlay\"\n  }, createElement(TemplateConnector, null, function (_a, actions) {\n    var editingAppointment = _a.editingAppointment;\n    var handleConfirm = confirmAction(!editingAppointment, actions[hideActionName], actions.stopEditAppointment, actions.finishDeleteAppointment, actions.cancelAddedAppointment, actions.cancelChangedAppointment);\n    return createElement(Overlay, {\n      target: modalContainer,\n      visible: visible,\n      onHide: toggleVisibility\n    }, createElement(Layout, {\n      buttonComponent: buttonComponent,\n      handleCancel: toggleVisibility,\n      handleConfirm: handleConfirm,\n      getMessage: getMessage,\n      isDeleting: actionType === ACTION_TYPES.DELETE,\n      appointmentData: appointmentData\n    }));\n  })));\n};\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button'\n};\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false\n};\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nvar ConfirmationDialog = ConfirmationDialogBase;\nvar GroupingStateBase = /*#__PURE__*/function (_super) {\n  __extends(GroupingStateBase, _super);\n  function GroupingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups\n    };\n    _this.stateHelper = createStateHelper(_this, {\n      expandedGroups: function () {\n        var onExpandedGroupsChange = _this.props.onExpandedGroupsChange;\n        return onExpandedGroupsChange;\n      }\n    });\n    _this.toggleGroupExpanded = _this.stateHelper.applyReducer.bind(_this.stateHelper, toggleExpandedGroups);\n    return _this;\n  }\n  GroupingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.grouping,\n      grouping = _a === void 0 ? prevState.grouping : _a,\n      _b = nextProps.expandedGroups,\n      expandedGroups = _b === void 0 ? prevState.expandedGroups : _b;\n    return {\n      grouping: grouping,\n      expandedGroups: expandedGroups\n    };\n  };\n  GroupingStateBase.prototype.render = function () {\n    var _a = this.state,\n      grouping = _a.grouping,\n      expandedGroups = _a.expandedGroups;\n    var _b = this.props,\n      groupByDate = _b.groupByDate,\n      groupOrientation = _b.groupOrientation;\n    return createElement(Plugin, {\n      name: \"GroupingState\"\n    }, createElement(Getter, {\n      name: \"grouping\",\n      value: grouping\n    }), createElement(Getter, {\n      name: \"groupByDate\",\n      value: groupByDate\n    }), createElement(Getter, {\n      name: \"groupOrientation\",\n      value: groupOrientation\n    }), createElement(Getter, {\n      name: \"expandedGroups\",\n      value: expandedGroups\n    }), createElement(Action, {\n      name: \"toggleGroupExpanded\",\n      action: this.toggleGroupExpanded\n    }));\n  };\n  GroupingStateBase.defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: function () {\n      return false;\n    },\n    groupOrientation: function () {\n      return HORIZONTAL_GROUP_ORIENTATION;\n    }\n  };\n  return GroupingStateBase;\n}(PureComponent);\n/** A plugin that manages the grouping state. */\nvar GroupingState = GroupingStateBase;\nvar pluginDependencies$c = [{\n  name: 'GroupingState'\n}, {\n  name: 'IntegratedGrouping'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'ViewState',\n  optional: true\n}];\nvar GroupingPanelBase = /*#__PURE__*/function (_super) {\n  __extends(GroupingPanelBase, _super);\n  function GroupingPanelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  GroupingPanelBase.prototype.render = function () {\n    var _a = this.props,\n      HorizontalLayout = _a.horizontalLayoutComponent,\n      VerticalLayout = _a.verticalLayoutComponent,\n      rowComponent = _a.rowComponent,\n      cellComponent = _a.cellComponent;\n    return createElement(Plugin, {\n      name: \"GroupingPanel\",\n      dependencies: pluginDependencies$c\n    }, createElement(Template, {\n      name: \"groupingPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var viewCellsData = _a.viewCellsData,\n        currentView = _a.currentView,\n        scrollingStrategy = _a.scrollingStrategy,\n        allDayPanelExists = _a.allDayPanelExists,\n        groupByDate = _a.groupByDate,\n        getGroupOrientation = _a.groupOrientation,\n        groups = _a.groups;\n      var groupOrientation = getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name);\n      return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? createElement(HorizontalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        colSpan: viewCellsData[0].length,\n        cellStyle: {\n          left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth : (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH ? HORIZONTAL_VIEW_LEFT_OFFSET : VERTICAL_VIEW_LEFT_OFFSET\n        },\n        showHeaderForEveryDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView && currentView.name)\n      }) : createElement(VerticalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        rowSpan: viewCellsData.length,\n        viewType: currentView === null || currentView === void 0 ? void 0 : currentView.type,\n        cellTextTopOffset: scrollingStrategy === null || scrollingStrategy === void 0 ? void 0 : scrollingStrategy.fixedTopHeight,\n        alignWithAllDayRow: allDayPanelExists\n      });\n    })));\n  };\n  GroupingPanelBase.components = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell'\n  };\n  return GroupingPanelBase;\n}(PureComponent);\n/** A plugin that renders the grouping panel used to display group names. */\nvar GroupingPanel = GroupingPanelBase;\nvar pluginDependencies$d = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'DragDropProvider',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}];\nvar CurrentTimeIndicatorBase = function (_a) {\n  var indicatorComponent = _a.indicatorComponent,\n    shadePreviousAppointments = _a.shadePreviousAppointments,\n    shadePreviousCells = _a.shadePreviousCells,\n    updateInterval = _a.updateInterval;\n  var _b = __read(useState(Date.now), 2),\n    currentTime = _b[0],\n    setCurrentTime = _b[1];\n  useEffect(function () {\n    var tick = function () {\n      return setCurrentTime(Date.now());\n    };\n    var intervalId = updateInterval ? window.setInterval(tick, updateInterval) : undefined;\n    return function () {\n      return window.clearInterval(intervalId);\n    };\n  }, [updateInterval]);\n  return createElement(Plugin, {\n    name: \"CurrentTimeIndicator\",\n    dependencies: pluginDependencies$d\n  }, createElement(Template, {\n    name: \"cell\",\n    predicate: function (_a) {\n      var otherMonth = _a.otherMonth;\n      return !isMonthCell(otherMonth);\n    }\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n        currentTimeIndicatorComponent: indicatorComponent\n      })\n    });\n  }), createElement(Template, {\n    name: \"cell\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isCellShaded(params, currentTime, shadePreviousCells)\n      })\n    });\n  }), createElement(Template, {\n    name: \"appointmentContent\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }), createElement(Template, {\n    name: \"draftAppointment\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }));\n};\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false\n};\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator'\n};\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nvar CurrentTimeIndicator = CurrentTimeIndicatorBase;\nvar pluginDependencies$e = [{\n  name: 'Resources'\n}, {\n  name: 'GroupingState'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\nvar getViewCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n    groups = _a.groups,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    groupOrientation = _a.groupOrientation;\n  return expandViewCellsDataWithGroups(viewCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\nvar getAllDayCellsDataComputed = function (_a) {\n  var allDayCellsData = _a.allDayCellsData,\n    groups = _a.groups,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    groupOrientation = _a.groupOrientation;\n  return allDayCellsData && expandViewCellsDataWithGroups(allDayCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\nvar getGroupsComputed = function (_a) {\n  var resourcesToGroupBy = _a.resourcesToGroupBy;\n  return getGroupsFromResources(resourcesToGroupBy);\n};\nvar getResourcesToGroupByComputed = function (_a) {\n  var resources = _a.resources,\n    grouping = _a.grouping;\n  return sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n};\nvar getGroupingComputed = function (_a) {\n  var grouping = _a.grouping,\n    resources = _a.resources;\n  return updateGroupingWithMainResource(grouping, resources);\n};\nvar getTimeTableAppointmentsComputed = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n    grouping = _a.grouping,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groups = _a.groups,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    excludedDays = _a.excludedDays;\n  return timeTableAppointments && expandGroups(timeTableAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name) && (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH);\n};\nvar getAllDayAppointmentsComputed = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n    grouping = _a.grouping,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groups = _a.groups,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    excludedDays = _a.excludedDays;\n  return allDayAppointments && expandGroups(allDayAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name));\n};\nvar getGroupByDateComputed = function (_a) {\n  var currentView = _a.currentView,\n    groupByDate = _a.groupByDate,\n    groupOrientation = _a.groupOrientation;\n  return groupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) === VERTICAL_GROUP_ORIENTATION ? function () {\n    return false;\n  } : groupByDate;\n};\nvar getTimeTableElementsMetaComputed = function (_a) {\n  var timeTableElementsMeta = _a.timeTableElementsMeta,\n    groupOrientation = _a.groupOrientation,\n    groups = _a.groups,\n    allDayPanelExists = _a.allDayPanelExists,\n    viewCellsData = _a.viewCellsData,\n    currentView = _a.currentView;\n  return updateTimeTableCellElementsMeta(timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\nvar getAllDayElementsMetaComputed = function (_a) {\n  var allDayElementsMeta = _a.allDayElementsMeta,\n    timeTableElementsMeta = _a.timeTableElementsMeta,\n    groupOrientation = _a.groupOrientation,\n    groups = _a.groups,\n    allDayPanelExists = _a.allDayPanelExists,\n    viewCellsData = _a.viewCellsData,\n    currentView = _a.currentView;\n  return updateAllDayCellElementsMeta(allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\nvar getTimeCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n    timeCellsData = _a.timeCellsData,\n    currentView = _a.currentView,\n    groups = _a.groups,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groupOrientation = _a.groupOrientation;\n  return timeCellsData && updateTimeCellsData(viewCellsData, timeCellsData, groups, resourcesToGroupBy, groupOrientation(currentView.name));\n};\nvar IntegratedGroupingBase = memo(function () {\n  return createElement(Plugin, {\n    name: \"IntegratedGrouping\",\n    dependencies: pluginDependencies$e\n  }, createElement(Getter, {\n    name: \"groupByDate\",\n    computed: getGroupByDateComputed\n  }), createElement(Getter, {\n    name: \"grouping\",\n    computed: getGroupingComputed\n  }), createElement(Getter, {\n    name: \"resourcesToGroupBy\",\n    computed: getResourcesToGroupByComputed\n  }), createElement(Getter, {\n    name: \"groups\",\n    computed: getGroupsComputed\n  }), createElement(Getter, {\n    name: \"viewCellsData\",\n    computed: getViewCellsDataComputed\n  }), createElement(Getter, {\n    name: \"allDayCellsData\",\n    computed: getAllDayCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeCellsData\",\n    computed: getTimeCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: getTimeTableAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: getAllDayAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayElementsMeta\",\n    computed: getAllDayElementsMetaComputed\n  }), createElement(Getter, {\n    name: \"timeTableElementsMeta\",\n    computed: getTimeTableElementsMetaComputed\n  }));\n});\n/** A plugin that implements grouping. */\nvar IntegratedGrouping = IntegratedGroupingBase;\nexport { AllDayPanel, AppointmentForm, AppointmentTooltip, Appointments, ConfirmationDialog, CurrentTimeIndicator, DateNavigator, DayView, DragDropProvider, EditRecurrenceMenu, EditingState, GroupingPanel, GroupingState, IntegratedEditing, IntegratedGrouping, MonthView, Resources, Scheduler, TodayButton, Toolbar, ViewState, ViewSwitcher, WeekView };","map":{"version":3,"names":["SchedulerCoreBase","_super","__extends","_this","apply","arguments","formatDateTimeGetter","memoize","locale","prototype","render","_a","props","data","Root","rootComponent","height","firstDayOfWeek","createElement","Plugin","name","Getter","value","appointments","Template","TemplatePlaceholder","PureComponent","SchedulerCore","SchedulerBase","children","PluginHost","defaultProps","Scheduler","CellPlaceholder","params","TimeTableAppointmentLayer","startViewDateBaseComputed","viewCellsData","startViewDate","endViewDateBaseComputed","endViewDate","TimeTablePlaceholder","DayScalePlaceholder","DayScaleEmptyCellPlaceholder","GroupingPanelPlaceholder","BasicViewBase","state","timeTableElementsMeta","scrollingStrategy","topBoundary","bottomBoundary","leftBoundary","rightBoundary","changeVerticalScroll","undefined","changeHorizontalScroll","previousTimeTableCell","timeTableLayoutKey","scrollingStrategyComputed","viewName","getters","computed","timeTableElementsMetaComputed","intervalCountComputed","intervalCount","cellDurationComputed","cellDuration","excludedDaysComputed","excludedDays","availableViewsComputed","viewDisplayName","availableViews$1","availableViews","currentViewComputed","type","currentView","displayName","endViewDateComputed","startViewDateComputed","viewCellsDataComputed","startDayHour","endDayHour","viewCellsDataBaseComputed","timeTableAppointmentsComputed","calculateAppointmentsIntervals","timeTableAppointments","updateCellElementsMeta","cellElementsMeta","setState","setScrollingStrategy","getDerivedStateFromProps","timeTableCellComponent","__assign","Math","random","dayScaleCellComponent","dayScaleRowComponent","DayScale","dayScaleLayoutComponent","TimeTableCell","TimeTableLayout","timeTableLayoutComponent","timeTableRowComponent","AppointmentLayer","appointmentLayerComponent","DayScaleEmptyCell","dayScaleEmptyCellComponent","layoutProps","Layout","layoutComponent","_b","TemplateConnector","groupOrientation","groups","isVerticalGrouping","VERTICAL_GROUP_ORIENTATION","forwardedRef","dayScaleComponent","timeTableComponent","groupingPanelComponent","groupingPanelSize","length","formatDate","groupByDate","groupByDateEnabled","isHorizontalGrouping","HORIZONTAL_GROUP_ORIENTATION","cellComponent","rowComponent","cellsData","groupedByDate","Fragment","setCellElementsMeta","key","BasicView","calculateAppointmentsIntervalsBaseComputed","calculateWeekDateIntervals","timeCellsDataComputed","timeCellsData","Date","now","TimeScalePlaceholder","VericalViewBase","TimeScale","timeScaleLayoutComponent","TimeScaleLabel","timeScaleLabelComponent","timeScaleTickCellComponent","timeScaleTicksRowComponent","timeScaleComponent","getGroupOrientation","labelComponent","tickCellComponent","getTimeTableHeight","VerticalView","currentDate","DayViewBase","VIEW_TYPES","DAY","components","layoutContainer","timeTableContainerComponent","DayView","DAYS_IN_WEEK","viewCellsDataBaseComputed$1","WeekViewBase","WEEK","layoutContainerComponent","WeekView","viewCellsDataBaseComputed$2","monthCellsData","calculateAppointmentsIntervalsBaseComputed$1","calculateMonthDateIntervals","MonthViewBase","MONTH","MonthView","ToolbarBase","FlexibleSpaceComponent","flexibleSpaceComponent","Toolbar","pluginDependencies","navigate","action","direction","nextDate","amount","step","DateNavigatorBase","visible","setRootRef","target","handleVisibilityToggle","prevState","handleHide","navigateAction","changeCurrentDate","Overlay","overlayComponent","OpenButton","openButtonComponent","NavigationButton","navigationButtonComponent","Calendar","calendarComponent","CalendarRow","calendarRowComponent","CalendarCell","calendarCellComponent","CalendarHeaderRow","calendarHeaderRowComponent","CalendarHeaderCell","calendarHeaderCellComponent","CalendarText","calendarTextComponent","CalendarNavigationButton","calendarNavigationButtonComponent","CalendarNavigator","calendarNavigatorComponent","dependencies","calendarDateChanged","navigatorText","viewBoundText","rootRef","onVisibilityToggle","onNavigate","onHide","selectedDate","getCells","textComponent","headerRowComponent","headerCellComponent","navigatorComponent","onSelectedDateChange","DateNavigator","pluginDependencies$1","ViewSwitcherBase","Switcher","switcherComponent","setCurrentViewName","onChange","ViewSwitcher","AppointmentPlaceholder","renderAppointments","rects","map","dataItem","rectType","fromPrev","toNext","durationType","resources","geometry","__rest","style","getAppointmentStyle","pluginDependencies$2","optional","AppointmentsBase","updateTimeTableAppointments","placeAppointmentsNextToEachOther","isTimeTableElementsMetaActual","groupCount","getGroupsLastRow","appointmentType","growDirection","VERTICAL_TYPE","multiline","getRects","getVerticalRectByAppointmentData","HORIZONTAL_TYPE","getHorizontalRectByAppointmentData","calculateRectByDateAndGroupIntervals","updateAllDayAppointments","allDayAppointments","allDayElementsMeta","isAllDayElementsMetaActual","SplitIndicator","splitIndicatorComponent","Appointment","appointmentComponent","AppointmentContent","appointmentContentComponent","Container","containerComponent","recurringIconComponent","slice","onClick","onDoubleClick","restParams","createClickHandlers","position","POSITION_START","POSITION_END","Appointments","isMonthView","pluginDependencies$3","defaultMessages","allDay","AllDayAppointmentLayerPlaceholder","AllDayPanelPlaceholder","CellPlaceholder$1","AllDayTitlePlaceholder","AllDayPanelBase","elementsMeta","previousCell","layoutKey","allDayCellsDataComputed","allDayCells","allDayAppointmentsComputed","allDayLeftBound","moment","hours","minutes","toDate","allDayRightBound","calculateAllDayDateIntervals","allDayPanelExistsComputed","getMessageFormatter","messages","allDayPanelDefaultMessages","getMessagesFormatter","Cell","TitleCell","titleCellComponent","getMessage","allDayCellsData","allDayCellComponent","allDayRowComponent","allDayTitleComponent","showAllDayTitle","AllDayPanel","ViewStateBase","call","getCurrentViewComputed","currentViewName","defaultCurrentDate","defaultCurrentViewName","stateHelper","createStateHelper","onCurrentDateChange","onCurrentViewNameChange","applyFieldReducer","bind","nextProps","stateCurrentViewName","Action","ViewState","EditingStateBase","editingAppointment","defaultEditingAppointment","addedAppointment","defaultAddedAppointment","appointmentChanges","defaultAppointmentChanges","onEditingAppointmentChange","onAddedAppointmentChange","onAppointmentChangesChange","addAppointment","changeAddedAppointment","changeAppointment","cancelAddedAppointment","startEditAppointment","stopEditAppointment","cancelChangedAppointment","cancelChanges","commitChangedAppointment","RECURRENCE_EDIT_SCOPE","CURRENT","onCommitChanges","preCommitChanges","changes","rRule","changed","changedAppointmentById","id","commitAddedAppointment","stateAddedAppointment","added","commitDeletedAppointment","deletedAppointmentData","_c","deleted","EditingState","pluginDependencies$4","commandButtonIds","open","OPEN_COMMAND_BUTTON","close","CLOSE_COMMAND_BUTTON","delete","DELETE_COMMAND_BUTTON","AppointmentTooltipBase","appointmentMeta","onVisibilityChange","onAppointmentMetaChange","toggleVisibility","isOpen","setAppointmentMeta","onAppointmentClick","showOpenButton","showDeleteButton","showCloseButton","headerComponent","contentComponent","commandButtonComponent","TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY","plainResources","finishDeleteAppointment","openDeleteConfirmationDialog","onDeleteButtonClick","hideActionName","appointmentData","appointmentResources","getAppointmentResources","AppointmentTooltip","addDoubleClickToCell","title","startDate","endDate","groupingInfo","openFormHandler","resourceFields","reduce","acc","currentGroup","fieldName","validResourceFields","checkMultipleResourceFields","newAppointmentData","callActionIfExists","defaultMessages$1","allDayLabel","titleLabel","commitCommand","detailsLabel","moreInformationLabel","repeatLabel","notesLabel","never","daily","weekly","monthly","yearly","repeatEveryLabel","daysLabel","endRepeatLabel","onLabel","afterLabel","occurrencesLabel","weeksOnLabel","monthsLabel","ofEveryMonthLabel","theLabel","firstLabel","secondLabel","thirdLabel","fourthLabel","lastLabel","yearsLabel","ofLabel","everyLabel","CommandLayoutPlaceholder","BasicLayoutPlaceholder","RecurrenceLayoutPlaceholder","pluginDependencies$5","prepareChanges","isNew","changedAppointment","isFormEdited","Object","getOwnPropertyNames","isFormFullSize","isFormVisible","changedAppointmentRRule","previousAppointmentRRule","AppointmentFormBase","container","createRef","commitChanges","finishCommitAppointment","previousAppointment","openCancelConfirmationDialog","keys","TOGGLE_APPOINTMENT_FORM_VISIBILITY","deleteAppointment","changeAppointmentField","change","menuMessages","onAppointmentDataChange","setAppointmentData","CommandLayout","commandLayoutComponent","BasicLayout","basicLayoutComponent","RecurrenceLayout","recurrenceLayoutComponent","textEditorComponent","dateEditorComponent","booleanEditorComponent","selectComponent","radioGroupComponent","weeklyRecurrenceSelectorComponent","resourceEditorComponent","readOnly","fullSize","onHideAction","ref","isRecurrence","onCommitButtonClick","onCancelButtonClick","disableSaveButton","hideDeleteButton","onFieldChange","isRecurrenceLayoutVisible","correctedAppointment","onOpenButtonClick","isAllDayCell","AppointmentForm","renderAppointmentItems","items","Wrapper","draftData","draftAppointment","index","toString","pluginDependencies$6","DragDropProviderBase","timeTableDraftAppointments","allDayDraftAppointments","offsetTimeTop","appointmentStartTime","appointmentEndTime","appointmentGroupingInfo","startTime","endTime","payload","isOutside","allowDrag","allowResize","appointmentContentTemplateKey","appointmentTopTemplateKey","appointmentBottomTemplateKey","handleDrop","resetCache","handleLeave","isAllowDragSame","isAllowResizeSame","onPayloadChange","actions","args","handlePayloadChange","calculateNextBoundaries","scrollSpeed","calculateBoundaries","applyChanges","clientOffset","grouping","autoScroll","tableCellElementsMeta","allDayCellsElementsMeta","getCellRects","timeTableIndex","cellIndex","allDayIndex","targetData","cellData","targetType","cellType","insidePart","calculateInsidePart","y","cellDurationMinutes","intervalDuration","_d","calculateAppointmentTimeBoundaries","appointmentGroups","calculateAppointmentGroups","_e","appointmentDragged","draftAppointments","start","end","_f","calculateDraftAppointments","DraftAppointment","draftAppointmentComponent","SourceAppointment","sourceAppointmentComponent","Resize","resizeComponent","calculateBoundariesByMove","DragDropProvider$1","DropTarget","onOver","onEnter","onDrop","onLeave","PlaceholderWithRef","predicate","styles","DragSource","draggable","RESIZE_TOP","RESIZE_BOTTOM","SCROLL_SPEED_PX","DragDropProvider","pluginDependencies$7","defaultMessages$2","today","TodayButtonBase","Button","buttonComponent","setCurrentDate","TodayButton","pluginDependencies$8","defaultAvailableOperations","CURRENT_AND_FOLLOWING","ALL","defaultMessages$3","menuEditingTitle","menuDeletingTitle","cancelButton","commitButton","EditRecurrenceMenuBase","modalContainer","commit","editAction","deleteAction","closeMenu","cancelEditing","cancelAction","stopEditAction","availableOperations","menuAvailableOperations","isDeleting","handleClose","EditRecurrenceMenu","pluginDependencies$9","IntegratedEditingBase","totalCount","IntegratedEditing","pluginDependencies$a","addResourcesToTimeTableAppointments","addResourcesToAppointments","addResourcesToAllDayAppointments","ResourcesBase","memo","mainResourceName","palette","convertResources","convertResourcesToPlain","validateResources","Resources","defaultMessages$4","discardButton","deleteButton","confirmDeleteMessage","confirmCancelMessage","pluginDependencies$b","ACTION_TYPES","CANCEL","DELETE","ConfirmationDialogBase","ignoreDelete","ignoreCancel","useRef","__read","useState","setVisible","actionType","setActionType","setHideActionName","useCallback","confirmCancelChanges","hideAction","confirmDelete","confirmAction","isNewAppointment","hideEditor","handleConfirm","handleCancel","ConfirmationDialog","GroupingStateBase","expandedGroups","defaultExpandedGroups","onExpandedGroupsChange","toggleGroupExpanded","applyReducer","toggleExpandedGroups","GroupingState","pluginDependencies$c","GroupingPanelBase","HorizontalLayout","horizontalLayoutComponent","VerticalLayout","verticalLayoutComponent","allDayPanelExists","colSpan","cellStyle","left","fixedLeftWidth","HORIZONTAL_VIEW_LEFT_OFFSET","VERTICAL_VIEW_LEFT_OFFSET","showHeaderForEveryDate","rowSpan","viewType","cellTextTopOffset","fixedTopHeight","alignWithAllDayRow","GroupingPanel","pluginDependencies$d","CurrentTimeIndicatorBase","indicatorComponent","shadePreviousAppointments","shadePreviousCells","updateInterval","currentTime","setCurrentTime","useEffect","tick","intervalId","window","setInterval","clearInterval","otherMonth","isMonthCell","currentTimeIndicatorPosition","getCurrentTimeIndicatorTop","currentTimeIndicatorComponent","isShaded","isCellShaded","isShadedAppointment","CurrentTimeIndicator","pluginDependencies$e","getViewCellsDataComputed","resourcesToGroupBy","expandViewCellsDataWithGroups","getAllDayCellsDataComputed","getGroupsComputed","getGroupsFromResources","getResourcesToGroupByComputed","sortFilteredResources","filterResourcesByGrouping","getGroupingComputed","updateGroupingWithMainResource","getTimeTableAppointmentsComputed","expandGroups","getAllDayAppointmentsComputed","getGroupByDateComputed","getTimeTableElementsMetaComputed","updateTimeTableCellElementsMeta","getAllDayElementsMetaComputed","updateAllDayCellElementsMeta","getTimeCellsDataComputed","updateTimeCellsData","IntegratedGroupingBase","IntegratedGrouping"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/scheduler-core.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/scheduler.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/basic-view.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/vertical-view.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/day-view.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/week-view.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/month-view.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/toolbar.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/date-navigator.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/view-switcher.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointments.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/all-day-panel.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/view-state.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/editing-state.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointment-tooltip.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointment-form.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/drag-drop-provider.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/today-button.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/edit-recurrence-menu.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/integrated-editing.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/resources.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/confirmation-dialog.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/grouping-state.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/grouping-panel.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/current-time-indicator.tsx","/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@devexpress/dx-react-scheduler/src/plugins/integrated-grouping.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { appointments, formatDateTimeGetter } from '@devexpress/dx-scheduler-core';\nimport { SchedulerProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass SchedulerCoreBase extends React.PureComponent<SchedulerProps> {\n  formatDateTimeGetter = memoize(locale => formatDateTimeGetter(locale));\n\n  render() {\n    const {\n      data,\n      rootComponent: Root,\n      locale,\n      height,\n      firstDayOfWeek,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"SchedulerCore\"\n      >\n        <Getter name=\"appointments\" value={appointments(data)} />\n        <Getter name=\"formatDate\" value={this.formatDateTimeGetter(locale)} />\n        <Getter name=\"firstDayOfWeek\" value={firstDayOfWeek} />\n        <Getter name=\"locale\" value={locale} />\n        <Template name=\"root\">\n          <Root height={height}>\n            <TemplatePlaceholder name=\"schedulerRoot\" />\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Scheduler's functionality\n * (data visualization and processing) is implemented in several plugins\n * specified as child components.\n * */\nexport const SchedulerCore: React.ComponentType<SchedulerProps> = SchedulerCoreBase;\n","import * as React from 'react';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { SchedulerCore } from './plugins/scheduler-core';\nimport { SchedulerProps } from './types';\n\nconst SchedulerBase: React.FunctionComponent<SchedulerProps> = ({\n  data,\n  rootComponent,\n  children,\n  locale,\n  height,\n  firstDayOfWeek,\n}) => (\n  <PluginHost>\n    <SchedulerCore\n      data={data}\n      rootComponent={rootComponent}\n      locale={locale}\n      height={height}\n      firstDayOfWeek={firstDayOfWeek}\n    />\n    {children}\n  </PluginHost>\n);\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0,\n};\n\n// tslint:disable: max-line-length\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Schedulerâ€™s functionality\n * (data visualization and processing) is implemented in several plugins specified as child components.\n * */\nexport const Scheduler: React.ComponentType<SchedulerProps> = SchedulerBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  HORIZONTAL_GROUP_ORIENTATION,\n  VERTICAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\nimport { BasicViewProps, BasicViewState, ScrollingStrategy } from '../types';\n\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst TimeTableAppointmentLayer = () => <TemplatePlaceholder name=\"timeTableAppointmentLayer\" />;\n\nconst startViewDateBaseComputed = ({ viewCellsData }) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({ viewCellsData }) => endViewDateCore(viewCellsData);\n\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\n\nconst GroupingPanelPlaceholder = () => <TemplatePlaceholder name=\"groupingPanel\" />;\n\nclass BasicViewBase extends React.PureComponent<BasicViewProps, BasicViewState> {\n  state = {\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      leftBoundary: 0,\n      rightBoundary: 0,\n      changeVerticalScroll: () => undefined,\n      changeHorizontalScroll: () => undefined,\n    },\n    previousTimeTableCell: null,\n    // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n    // and, consequently, update timeTableElementsMeta\n    timeTableLayoutKey: 0,\n  };\n\n  static getDerivedStateFromProps(\n    props: BasicViewProps, state: BasicViewState,\n  ): BasicViewState | null {\n\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return {\n        ...state,\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  cellDurationComputed = memoize((viewName, cellDuration) => getters =>\n    computed(getters, viewName, () => cellDuration, getters.cellDuration));\n\n  excludedDaysComputed = memoize((viewName, excludedDays) => getters => computed(\n    getters, viewName!, () => excludedDays, getters.excludedDays,\n  ));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName!, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName, type) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  viewCellsDataComputed = memoize((\n    viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed,\n  ) => getters => computed(\n    getters,\n    viewName,\n    viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour),\n    getters.viewCellsData,\n  ));\n\n  timeTableAppointmentsComputed = memoize((\n    viewName, cellDuration, calculateAppointmentsIntervals,\n  ) => getters => computed(\n      getters,\n      viewName,\n      calculateAppointmentsIntervals(cellDuration),\n      getters.timeTableAppointments,\n    ));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy: ScrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      name: viewName,\n      intervalCount,\n      displayName,\n      type,\n      excludedDays,\n      cellDuration,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      calculateAppointmentsIntervals,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      dayScaleLayoutComponent: DayScale,\n      timeTableCellComponent: TimeTableCell,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      appointmentLayerComponent: AppointmentLayer,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      layoutProps,\n      layoutComponent: Layout,\n    } = this.props;\n    const { timeTableElementsMeta, scrollingStrategy, timeTableLayoutKey } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin name=\"basicView\">\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter\n          name=\"currentView\"\n          computed={this.currentViewComputed(viewName, viewDisplayName, type)}\n        />\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"excludedDays\" computed={this.excludedDaysComputed(viewName, excludedDays)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(\n            viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed,\n          )}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n        <Getter\n          name=\"cellDuration\"\n          computed={this.cellDurationComputed(viewName, cellDuration)}\n        />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Getter\n          name=\"timeTableAppointments\"\n          computed={this.timeTableAppointmentsComputed(\n            viewName, cellDuration, calculateAppointmentsIntervals,\n          )}\n        />\n\n        <Template name=\"body\">\n          { (params: any) =>\n            <TemplateConnector>\n              {({ currentView, groupOrientation, groups }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const isVerticalGrouping = groupOrientation?.(viewName)\n                  === VERTICAL_GROUP_ORIENTATION;\n                return (\n                  <Layout\n                    forwardedRef={params?.forwardedRef}\n                    dayScaleComponent={DayScalePlaceholder}\n                    timeTableComponent={TimeTablePlaceholder}\n                    setScrollingStrategy={this.setScrollingStrategy}\n                    groupingPanelComponent={\n                      isVerticalGrouping ? GroupingPanelPlaceholder : undefined\n                    }\n                    groupingPanelSize={isVerticalGrouping ? groups?.length : 0}\n                    dayScaleEmptyCellComponent={DayScaleEmptyCellPlaceholder}\n                    {...layoutProps}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          }\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate, groupByDate, groupOrientation }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const groupByDateEnabled = groupByDate?.(viewName);\n              const isHorizontalGrouping = groupOrientation?.(viewName)\n                === HORIZONTAL_GROUP_ORIENTATION;\n              return (\n                <DayScale\n                  cellComponent={dayScaleCellComponent}\n                  rowComponent={dayScaleRowComponent}\n                  groupingPanelComponent={\n                    isHorizontalGrouping ? GroupingPanelPlaceholder : undefined\n                  }\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                  groupedByDate={groupByDateEnabled}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ formatDate, currentView, viewCellsData }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                return (\n                  <>\n                    <TimeTableLayout\n                      cellsData={viewCellsData}\n                      rowComponent={timeTableRowComponent}\n                      cellComponent={CellPlaceholder}\n                      formatDate={formatDate}\n                      setCellElementsMeta={this.updateCellElementsMeta}\n                      key={timeTableLayoutKey}\n                      {...params}\n                    />\n                    <AppointmentLayer>\n                      <TimeTableAppointmentLayer />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n          </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName || !DayScaleEmptyCell) {\n                return <TemplatePlaceholder />;\n              }\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const BasicView: React.ComponentType<BasicViewProps> = BasicViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  calculateWeekDateIntervals,\n  getTimeTableHeight,\n  timeCellsData as timeCellsDataCore,\n  computed,\n} from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { CommonVerticalViewProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateWeekDateIntervals(\n  appointments, startViewDate, endViewDate, excludedDays, cellDuration,\n);\nconst timeCellsDataComputed = (startDayHour, endDayHour) => ({\n  viewCellsData, cellDuration,\n}) => timeCellsDataCore(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass VericalViewBase extends React.PureComponent<CommonVerticalViewProps> {\n  timeCellsDataComputed = memoize((viewName, startDayHour, endDayHour) => getters => computed(\n    getters,\n    viewName,\n    timeCellsDataComputed(startDayHour, endDayHour),\n    getters.timeCellsData,\n  ));\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleLabelComponent: TimeScaleLabel,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      type,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataComputed}\n          type={type}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          layoutProps={{\n            timeScaleComponent: TimeScalePlaceholder,\n          }}\n        />\n\n        <Getter\n          name=\"timeCellsData\"\n          computed={this.timeCellsDataComputed(viewName, startDayHour, endDayHour)}\n        />\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({\n                currentView, timeCellsData, groups, formatDate,\n                groupOrientation: getGroupOrientation,\n                timeTableElementsMeta,\n              }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const groupOrientation = getGroupOrientation?.(viewName);\n\n                return (\n                  <TimeScale\n                    labelComponent={TimeScaleLabel}\n                    tickCellComponent={timeScaleTickCellComponent}\n                    rowComponent={timeScaleTicksRowComponent}\n                    cellsData={timeCellsData}\n                    formatDate={formatDate}\n                    groups={groups}\n                    groupOrientation={groupOrientation}\n                    height={getTimeTableHeight(timeTableElementsMeta)}\n                    {...params}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const VerticalView: React.ComponentType<CommonVerticalViewProps> = VericalViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { VerticalViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, intervalCount }) => {\n  return viewCellsDataCore(\n    currentDate, undefined,\n    intervalCount, [],\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass DayViewBase extends React.PureComponent<VerticalViewProps> {\n  static defaultProps: Partial<VerticalViewProps> = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      cellDuration,\n      name: viewName,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"DayView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.DAY}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          dayScaleEmptyCellComponent={DayScaleEmptyCell}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const DayView: React.ComponentType<VerticalViewProps> = DayViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { WeekViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst DAYS_IN_WEEK = 7;\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ firstDayOfWeek, intervalCount, excludedDays, currentDate }) => {\n  return viewCellsDataCore(\n    currentDate, firstDayOfWeek,\n    intervalCount! * DAYS_IN_WEEK, excludedDays!,\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass WeekViewBase extends React.PureComponent<WeekViewProps> {\n  static defaultProps: Partial<WeekViewProps> = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.WEEK}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const WeekView: React.ComponentType<WeekViewProps> = WeekViewBase;\n","import * as React from 'react';\nimport { Plugin, PluginComponents } from '@devexpress/dx-react-core';\nimport { monthCellsData, calculateMonthDateIntervals, VIEW_TYPES } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { MonthViewProps } from '../types';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, firstDayOfWeek, intervalCount }) => monthCellsData(\n  currentDate, firstDayOfWeek, intervalCount!, Date.now(),\n);\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateMonthDateIntervals(\n  appointments, startViewDate, endViewDate,\n);\n\nclass MonthViewBase extends React.PureComponent<MonthViewProps> {\n  static defaultProps: Partial<MonthViewProps> = {\n    intervalCount: 1,\n    name: 'Month',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      name: viewName,\n      intervalCount,\n      displayName,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"MonthView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.MONTH}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\n * An appointment's size depends on its duration in days.\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\n * The time scale and all-day panel are not available in this view.\n * */\nexport const MonthView: React.ComponentType<MonthViewProps> = MonthViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ToolbarProps } from '../types';\n\nclass ToolbarBase extends React.PureComponent<ToolbarProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace',\n  };\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's toolbar. */\nexport const Toolbar: React.ComponentType<ToolbarProps> = ToolbarBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  monthCellsData,\n  viewBoundText,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { DateNavigatorProps, DateNavigatorState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst navigate = (action, currentView, intervalCount) => (direction, nextDate) => action({\n  direction,\n  nextDate,\n  amount: intervalCount,\n  step: currentView.type,\n});\n\nclass DateNavigatorBase extends React.PureComponent<DateNavigatorProps, DateNavigatorState> {\n  target!: React.ReactInstance;\n\n  state = {\n    visible: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton',\n  };\n\n  setRootRef = (target: React.ReactInstance) => {\n    this.target = target;\n  }\n\n  handleVisibilityToggle = () => {\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  }\n\n  handleHide = () => {\n    this.setState({ visible: false });\n  }\n\n  navigateAction = memoize((changeCurrentDate, currentView, intervalCount, navigateAction) =>\n    navigateAction(changeCurrentDate, currentView, intervalCount));\n\n  render() {\n    const {\n      rootComponent: Root,\n      overlayComponent: Overlay,\n      openButtonComponent: OpenButton,\n      navigationButtonComponent: NavigationButton,\n      calendarComponent: Calendar,\n      calendarRowComponent: CalendarRow,\n      calendarCellComponent: CalendarCell,\n      calendarHeaderRowComponent: CalendarHeaderRow,\n      calendarHeaderCellComponent: CalendarHeaderCell,\n      calendarTextComponent: CalendarText,\n      calendarNavigationButtonComponent: CalendarNavigationButton,\n      calendarNavigatorComponent: CalendarNavigator,\n    } = this.props;\n\n    const { visible } = this.state;\n    return (\n      <Plugin\n        name=\"DateNavigator\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              currentDate,\n              startViewDate,\n              endViewDate,\n              firstDayOfWeek,\n              currentView,\n              intervalCount,\n              formatDate,\n            }, {\n              changeCurrentDate,\n            }) => {\n              const navigateAction = this.navigateAction(\n                changeCurrentDate, currentView, intervalCount, navigate,\n              );\n              const calendarDateChanged = (nextDate) => {\n                navigateAction(undefined, nextDate);\n                this.handleHide();\n              };\n              const navigatorText = viewBoundText(\n                startViewDate,\n                endViewDate,\n                currentView.type,\n                currentDate,\n                intervalCount,\n                formatDate,\n              );\n              return (\n                <React.Fragment>\n                  <Root\n                    navigationButtonComponent={NavigationButton}\n                    openButtonComponent={OpenButton}\n                    navigatorText={navigatorText}\n                    rootRef={this.setRootRef}\n                    onVisibilityToggle={this.handleVisibilityToggle}\n                    onNavigate={navigateAction}\n                  />\n                  <Overlay\n                    visible={visible}\n                    target={this.target}\n                    onHide={this.handleHide}\n                  >\n                    <Calendar\n                      selectedDate={currentDate}\n                      firstDayOfWeek={firstDayOfWeek}\n                      getCells={monthCellsData}\n                      textComponent={CalendarText}\n                      navigationButtonComponent={CalendarNavigationButton}\n                      rowComponent={CalendarRow}\n                      cellComponent={CalendarCell}\n                      headerRowComponent={CalendarHeaderRow}\n                      headerCellComponent={CalendarHeaderCell}\n                      navigatorComponent={CalendarNavigator}\n                      onSelectedDateChange={calendarDateChanged}\n                      formatDate={formatDate}\n                    />\n                  </Overlay>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nexport const DateNavigator: React.ComponentType<DateNavigatorProps> = DateNavigatorBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ViewSwitcherProps } from '../types/view-switcher';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nclass ViewSwitcherBase extends React.PureComponent<ViewSwitcherProps> {\n  static components: PluginComponents = {\n    switcherComponent: 'Switcher',\n  };\n\n  render() {\n    const { switcherComponent: Switcher } = this.props;\n\n    return (\n      <Plugin\n        name=\"ViewSwitcher\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView,\n              availableViews,\n            }, {\n              setCurrentViewName,\n            }) => (\n              <Switcher\n                currentView={currentView}\n                availableViews={availableViews}\n                onChange={setCurrentViewName}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's view switcher. */\nexport const ViewSwitcher: React.ComponentType<ViewSwitcherProps> = ViewSwitcherBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { createClickHandlers, memoize } from '@devexpress/dx-core';\nimport {\n  POSITION_START, POSITION_END, VERTICAL_TYPE,\n  getVerticalRectByAppointmentData, calculateRectByDateAndGroupIntervals,\n  getAppointmentStyle, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData,\n  isAllDayElementsMetaActual, isTimeTableElementsMetaActual,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES, getGroupsLastRow, Rect,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentsProps } from '../types';\n\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\n\nconst renderAppointments = rects => rects.map(({\n  dataItem, type: rectType, fromPrev, toNext,\n  durationType, resources, key, ...geometry\n}) => (\n  <AppointmentPlaceholder\n    key={key}\n    type={rectType}\n    data={dataItem}\n    fromPrev={fromPrev}\n    toNext={toNext}\n    durationType={durationType}\n    resources={resources}\n    style={getAppointmentStyle(geometry as Rect)}\n  />\n));\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n];\n\nclass AppointmentsBase extends React.PureComponent<AppointmentsProps> {\n  static components: PluginComponents = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon',\n  };\n  static defaultProps: Partial<AppointmentsProps> = {\n    placeAppointmentsNextToEachOther: false,\n  };\n\n  updateTimeTableAppointments = memoize((\n    timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n    startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate,\n    placeAppointmentsNextToEachOther,\n  ) => {\n    if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    let appointmentType = { growDirection: VERTICAL_TYPE, multiline: false };\n    let getRects = getVerticalRectByAppointmentData as any;\n    if (currentView.type === VIEW_TYPES.MONTH) {\n      appointmentType = { growDirection: HORIZONTAL_TYPE, multiline: true };\n      getRects = getHorizontalRectByAppointmentData;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      appointmentType, timeTableAppointments, getRects,\n      {\n        startViewDate, endViewDate, cellDuration,\n        viewCellsData, cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  updateAllDayAppointments = memoize((\n    allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n    startViewDate, endViewDate, groups, getGroupOrientation, groupByDate,\n  ) => {\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    if (!isAllDayElementsMetaActual(\n      viewCellsData, allDayElementsMeta, groupOrientation, groupCount,\n    )) {\n      return null;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      { growDirection: HORIZONTAL_TYPE,  multiline: false },\n      allDayAppointments,\n      getHorizontalRectByAppointmentData,\n      {\n        startViewDate, endViewDate,\n        viewCellsData, cellElementsMeta: allDayElementsMeta,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  render() {\n    const {\n      splitIndicatorComponent: SplitIndicator,\n      appointmentComponent: Appointment,\n      appointmentContentComponent: AppointmentContent,\n      containerComponent: Container,\n      recurringIconComponent,\n      placeAppointmentsNextToEachOther,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"Appointments\"\n        dependencies={pluginDependencies}\n      >\n        <Template\n          name=\"timeTableAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groupOrientation,  groups, groupByDate,\n            }) => this.updateTimeTableAppointments(\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate,\n              placeAppointmentsNextToEachOther,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"allDayAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              allDayAppointments, viewCellsData, allDayElementsMeta,\n              startViewDate, endViewDate, groupOrientation, currentView, groups, groupByDate,\n            }) => this.updateAllDayAppointments(\n              allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n              startViewDate, endViewDate, groups, groupOrientation, groupByDate,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"appointment\"\n        >\n          {({ style, ...params }: any) => (\n            <TemplateConnector>\n              {({ formatDate }) => (\n                <Container style={style}>\n                  <TemplatePlaceholder\n                    name=\"appointmentTop\"\n                    params={{ data: params.data, type: params.type, slice: params.fromPrev }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentContent\"\n                    params={{ ...params, formatDate }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentBottom\"\n                    params={{ data: params.data, type: params.type, slice: params.toNext }}\n                  />\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointmentContent\">\n          {({\n            onClick, onDoubleClick, formatDate,\n            data, type, fromPrev, toNext,\n            durationType, resources, forwardedRef,\n            ...restParams\n          }: any) => (\n            <Appointment\n              forwardedRef={forwardedRef}\n              data={data}\n              resources={resources}\n              {...createClickHandlers(onClick, onDoubleClick)}\n              {...restParams}\n            >\n              {fromPrev && <SplitIndicator position={POSITION_START} appointmentType={type} />}\n              <AppointmentContent\n                data={data}\n                type={type}\n                durationType={durationType}\n                recurringIconComponent={recurringIconComponent}\n                formatDate={formatDate}\n                resources={resources}\n              />\n              {toNext && <SplitIndicator position={POSITION_END} appointmentType={type} />}\n            </Appointment>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders appointments. */\nexport const Appointments: React.ComponentType<AppointmentsProps> = AppointmentsBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  allDayCells, calculateAllDayDateIntervals,\n  VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport moment from 'moment';\n\nimport { AllDayPanelProps, AllDayPanelState } from '../types';\n\nconst isMonthView = currentView => currentView.type === VIEW_TYPES.MONTH;\nconst isVerticalGrouping = (\n  currentView, groupOrientation,\n) => groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION;\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n];\nconst defaultMessages = {\n  allDay: 'All Day',\n};\nconst AllDayAppointmentLayerPlaceholder = () =>\n  <TemplatePlaceholder name=\"allDayAppointmentLayer\" />;\nconst AllDayPanelPlaceholder = params => <TemplatePlaceholder name=\"allDayPanel\" params={params} />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"allDayPanelCell\" params={params} />;\nconst AllDayTitlePlaceholder = params => <TemplatePlaceholder name=\"allDayTitle\" params={params} />;\n\nclass AllDayPanelBase extends React.PureComponent<AllDayPanelProps, AllDayPanelState> {\n  state: AllDayPanelState = {\n    elementsMeta: {},\n    previousCell: null,\n    // The key has to be generated every time the Cell component is updated to rerender the Layout\n    // and, consequently, update allDayElementsMeta\n    layoutKey: 0,\n  };\n  static defaultProps: Partial<AllDayPanelProps> = {\n    messages: {},\n  };\n  static components: PluginComponents = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container',\n  };\n\n  static getDerivedStateFromProps(\n    props: AllDayPanelProps, state: AllDayPanelState,\n  ): AllDayPanelState | null {\n    if (props.cellComponent !== state.previousCell) {\n      return {\n        ...state,\n        previousCell: props.cellComponent,\n        layoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  allDayCellsDataComputed = memoize(({ viewCellsData }) => allDayCells(viewCellsData));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ elementsMeta: cellElementsMeta });\n  });\n\n  allDayAppointmentsComputed = memoize(({\n    appointments, startViewDate, endViewDate, excludedDays,\n  }) => {\n    const allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n    const allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n    return calculateAllDayDateIntervals(\n      appointments, allDayLeftBound, allDayRightBound, excludedDays,\n    );\n  });\n\n  allDayPanelExistsComputed = memoize(({\n    currentView,\n  }) => !isMonthView(currentView));\n\n  getMessageFormatter = memoize((messages, allDayPanelDefaultMessages) =>\n    getMessagesFormatter({ ...allDayPanelDefaultMessages, ...messages }));\n\n  render() {\n    const {\n      appointmentLayerComponent: AppointmentLayer,\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent,\n      titleCellComponent: TitleCell,\n      containerComponent: Container,\n      messages,\n    } = this.props;\n    const { elementsMeta, layoutKey } = this.state;\n    const getMessage = this.getMessageFormatter(messages, defaultMessages);\n\n    return (\n      <Plugin\n        name=\"AllDayPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"allDayElementsMeta\" value={elementsMeta} />\n        <Getter name=\"allDayCellsData\" computed={this.allDayCellsDataComputed} />\n        <Getter name=\"allDayPanelExists\" computed={this.allDayPanelExistsComputed} />\n        <Getter\n          name=\"allDayAppointments\"\n          computed={this.allDayAppointmentsComputed}\n        />\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation, allDayCellsData }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n                return (\n                  <>\n                    <TemplatePlaceholder\n                      params={{\n                        ...params,\n                        allDayCellComponent: CellPlaceholder,\n                        allDayRowComponent: rowComponent,\n                        allDayCellsData,\n                      }}\n                    />\n                    <AppointmentLayer>\n                      <AllDayAppointmentLayerPlaceholder />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return <TemplatePlaceholder />;\n              }\n\n              return (\n                <AllDayTitlePlaceholder />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n\n                return (\n                  <TemplatePlaceholder\n                    params={{\n                      ...params,\n                      allDayTitleComponent: AllDayTitlePlaceholder,\n                      showAllDayTitle: true,\n                    }}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return null;\n              }\n\n              return (\n                <Container>\n                  <AllDayPanelPlaceholder />\n                </Container>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView, formatDate, allDayCellsData,\n            }) => {\n              if (currentView.type === VIEW_TYPES.MONTH) return null;\n\n              return (\n                <React.Fragment>\n                  <Layout\n                    cellComponent={CellPlaceholder}\n                    rowComponent={rowComponent}\n                    cellsData={allDayCellsData[0]}\n                    setCellElementsMeta={this.updateCellElementsMeta}\n                    formatDate={formatDate}\n                    key={layoutKey}\n                  />\n                  <AppointmentLayer>\n                    <AllDayAppointmentLayerPlaceholder />\n                  </AppointmentLayer>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayTitle\">\n          {(params: any) => <TitleCell getMessage={getMessage} {...params}/>}\n        </Template>\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => <Cell {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the All Day Panel. */\nexport const AllDayPanel: React.ComponentType<AllDayPanelProps> = AllDayPanelBase;\n","import * as React from 'react';\nimport {\n  Getter,\n  Action,\n  Plugin,\n  createStateHelper,\n  StateHelper,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  changeCurrentDate,\n  setCurrentViewName,\n  ChangeCurrentDatePayload,\n} from '@devexpress/dx-scheduler-core';\nimport { ViewStateProps, ViewStateState } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass ViewStateBase extends React.PureComponent<ViewStateProps, ViewStateState> {\n  changeCurrentDate: ActionFn<ChangeCurrentDatePayload>;\n  setCurrentViewName: ActionFn<string>;\n\n  static defaultProps: Partial<ViewStateProps> = {\n    defaultCurrentDate: new Date(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        currentDate: () => {\n          const { onCurrentDateChange } = this.props;\n          return onCurrentDateChange;\n        },\n        currentViewName: () => {\n          const { onCurrentViewNameChange } = this.props;\n          return onCurrentViewNameChange;\n        },\n      },\n    );\n\n    this.changeCurrentDate = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentDate', changeCurrentDate);\n    this.setCurrentViewName = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentViewName', setCurrentViewName);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentDate = prevState.currentDate,\n      currentViewName = prevState.currentViewName,\n    } = nextProps;\n\n    return {\n      currentDate,\n      currentViewName,\n    };\n  }\n\n  getCurrentViewComputed =  memoize(currentViewName => () => (\n    currentViewName\n    ? { name: currentViewName }\n    : undefined\n  ));\n\n  render() {\n    const { currentDate, currentViewName: stateCurrentViewName } = this.state;\n    return (\n      <Plugin\n        name=\"ViewState\"\n      >\n        <Getter name=\"currentDate\" value={currentDate} />\n        <Getter name=\"currentView\" computed={this.getCurrentViewComputed(stateCurrentViewName)} />\n        <Action name=\"changeCurrentDate\" action={this.changeCurrentDate} />\n        <Action name=\"setCurrentViewName\" action={this.setCurrentViewName} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nexport const ViewState: React.ComponentType<ViewStateProps> = ViewStateBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, createStateHelper, StateHelper, ComputedFn, ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  addAppointment,\n  cancelAddedAppointment,\n  startEditAppointment,\n  stopEditAppointment,\n  changeAppointment,\n  cancelChanges,\n  changedAppointmentById,\n  RECURRENCE_EDIT_SCOPE,\n  preCommitChanges as preCommitChangesBase,\n} from '@devexpress/dx-scheduler-core';\nimport { EditingStateProps, EditingStateState } from '../types';\n\nclass EditingStateBase extends React.PureComponent<EditingStateProps, EditingStateState> {\n  startEditAppointment: ComputedFn;\n  stopEditAppointment: (payload?: any) => void;\n  changeAppointment: ComputedFn;\n  cancelChangedAppointment: (payload?: any) => void;\n  commitChangedAppointment: ActionFn<any>;\n  addAppointment: ComputedFn;\n  changeAddedAppointment: ComputedFn;\n  cancelAddedAppointment: (payload?: any) => void;\n  commitAddedAppointment: ComputedFn;\n  commitDeletedAppointment: ActionFn<any>;\n\n  static defaultProps: Partial<EditingStateProps> = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChangesBase,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        editingAppointment: () => {\n          const { onEditingAppointmentChange } = this.props;\n          return onEditingAppointmentChange;\n        },\n        addedAppointment: () => {\n          const { onAddedAppointmentChange } = this.props;\n          return onAddedAppointmentChange;\n        },\n        appointmentChanges: () => {\n          const { onAppointmentChangesChange } = this.props;\n          return onAppointmentChangesChange;\n        },\n      },\n    );\n\n    this.addAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', addAppointment);\n    this.changeAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', changeAppointment);\n    this.cancelAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n\n    this.startEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', startEditAppointment);\n    this.stopEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', stopEditAppointment);\n\n    this.changeAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', changeAppointment);\n    this.cancelChangedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    this.commitChangedAppointment = (type = RECURRENCE_EDIT_SCOPE.CURRENT) => {\n      const { appointmentChanges, editingAppointment } = this.state;\n      const { onCommitChanges, preCommitChanges } = this.props;\n      if (!editingAppointment) {\n        return;\n      }\n      const changes = !editingAppointment.rRule\n        ? { changed: changedAppointmentById(appointmentChanges, editingAppointment.id!) }\n        : preCommitChanges!(appointmentChanges, editingAppointment, type);\n\n      onCommitChanges(changes);\n      this.cancelChangedAppointment();\n      this.stopEditAppointment();\n    };\n\n    this.commitAddedAppointment = () => {\n      const { onCommitChanges } = this.props;\n      const { addedAppointment: stateAddedAppointment } = this.state;\n      onCommitChanges({\n        added: stateAddedAppointment,\n      });\n    };\n\n    this.commitDeletedAppointment = ({ deletedAppointmentData, type = 'current' }) => {\n      const { onCommitChanges, preCommitChanges } = this.props;\n\n      const changes = deletedAppointmentData.rRule\n        ? preCommitChanges!(null, deletedAppointmentData, type)\n        : { deleted: deletedAppointmentData.id };\n      onCommitChanges(changes);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingAppointment = prevState.editingAppointment,\n      appointmentChanges = prevState.appointmentChanges,\n      addedAppointment = prevState.addedAppointment,\n    } = nextProps;\n\n    return {\n      editingAppointment,\n      appointmentChanges,\n      addedAppointment,\n    };\n  }\n\n  render() {\n    const { addedAppointment, editingAppointment, appointmentChanges } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter name=\"editingAppointment\" value={editingAppointment} />\n        <Action name=\"startEditAppointment\" action={this.startEditAppointment} />\n        <Action name=\"stopEditAppointment\" action={this.stopEditAppointment} />\n\n        <Getter name=\"appointmentChanges\" value={appointmentChanges} />\n        <Action name=\"changeAppointment\" action={this.changeAppointment} />\n        <Action name=\"cancelChangedAppointment\" action={this.cancelChangedAppointment} />\n        <Action name=\"commitChangedAppointment\" action={this.commitChangedAppointment} />\n\n        <Getter name=\"addedAppointment\" value={addedAppointment} />\n        <Action name=\"addAppointment\" action={this.addAppointment} />\n        <Action name=\"changeAddedAppointment\" action={this.changeAddedAppointment} />\n        <Action name=\"cancelAddedAppointment\" action={this.cancelAddedAppointment} />\n        <Action name=\"commitAddedAppointment\" action={this.commitAddedAppointment} />\n\n        <Action name=\"commitDeletedAppointment\" action={this.commitDeletedAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the scheduler appointment editing state. */\nexport const EditingState: React.ComponentType<EditingStateProps> = EditingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  createStateHelper,\n  StateHelper,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  OPEN_COMMAND_BUTTON,\n  CLOSE_COMMAND_BUTTON,\n  DELETE_COMMAND_BUTTON,\n  setAppointmentMeta,\n  AppointmentMeta,\n  TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n  getAppointmentResources,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentTooltipProps, AppointmentTooltipState, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n  { name: 'EditingState', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON,\n};\n\nclass AppointmentTooltipBase extends React.PureComponent<\n  AppointmentTooltipProps, AppointmentTooltipState\n> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentMeta: (appointmentMeta: AppointmentMeta) => void;\n  onAppointmentClick: (appointmentMeta: AppointmentMeta) => void;\n\n  static defaultProps: Partial<AppointmentTooltipProps> = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false,\n  };\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentMeta: () => {\n          const { onAppointmentMetaChange } = this.props;\n          return onAppointmentMetaChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentMeta = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    this.onAppointmentClick = ({ target, data }) => {\n      this.setAppointmentMeta({ target, data });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentMeta = prevState.appointmentMeta,\n    } = nextProps;\n    return {\n      appointmentMeta,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      showOpenButton,\n      showDeleteButton,\n      showCloseButton,\n      layoutComponent: Layout,\n      headerComponent,\n      contentComponent,\n      commandButtonComponent,\n      recurringIconComponent,\n    } = this.props;\n    const { visible, appointmentMeta } = this.state;\n\n    return (\n      <Plugin\n        name=\"AppointmentTooltip\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              formatDate, resources, plainResources,\n            }, {\n              finishDeleteAppointment, openDeleteConfirmationDialog,\n            }) => {\n              const onDeleteButtonClick = () => {\n                if (!finishDeleteAppointment) {\n                  return;\n                }\n                if (openDeleteConfirmationDialog) {\n                  openDeleteConfirmationDialog({\n                    hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n                    appointmentData: appointmentMeta.data,\n                  });\n                } else {\n                  this.toggleVisibility();\n                  finishDeleteAppointment(appointmentMeta.data);\n                }\n              };\n              return (\n                <TemplatePlaceholder\n                  name=\"tooltip\"\n                  params={{\n                    commandButtonComponent,\n                    recurringIconComponent,\n                    showOpenButton,\n                    showDeleteButton,\n                    showCloseButton,\n                    headerComponent,\n                    contentComponent,\n                    appointmentMeta,\n                    appointmentResources: appointmentMeta ? getAppointmentResources(\n                      appointmentMeta.data as any, resources, plainResources,\n                    ) : [],\n                    visible,\n                    onHide: this.toggleVisibility,\n                    commandButtonIds,\n                    onDeleteButtonClick,\n                    formatDate,\n                  }}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: any) => <Layout {...params} />}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplatePlaceholder\n              params={{\n                ...params,\n                onClick: ({ target, data }) =>\n                 this.onAppointmentClick({ target, data }),\n              }}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nexport const AppointmentTooltip: React.ComponentType<AppointmentTooltipProps> = AppointmentTooltipBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  createStateHelper,\n  StateHelper,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  setAppointmentData,\n  isAllDayCell,\n  callActionIfExists,\n  AppointmentModel,\n  TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n  getAppointmentResources,\n  ValidResourceInstance,\n  checkMultipleResourceFields,\n} from '@devexpress/dx-scheduler-core';\n\nimport {\n  AppointmentFormProps, AppointmentFormState, AppointmentTooltip, Appointments,\n} from '../types';\n\nconst addDoubleClickToCell = (\n  title, startDate, endDate, groupingInfo, resources,\n  allDay, openFormHandler, addAppointment, params,\n) => {\n  const resourceFields = !!groupingInfo\n    ? groupingInfo.reduce((acc, currentGroup) => (\n      { ...acc, [currentGroup.fieldName]: currentGroup.id }\n    ), {}) : {};\n  const validResourceFields = resources\n    ? checkMultipleResourceFields(resourceFields, resources)\n    : resourceFields;\n\n  const newAppointmentData = {\n    title,\n    startDate,\n    endDate,\n    allDay,\n    ...validResourceFields,\n  };\n\n  return (\n    <TemplatePlaceholder\n      params={{\n        ...params,\n        onDoubleClick: () => {\n          openFormHandler(newAppointmentData);\n          callActionIfExists(addAppointment,\n            { appointmentData: newAppointmentData });\n        },\n      }}\n    />\n  );\n};\n\nconst defaultMessages = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every',\n};\n\nconst CommandLayoutPlaceholder = () => <TemplatePlaceholder name=\"commandLayout\" />;\nconst BasicLayoutPlaceholder = () => <TemplatePlaceholder name=\"basicLayout\" />;\nconst RecurrenceLayoutPlaceholder = () => <TemplatePlaceholder name=\"recurrenceLayout\" />;\n\nconst pluginDependencies = [\n  { name: 'EditingState', optional: true },\n  { name: 'Appointments', optional: true },\n  { name: 'AppointmentTooltip', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst prepareChanges = (\n  appointmentData, editingAppointment,\n  addedAppointment, appointmentChanges,\n  resources, plainResources,\n) => {\n  const isNew = !editingAppointment;\n  const changedAppointment = {\n    ...appointmentData,\n    ...appointmentChanges,\n    ...isNew && addedAppointment,\n  };\n  const appointmentResources = getAppointmentResources(\n    changedAppointment, resources, plainResources,\n  );\n  const isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return { changedAppointment, appointmentResources, isNew, isFormEdited };\n};\n\nconst isFormFullSize = (\n  isFormVisible, changedAppointmentRRule, previousAppointmentRRule,\n) => !!changedAppointmentRRule || (!isFormVisible && !!previousAppointmentRRule);\n\nclass AppointmentFormBase extends React.PureComponent<AppointmentFormProps, AppointmentFormState> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentData: (payload: any) => void;\n  openFormHandler: (payload: AppointmentModel) => void;\n  container = React.createRef();\n\n  static defaultProps: Partial<AppointmentFormProps> = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: () => undefined,\n    onAppointmentDataChange: () => undefined,\n  };\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {},\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentData: () => {\n          const { onAppointmentDataChange } = this.props;\n          return onAppointmentDataChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentData = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    this.openFormHandler = (appointmentData) => {\n      this.setAppointmentData({ appointmentData });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentData = prevState.appointmentData,\n    } = nextProps;\n    return {\n      appointmentData,\n      visible,\n    };\n  }\n\n  commitChanges = memoize((\n    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n  ) => () =>  {\n    this.toggleVisibility();\n    if (isNew) {\n      callActionIfExists(commitAddedAppointment, changedAppointment);\n    } else if (finishCommitAppointment) {\n      finishCommitAppointment();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  cancelChanges = memoize((\n    openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n      openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n    } else {\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentChanges);\n      } else {\n        callActionIfExists(stopEditAppointment, appointmentChanges);\n        callActionIfExists(cancelChangedAppointment, appointmentChanges);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  deleteAppointment = memoize((\n    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n    stopEditAppointment, isNew,\n  ) => () => {\n    if (openDeleteConfirmationDialog) {\n      openDeleteConfirmationDialog({\n        hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY, appointmentData: changedAppointment,\n      });\n    } else {\n      callActionIfExists(finishDeleteAppointment, appointmentData);\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentData);\n      } else {\n        callActionIfExists(cancelChangedAppointment, appointmentData);\n        callActionIfExists(stopEditAppointment, appointmentData);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  changeAppointmentField = memoize((isNew, changeAddedAppointment, changeAppointment) =>\n    (change) => {\n      if (change && change.rRule) {\n        this.setState({ previousAppointment: {\n          ...this.state.previousAppointment, rRule: change.rRule,\n        }});\n      }\n      if (isNew) {\n        callActionIfExists(changeAddedAppointment, { change });\n      } else {\n        callActionIfExists(changeAppointment, { change });\n      }\n    },\n  );\n\n  getMessage = memoize((menuMessages, messages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const {\n      containerComponent: Container,\n      overlayComponent: Overlay,\n      layoutComponent: Layout,\n      commandLayoutComponent: CommandLayout,\n      basicLayoutComponent: BasicLayout,\n      recurrenceLayoutComponent: RecurrenceLayout,\n      commandButtonComponent,\n      textEditorComponent,\n      labelComponent,\n      dateEditorComponent,\n      booleanEditorComponent,\n      selectComponent,\n      radioGroupComponent,\n      weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent,\n      readOnly,\n      messages,\n    } = this.props;\n    const { visible, appointmentData, previousAppointment } = this.state;\n    const getMessage = this.getMessage(defaultMessages, messages);\n    return (\n      <Plugin\n        name=\"AppointmentForm\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_FORM_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              openCancelConfirmationDialog,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n            }) => {\n              const { changedAppointment, isNew } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const fullSize = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const onHideAction = () => visible && this.cancelChanges(\n                openCancelConfirmationDialog, isNew, stopEditAppointment,\n                { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                cancelAddedAppointment, cancelChangedAppointment,\n              )();\n\n              return (\n                <React.Fragment>\n                  <Container ref={this.container} />\n                  <Overlay\n                    visible={visible}\n                    onHide={onHideAction}\n                    fullSize={fullSize}\n                    target={this.container}\n                  >\n                    <Layout\n                      basicLayoutComponent={BasicLayoutPlaceholder}\n                      commandLayoutComponent={CommandLayoutPlaceholder}\n                      recurrenceLayoutComponent={RecurrenceLayoutPlaceholder}\n                      isRecurrence={fullSize}\n                    />\n                  </Overlay>\n                  <TemplatePlaceholder />\n                </React.Fragment>);\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"commandLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              commitAddedAppointment,\n              finishCommitAppointment,\n              finishDeleteAppointment,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n\n              openCancelConfirmationDialog,\n              openDeleteConfirmationDialog,\n            }) => {\n              const { isNew, changedAppointment, isFormEdited } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const isRecurrence = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              return (\n                <CommandLayout\n                  commandButtonComponent={commandButtonComponent}\n                  onCommitButtonClick={this.commitChanges(\n                    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n                  )}\n                  onCancelButtonClick={this.cancelChanges(\n                    openCancelConfirmationDialog, isNew, stopEditAppointment,\n                    { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                    cancelAddedAppointment, cancelChangedAppointment,\n                  )}\n                  onDeleteButtonClick={this.deleteAppointment(\n                    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n                    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n                    stopEditAppointment, isNew,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  fullSize={isRecurrence}\n                  disableSaveButton={!isFormEdited}\n                  hideDeleteButton={isNew}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"basicLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              locale,\n\n              resources,\n              plainResources,\n            }, {\n              changeAppointment,\n              changeAddedAppointment,\n            }) => {\n              const { isNew, changedAppointment, appointmentResources } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              return (\n                <BasicLayout\n                  locale={locale}\n                  appointmentData={visible ? changedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  booleanEditorComponent={booleanEditorComponent}\n                  selectComponent={selectComponent}\n                  labelComponent={labelComponent}\n                  resourceEditorComponent={resourceEditorComponent}\n                  fullSize={!changedAppointment.rRule}\n                  resources={resources}\n                  appointmentResources={appointmentResources as Array<ValidResourceInstance>}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"recurrenceLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              formatDate,\n              locale,\n              firstDayOfWeek,\n            }, {\n              changeAddedAppointment,\n              changeAppointment,\n            }) => {\n              const { isNew, changedAppointment } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                undefined, undefined,\n              );\n              const isRecurrenceLayoutVisible = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const correctedAppointment = !changedAppointment.rRule\n                ? { ...changedAppointment, rRule: previousAppointment.rRule } : changedAppointment;\n\n              return (\n                <RecurrenceLayout\n                  locale={locale}\n                  appointmentData={visible ? correctedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  formatDate={formatDate}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  radioGroupComponent={radioGroupComponent}\n                  weeklyRecurrenceSelectorComponent={weeklyRecurrenceSelectorComponent}\n                  labelComponent={labelComponent}\n                  selectComponent={selectComponent}\n                  visible={isRecurrenceLayoutVisible}\n                  firstDayOfWeek={firstDayOfWeek}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: AppointmentTooltip.LayoutProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onOpenButtonClick: () => {\n                      this.openFormHandler(params.appointmentMeta!.data);\n                      callActionIfExists(startEditAppointment, params.appointmentMeta!.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onDoubleClick: () => {\n                      this.openFormHandler(params.data);\n                      callActionIfExists(startEditAppointment, params.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"cell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                isAllDayCell(params.startDate, params.endDate),\n                this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                true, this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nexport const AppointmentForm: React.ComponentType<AppointmentFormProps> = AppointmentFormBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder,\n  TemplateConnector, DropTarget, DragSource,\n  DragDropProvider as DragDropProviderCore,\n  PluginComponents, PlaceholderWithRef,\n} from '@devexpress/dx-react-core';\nimport {\n  cellIndex, cellData, cellType, getAppointmentStyle, intervalDuration, autoScroll,\n  calculateAppointmentTimeBoundaries, calculateInsidePart, RESIZE_TOP, RESIZE_BOTTOM,\n  POSITION_START, POSITION_END, getAppointmentResources, calculateAppointmentGroups,\n  appointmentDragged, calculateDraftAppointments,\n  HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION, SCROLL_SPEED_PX,\n} from '@devexpress/dx-scheduler-core';\nimport { DragDropProviderProps, DragDropProviderState } from '../types';\n\nconst renderAppointmentItems = (items, Wrapper, draftData) => (\n  items.length > 0 ? (\n    <Wrapper>\n      {items.map((draftAppointment, index) => (\n        <TemplatePlaceholder\n          name=\"draftAppointment\"\n          key={index.toString()}\n          params={{ data: draftData, draftAppointment }}\n        />\n      ))}\n    </Wrapper>\n  ) : (\n    null\n  )\n);\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Appointments' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'AllDayPanel', optional: true },\n];\n\nclass DragDropProviderBase extends React.PureComponent<\n  DragDropProviderProps, DragDropProviderState\n> {\n  timeTableDraftAppointments: any = [];\n  allDayDraftAppointments: any = [];\n  offsetTimeTop: number | null = null;\n  appointmentStartTime: any = null;\n  appointmentEndTime: any = null;\n  appointmentGroupingInfo: any = {};\n\n  state: DragDropProviderState = {\n    startTime: null,\n    endTime: null,\n    appointmentGroupingInfo: null,\n    payload: null,\n    isOutside: false,\n    allowDrag: () => true,\n    allowResize: () => true,\n    appointmentContentTemplateKey: 0,\n    appointmentTopTemplateKey: 0,\n    appointmentBottomTemplateKey: 0,\n  };\n  static components: PluginComponents = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize',\n  };\n  static defaultProps: Partial<DragDropProviderProps> = {\n    allowDrag: () => true,\n    allowResize: () => true,\n    scrollSpeed: SCROLL_SPEED_PX,\n  };\n  static getDerivedStateFromProps(\n    props: DragDropProviderProps, state: DragDropProviderState,\n  ): DragDropProviderState | null {\n    const isAllowDragSame = props.allowDrag === state.allowDrag;\n    const isAllowResizeSame = props.allowResize === state.allowResize;\n\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n\n    return {\n      ...state,\n      appointmentContentTemplateKey:\n        isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey:\n        isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey:\n        isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize,\n    };\n\n  }\n\n  onPayloadChange(actions) {\n    return args => this.handlePayloadChange(args, actions);\n  }\n\n  calculateNextBoundaries(getters, actions, scrollSpeed) {\n    return args => this.calculateBoundaries(args, getters, actions, scrollSpeed);\n  }\n\n  resetCache() {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false,\n    });\n  }\n\n  applyChanges(\n    startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo,\n  ) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: {\n        startDate: startTime,\n        endDate: endTime,\n        ...payload.allDay && { allDay: undefined },\n        ...this.appointmentGroupingInfo,\n      },\n    });\n    this.setState({ startTime, endTime, payload, isOutside: false, appointmentGroupingInfo });\n  }\n\n  handlePayloadChange({ payload }, { finishCommitAppointment }) {\n    const { isOutside } = this.state;\n    if (payload || !isOutside) return;\n\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  calculateBoundaries(\n    { payload, clientOffset },\n    {\n      viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays, currentView,\n      timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n      grouping, resources, groups, groupOrientation: getGroupOrientation, groupByDate,\n    },\n    { changeAppointment, startEditAppointment },\n    scrollSpeed,\n  ) {\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n\n    const tableCellElementsMeta = timeTableElementsMeta;\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n\n    // AllDayPanel doesn't always exist\n    const allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects\n      ? allDayElementsMeta\n      : { getCellRects: [] };\n    const timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    const allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n\n    const targetData = cellData(\n      timeTableIndex, allDayIndex, viewCellsData, allDayCellsData,\n    );\n    const targetType = cellType(targetData);\n    const insidePart = calculateInsidePart(\n      clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex,\n    );\n    const cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    const {\n      appointmentStartTime, appointmentEndTime, offsetTimeTop,\n    } = calculateAppointmentTimeBoundaries(\n      payload, targetData, targetType, cellDurationMinutes,\n      insidePart, this.offsetTimeTop!,\n    );\n\n    const appointmentGroups = calculateAppointmentGroups(\n      targetData.groupingInfo, resources, payload,\n    );\n\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop!;\n\n    const { startTime, endTime, appointmentGroupingInfo } = this.state;\n    if (!appointmentDragged(\n      this.appointmentStartTime, startTime!,\n      this.appointmentEndTime, endTime!,\n      this.appointmentGroupingInfo, appointmentGroupingInfo,\n    )) {\n      return;\n    }\n\n    const draftAppointments = [{\n      dataItem: {\n        ...payload,\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime,\n        ...this.appointmentGroupingInfo,\n      },\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime,\n    }];\n\n    const {\n      allDayDraftAppointments,\n      timeTableDraftAppointments,\n    } = calculateDraftAppointments(\n      allDayIndex, draftAppointments, startViewDate,\n      endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta,\n      targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups,\n      groupOrientation, groupByDate?.(currentView?.name),\n    );\n\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n\n    this.applyChanges(\n      this.appointmentStartTime, this.appointmentEndTime,\n      payload, startEditAppointment, changeAppointment,\n      this.appointmentGroupingInfo,\n    );\n  }\n\n  handleDrop = ({ finishCommitAppointment }) => () => {\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  handleLeave = () => {\n    this.setState({ isOutside: true });\n  }\n\n  render() {\n    const {\n      payload, appointmentContentTemplateKey,\n      appointmentBottomTemplateKey, appointmentTopTemplateKey,\n    } = this.state;\n    const {\n      containerComponent: Container,\n      draftAppointmentComponent: DraftAppointment,\n      sourceAppointmentComponent: SourceAppointment,\n      resizeComponent: Resize,\n      allowDrag,\n      allowResize,\n      scrollSpeed,\n    } = this.props;\n\n    const draftData = {\n      ...payload, startDate: this.appointmentStartTime, endDate: this.appointmentEndTime,\n    };\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({\n              viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays,\n              timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n              grouping, resources, groups, currentView, groupByDate, groupOrientation,\n            }, {\n              changeAppointment, startEditAppointment, finishCommitAppointment,\n            }) => {\n              const calculateBoundariesByMove = this.calculateNextBoundaries({\n                viewCellsData, allDayCellsData, currentView,\n                startViewDate, endViewDate, excludedDays,\n                timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n                resources, grouping, groups, groupByDate, groupOrientation,\n              }, { changeAppointment, startEditAppointment }, scrollSpeed);\n              return (\n                <DragDropProviderCore\n                  onChange={this.onPayloadChange({ finishCommitAppointment })}\n                >\n                  <DropTarget\n                    onOver={calculateBoundariesByMove}\n                    onEnter={calculateBoundariesByMove}\n                    onDrop={this.handleDrop({ finishCommitAppointment })}\n                    onLeave={this.handleLeave}\n                  >\n                    <PlaceholderWithRef />\n                  </DropTarget>\n                </DragDropProviderCore>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template\n          name=\"appointmentContent\"\n          predicate={({ data }: any) => allowDrag!(data)}\n          key={appointmentContentTemplateKey}\n        >\n          {({ styles, ...params }: any) => (\n            <DragSource\n              payload={{ ...params.data, type: params.type }}\n            >\n              {payload && params.data.id === payload.id ? (\n                <SourceAppointment {...params} />\n              ) : (\n                <PlaceholderWithRef params={{ ...params, draggable: true }} />\n              )}\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentTop\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentTopTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_TOP, appointmentType: type }}\n            >\n              <Resize position={POSITION_START} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentBottom\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentBottomTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_BOTTOM, appointmentType: type }}\n            >\n              <Resize position={POSITION_END} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {groupOrientation?.(currentView.name) !== VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {renderAppointmentItems(this.timeTableDraftAppointments, Container, draftData)}\n                {groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"draftAppointment\">\n          {({ data, draftAppointment, ...restParams }: any) => (\n            <TemplateConnector>\n              {({ formatDate, resources, plainResources }) => {\n                const {\n                  dataItem, type, fromPrev, toNext, durationType, ...geometry\n                } = draftAppointment;\n                return (\n                  <DraftAppointment\n                    data={data}\n                    resources={getAppointmentResources(dataItem, resources, plainResources)}\n                    durationType={durationType}\n                    style={getAppointmentStyle(geometry)}\n                    type={type}\n                    fromPrev={fromPrev}\n                    toNext={toNext}\n                    formatDate={formatDate}\n                    {...restParams}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nexport const DragDropProvider: React.ComponentType<DragDropProviderProps> = DragDropProviderBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TodayButtonProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst defaultMessages = {\n  today: 'Today',\n};\n\nclass TodayButtonBase extends React.PureComponent<TodayButtonProps> {\n  static components: PluginComponents = {\n    buttonComponent: 'Button',\n  };\n  render() {\n    const {\n      buttonComponent: Button,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"TodayButton\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {(getters, {\n              changeCurrentDate,\n            }) => {\n              const setCurrentDate = nextDate => changeCurrentDate({\n                nextDate,\n              });\n              return (\n                <Button\n                  getMessage={getMessage}\n                  setCurrentDate={setCurrentDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nexport const TodayButton: React.ComponentType<TodayButtonProps> = TodayButtonBase;\n","import * as React from 'react';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, Action, Getters, Actions,\n} from '@devexpress/dx-react-core';\nimport { RECURRENCE_EDIT_SCOPE } from '@devexpress/dx-scheduler-core';\nimport { EditRecurrenceMenuProps, EditRecurrenceMenuState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nconst defaultAvailableOperations = [\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT },\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING },\n  { value: RECURRENCE_EDIT_SCOPE.ALL },\n];\n\nconst defaultMessages = {\n  [RECURRENCE_EDIT_SCOPE.CURRENT]: 'This appointment',\n  [RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING]: 'This and following appointments',\n  [RECURRENCE_EDIT_SCOPE.ALL]: 'All appointments',\n  menuEditingTitle: 'Edit recurring appointment',\n  menuDeletingTitle: 'Delete recurring appointment',\n  cancelButton: 'Cancel',\n  commitButton: 'OK',\n};\n\nclass EditRecurrenceMenuBase extends React.PureComponent<\n  EditRecurrenceMenuProps, EditRecurrenceMenuState\n> {\n  static components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container',\n  };\n\n  modalContainer = React.createRef();\n\n  state = {\n    isOpen: false,\n    deletedAppointmentData: null,\n  };\n\n  finishCommitAppointment = (\n    payload,\n    { editingAppointment }: Getters,\n    { commitChangedAppointment }: Actions,\n  ) => {\n    if (editingAppointment && !editingAppointment.rRule) {\n      commitChangedAppointment();\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: null,\n      });\n    }\n  }\n\n  finishDeleteAppointment = (\n    payload,\n    getters,\n    { commitDeletedAppointment }: Actions,\n  ) => {\n    if (payload && !payload.rRule) {\n      commitDeletedAppointment({ deletedAppointmentData: payload });\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: payload,\n      });\n    }\n  }\n\n  commit = memoize((editAction, deleteAction, payload) => (type) => {\n    if (payload) {\n      deleteAction({ deletedAppointmentData: payload, type });\n    } else {\n      editAction(type);\n    }\n    this.closeMenu();\n  });\n\n  closeMenu = () => {\n    this.setState({ isOpen: false, deletedAppointmentData: null });\n  }\n\n  cancelEditing = memoize((cancelAction, stopEditAction) => () => {\n    stopEditAction();\n    cancelAction();\n    this.closeMenu();\n  });\n\n  availableOperations = memoize((getMessage, menuAvailableOperations) =>\n    menuAvailableOperations.map(({ value }) => ({\n      value,\n      title: getMessage([value]),\n    })));\n\n  getMessage = memoize((messages, menuMessages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const { isOpen, deletedAppointmentData } = this.state;\n    const {\n      layoutComponent: Layout,\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      buttonComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = this.getMessage(messages, defaultMessages);\n    const availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n\n    return (\n      <Plugin\n        name=\"EditRecurrenceMenu\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplatePlaceholder />\n          <Container ref={this.modalContainer} />\n          <TemplatePlaceholder name=\"overlay\" />\n        </Template>\n\n        <Template name=\"overlay\">\n          <TemplateConnector>\n            {(getters, {\n              commitChangedAppointment, commitDeletedAppointment,\n              cancelChangedAppointment, stopEditAppointment,\n            }) => {\n              const commit = this.commit(\n                commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData,\n              );\n              const cancelEditing = this.cancelEditing(\n                cancelChangedAppointment, stopEditAppointment,\n              );\n\n              return (\n                <Overlay\n                  target={this.modalContainer}\n                  visible={isOpen}\n                  onHide={this.closeMenu}\n                >\n                  <Layout\n                    isDeleting={!!deletedAppointmentData}\n                    buttonComponent={buttonComponent}\n                    handleClose={cancelEditing}\n                    commit={commit}\n                    availableOperations={availableOperations}\n                    getMessage={getMessage}\n                  />\n                </Overlay>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/**\n * A plugin that renders the Scheduler's edit menu.\n * Should not be used with the `IntegratedEditing` plugin.\n */\nexport const EditRecurrenceMenu: React.ComponentType<\n  EditRecurrenceMenuProps\n> = EditRecurrenceMenuBase;\n","import * as React from 'react';\nimport { Action, Plugin, Actions } from '@devexpress/dx-react-core';\nimport { IntegratedEditingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nclass IntegratedEditingBase extends React.PureComponent<IntegratedEditingProps> {\n  static defaultProps = {\n    totalCount: 0,\n  };\n\n  finishCommitAppointment = (payload, getters, { commitChangedAppointment }: Actions) => {\n    commitChangedAppointment();\n  }\n\n  finishDeleteAppointment = (payload, getters, { commitDeletedAppointment }: Actions) => {\n    commitDeletedAppointment({ deletedAppointmentData: payload });\n  }\n\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedEditing\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that allows implementing a editing calculation logic. */\nexport const IntegratedEditing: React.ComponentType<IntegratedEditingProps> = IntegratedEditingBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  convertResourcesToPlain, validateResources, addResourcesToAppointments,\n} from '@devexpress/dx-scheduler-core';\nimport { ResourcesProps } from '../types/resources/resources.types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n];\n\nconst addResourcesToTimeTableAppointments = ({\n  timeTableAppointments, resources, plainResources,\n}: Getters) => timeTableAppointments\n  && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\nconst addResourcesToAllDayAppointments = ({\n    allDayAppointments, resources, plainResources,\n  }: Getters) => allDayAppointments\n    && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n\nconst ResourcesBase: React.FunctionComponent<ResourcesProps> = React.memo(({\n  data, mainResourceName, palette,\n}) => {\n  const convertResources = ({ resources }: Getters) =>\n    convertResourcesToPlain(resources);\n\n  return (\n  <Plugin\n    name=\"Resources\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"resources\" value={validateResources(data, mainResourceName, palette)} />\n    <Getter name=\"plainResources\" computed={convertResources} />\n    <Getter name=\"timeTableAppointments\" computed={addResourcesToTimeTableAppointments} />\n    <Getter name=\"allDayAppointments\" computed={addResourcesToAllDayAppointments} />\n  </Plugin>\n  );\n});\n\n/** A plugin that manages schedule's resources. */\nexport const Resources: React.ComponentType<ResourcesProps> = ResourcesBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Action,\n} from '@devexpress/dx-react-core';\nimport { ConfirmationDialogProps } from '../types/editing/confirmation-dialog.types';\nimport { AppointmentModel } from '@devexpress/dx-scheduler-core';\n\nconst defaultMessages = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?',\n};\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete',\n};\n\nconst ConfirmationDialogBase: React.FunctionComponent<ConfirmationDialogProps> & {components: {\n  overlayComponent: string, containerComponent: string,\n  layoutComponent: string, buttonComponent: string,\n}} = ({\n  messages, overlayComponent: Overlay, layoutComponent: Layout, containerComponent: Container,\n  buttonComponent, ignoreDelete, ignoreCancel,\n}) => {\n  const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n  const modalContainer = React.useRef();\n\n  const [visible, setVisible] = React.useState(false);\n  const [actionType, setActionType] = React.useState('');\n  const [hideActionName, setHideActionName] = React.useState('');\n  const [appointmentData, setAppointmentData] = React.useState({});\n\n  const toggleVisibility = React.useCallback(() => {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n\n  const confirmCancelChanges = React.useCallback((hideAction) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n\n  const confirmDelete = React.useCallback(({\n    hideActionName: hideAction, appointmentData: changedAppointment,\n  }) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n\n  const confirmAction = React.useCallback((\n    isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment,\n    cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    hideEditor();\n    toggleVisibility();\n    if (isNewAppointment) {\n      cancelAddedAppointment();\n    } else {\n      stopEditAppointment();\n      cancelChangedAppointment();\n    }\n    if (actionType === ACTION_TYPES.DELETE) {\n      finishDeleteAppointment(appointmentData);\n    }\n  }, [toggleVisibility, actionType, appointmentData]);\n\n  return (\n    <Plugin\n      name=\"ConfirmationDialog\"\n      dependencies={pluginDependencies}\n    >\n      {!ignoreCancel &&\n        <Action name=\"openCancelConfirmationDialog\" action={confirmCancelChanges} />\n      }\n      {!ignoreDelete &&\n        <Action name=\"openDeleteConfirmationDialog\" action={confirmDelete} />\n      }\n\n      <Template name=\"schedulerRoot\">\n        <TemplatePlaceholder />\n        <Container ref={modalContainer} />\n        <TemplatePlaceholder name=\"confirmationDialogOverlay\" />\n      </Template>\n\n      <Template name=\"confirmationDialogOverlay\">\n        <TemplateConnector>\n          {({\n            editingAppointment,\n          }, actions) => {\n            const handleConfirm = confirmAction(\n              !editingAppointment, actions[hideActionName], actions.stopEditAppointment,\n              actions.finishDeleteAppointment, actions.cancelAddedAppointment,\n              actions.cancelChangedAppointment,\n            );\n\n            return (\n              <Overlay\n                target={modalContainer}\n                visible={visible}\n                onHide={toggleVisibility}\n              >\n                <Layout\n                  buttonComponent={buttonComponent}\n                  handleCancel={toggleVisibility}\n                  handleConfirm={handleConfirm}\n                  getMessage={getMessage}\n                  isDeleting={actionType === ACTION_TYPES.DELETE}\n                  appointmentData={appointmentData as AppointmentModel}\n                />\n              </Overlay>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    </Plugin>\n  );\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button',\n};\n\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false,\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nexport const ConfirmationDialog: React.ComponentType<\n  ConfirmationDialogProps\n> = ConfirmationDialogBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, StateHelper, ActionFn, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  ToggleGroupPayload, toggleExpandedGroups, HORIZONTAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { GroupingStateProps, GroupingStateState } from '../types';\n\nclass GroupingStateBase extends React.PureComponent<GroupingStateProps, GroupingStateState> {\n  static defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: () => false,\n    groupOrientation: () => HORIZONTAL_GROUP_ORIENTATION,\n  };\n  stateHelper: StateHelper;\n  toggleGroupExpanded: ActionFn<ToggleGroupPayload>;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        expandedGroups: () => {\n          const { onExpandedGroupsChange } = this.props;\n          return onExpandedGroupsChange;\n        },\n      },\n    );\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      grouping = prevState.grouping,\n      expandedGroups = prevState.expandedGroups,\n    } = nextProps;\n\n    return { grouping, expandedGroups };\n  }\n\n  render() {\n    const { grouping, expandedGroups } = this.state;\n    const { groupByDate, groupOrientation } = this.props;\n\n    return (\n      <Plugin name=\"GroupingState\">\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"groupByDate\" value={groupByDate} />\n        <Getter name=\"groupOrientation\" value={groupOrientation} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the grouping state. */\nexport const GroupingState: React.ComponentType<GroupingStateProps> = GroupingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { GroupingPanelProps } from '../types';\nimport {\n  VERTICAL_VIEW_LEFT_OFFSET, HORIZONTAL_VIEW_LEFT_OFFSET,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'IntegratedGrouping' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'ViewState', optional: true },\n];\n\nclass GroupingPanelBase extends React.PureComponent<GroupingPanelProps> {\n  static components: PluginComponents = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell',\n  };\n\n  render() {\n    const {\n      horizontalLayoutComponent: HorizontalLayout,\n      verticalLayoutComponent: VerticalLayout,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"groupingPanel\">\n          <TemplateConnector>\n            {({\n              viewCellsData, currentView, scrollingStrategy, allDayPanelExists,\n              groupByDate, groupOrientation: getGroupOrientation, groups,\n            }) => {\n              const groupOrientation = getGroupOrientation(currentView?.name);\n              return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? (\n                <HorizontalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  colSpan={viewCellsData[0].length}\n                  cellStyle={{\n                    left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth\n                    : currentView?.type === VIEW_TYPES.MONTH\n                      ? HORIZONTAL_VIEW_LEFT_OFFSET\n                      : VERTICAL_VIEW_LEFT_OFFSET,\n                  }}\n                  showHeaderForEveryDate={groupByDate?.(currentView && currentView.name)}\n                />\n              ) : (\n                <VerticalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  rowSpan={viewCellsData.length}\n                  viewType={currentView?.type}\n                  cellTextTopOffset={scrollingStrategy?.fixedTopHeight}\n                  alignWithAllDayRow={allDayPanelExists}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the grouping panel used to display group names. */\nexport const GroupingPanel: React.ComponentType<GroupingPanelProps> = GroupingPanelBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  isMonthCell, isShadedAppointment,\n  isCellShaded, getCurrentTimeIndicatorTop,\n} from '@devexpress/dx-scheduler-core';\nimport { CurrentTimeIndicatorProps, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'DragDropProvider', optional: true },\n  { name: 'Appointments', optional: true },\n];\n\nconst CurrentTimeIndicatorBase: React.FunctionComponent<CurrentTimeIndicatorProps>  & {components: {\n  indicatorComponent: string,\n}} = ({\n  indicatorComponent, shadePreviousAppointments, shadePreviousCells, updateInterval,\n}) => {\n  const [currentTime, setCurrentTime] = React.useState(Date.now);\n\n  React.useEffect(() => {\n    const tick = () => setCurrentTime(Date.now());\n    const intervalId = (updateInterval\n      ? window.setInterval(tick, updateInterval)\n      : undefined\n    );\n    return () => window.clearInterval(intervalId);\n  }, [updateInterval]);\n\n  return (\n    <Plugin\n      name=\"CurrentTimeIndicator\"\n      dependencies={pluginDependencies}\n    >\n      <Template\n        name=\"cell\"\n        predicate={({ otherMonth }: any) => !isMonthCell(otherMonth)}\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n              currentTimeIndicatorComponent: indicatorComponent,\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"cell\"\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isCellShaded(params, currentTime, shadePreviousCells),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"appointmentContent\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"draftAppointment\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n    </Plugin>\n  );\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false,\n};\n\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator',\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nexport const CurrentTimeIndicator: React.ComponentType<\n  CurrentTimeIndicatorProps\n> = CurrentTimeIndicatorBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  getGroupsFromResources, expandViewCellsDataWithGroups,\n  sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource,\n  expandGroups, VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n  updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData,\n} from '@devexpress/dx-scheduler-core';\nimport { IntegratedGroupingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Resources' },\n  { name: 'GroupingState' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n];\n\nconst getViewCellsDataComputed = ({\n  viewCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => expandViewCellsDataWithGroups(\n  viewCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\nconst getAllDayCellsDataComputed = ({\n  allDayCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => allDayCellsData && expandViewCellsDataWithGroups(\n  allDayCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\n\nconst getGroupsComputed = (\n  { resourcesToGroupBy }: Getters,\n) => getGroupsFromResources(resourcesToGroupBy);\n\nconst getResourcesToGroupByComputed = (\n  { resources, grouping }: Getters,\n) => sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n\nconst getGroupingComputed = (\n  { grouping, resources }: Getters,\n) => updateGroupingWithMainResource(grouping, resources);\n\nconst getTimeTableAppointmentsComputed = ({\n  timeTableAppointments, grouping, resourcesToGroupBy,\n  groups, groupByDate, currentView, excludedDays,\n}: Getters) => timeTableAppointments\n  && expandGroups(\n    timeTableAppointments, grouping, resourcesToGroupBy, groups,\n    excludedDays, groupByDate(currentView?.name) && currentView?.type === VIEW_TYPES.MONTH,\n  );\n\nconst getAllDayAppointmentsComputed = ({\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, groupByDate, currentView, excludedDays,\n  }: Getters) => allDayAppointments &&\n  expandGroups(\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, excludedDays, groupByDate(currentView?.name),\n  );\n\nconst getGroupByDateComputed = ({\n  currentView, groupByDate, groupOrientation,\n}: Getters) => groupOrientation(currentView?.name) === VERTICAL_GROUP_ORIENTATION\n  ? () => false : groupByDate;\n\nconst getTimeTableElementsMetaComputed = ({\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateTimeTableCellElementsMeta(\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getAllDayElementsMetaComputed = ({\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateAllDayCellElementsMeta(\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getTimeCellsDataComputed = ({\n  viewCellsData, timeCellsData,  currentView,\n  groups, resourcesToGroupBy, groupOrientation,\n}: Getters) => timeCellsData\n  && updateTimeCellsData(\n    viewCellsData,\n    timeCellsData,\n    groups,\n    resourcesToGroupBy,\n    groupOrientation(currentView.name),\n  );\n\nconst IntegratedGroupingBase: React.FunctionComponent<IntegratedGroupingProps> = React.memo(() => (\n  <Plugin\n    name=\"IntegratedGrouping\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"groupByDate\" computed={getGroupByDateComputed} />\n    <Getter name=\"grouping\" computed={getGroupingComputed} />\n    <Getter name=\"resourcesToGroupBy\" computed={getResourcesToGroupByComputed} />\n    <Getter name=\"groups\" computed={getGroupsComputed} />\n\n    <Getter name=\"viewCellsData\" computed={getViewCellsDataComputed} />\n    <Getter name=\"allDayCellsData\" computed={getAllDayCellsDataComputed} />\n    <Getter name=\"timeCellsData\" computed={getTimeCellsDataComputed} />\n\n    <Getter name=\"timeTableAppointments\" computed={getTimeTableAppointmentsComputed} />\n    <Getter name=\"allDayAppointments\" computed={getAllDayAppointmentsComputed} />\n\n    <Getter name=\"allDayElementsMeta\" computed={getAllDayElementsMetaComputed} />\n    <Getter name=\"timeTableElementsMeta\" computed={getTimeTableElementsMetaComputed} />\n  </Plugin>\n));\n\n/** A plugin that implements grouping. */\nexport const IntegratedGrouping: React.ComponentType<\n  IntegratedGroupingProps\n> = IntegratedGroupingBase;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}