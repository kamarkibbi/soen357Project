{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { ScrollView, Platform, FlatList, SectionList, RefreshControl } from 'react-native';\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\nimport createNavigationAwareScrollable from './createNavigationAwareScrollable';\nimport invariant from './utils/invariant';\nlet WrappedScrollView;\nif (Platform.OS === 'android') {\n  // @todo: use GHScrollView again when\n  // https://github.com/kmagiera/react-native-gesture-handler/issues/560 has\n  // been fixed.\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\n} else {\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\n}\nfunction propsMaybeWithRefreshControl(props) {\n  const onRefresh = props.onRefresh;\n  if (onRefresh) {\n    invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n    return {\n      ...props,\n      refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n        refreshing: props.refreshing,\n        onRefresh: onRefresh,\n        progressViewOffset: props.progressViewOffset\n      }) : props.refreshControl\n    };\n  } else {\n    return props;\n  }\n}\nconst WrappedFlatList = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(FlatList, _extends({\n  ref: ref\n}, props, {\n  renderScrollComponent: props => /*#__PURE__*/React.createElement(WrappedScrollView, propsMaybeWithRefreshControl(props))\n})));\nconst WrappedSectionList = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SectionList, _extends({\n  ref: ref\n}, props, {\n  renderScrollComponent: props => /*#__PURE__*/React.createElement(WrappedScrollView, propsMaybeWithRefreshControl(props))\n})));\nexport { WrappedScrollView as ScrollView, WrappedFlatList as FlatList, WrappedSectionList as SectionList };","map":{"version":3,"names":["React","ScrollView","Platform","FlatList","SectionList","RefreshControl","GHScrollView","createNavigationAwareScrollable","invariant","WrappedScrollView","OS","propsMaybeWithRefreshControl","props","onRefresh","refreshing","JSON","stringify","refreshControl","createElement","progressViewOffset","WrappedFlatList","forwardRef","ref","_extends","renderScrollComponent","WrappedSectionList"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@react-navigation/native/lib/module/Scrollables.js"],"sourcesContent":["import * as React from 'react';\nimport {\n  ScrollView,\n  Platform,\n  FlatList,\n  SectionList,\n  RefreshControl,\n} from 'react-native';\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\nimport createNavigationAwareScrollable from './createNavigationAwareScrollable';\nimport invariant from './utils/invariant';\n\nlet WrappedScrollView;\nif (Platform.OS === 'android') {\n  // @todo: use GHScrollView again when\n  // https://github.com/kmagiera/react-native-gesture-handler/issues/560 has\n  // been fixed.\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\n} else {\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\n}\n\nfunction propsMaybeWithRefreshControl(props) {\n  const onRefresh = props.onRefresh;\n  if (onRefresh) {\n    invariant(\n      typeof props.refreshing === 'boolean',\n      '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n        JSON.stringify(props.refreshing) +\n        '`'\n    );\n    return {\n      ...props,\n      refreshControl:\n        props.refreshControl == null ? (\n          <RefreshControl\n            refreshing={props.refreshing}\n            onRefresh={onRefresh}\n            progressViewOffset={props.progressViewOffset}\n          />\n        ) : (\n          props.refreshControl\n        ),\n    };\n  } else {\n    return props;\n  }\n}\n\nconst WrappedFlatList = React.forwardRef((props, ref) => (\n  <FlatList\n    ref={ref}\n    {...props}\n    renderScrollComponent={(props) => (\n      <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />\n    )}\n  />\n));\n\nconst WrappedSectionList = React.forwardRef((props, ref) => (\n  <SectionList\n    ref={ref}\n    {...props}\n    renderScrollComponent={(props) => (\n      <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />\n    )}\n  />\n));\n\nexport {\n  WrappedScrollView as ScrollView,\n  WrappedFlatList as FlatList,\n  WrappedSectionList as SectionList,\n};\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,cALF,QAMO,cANP;AAOA,SAASJ,UAAU,IAAIK,YAAvB,QAA2C,8BAA3C;AACA,OAAOC,+BAAP,MAA4C,mCAA5C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,iBAAJ;AACA,IAAIP,QAAQ,CAACQ,EAAT,KAAgB,SAApB,EAA+B;EAC7B;EACA;EACA;EACAD,iBAAiB,GAAGF,+BAA+B,CAACN,UAAD,CAAnD;AACD,CALD,MAKO;EACLQ,iBAAiB,GAAGF,+BAA+B,CAACD,YAAD,CAAnD;AACD;AAED,SAASK,4BAATA,CAAsCC,KAAtC,EAA6C;EAC3C,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;EACA,IAAIA,SAAJ,EAAe;IACbL,SAAS,CACP,OAAOI,KAAK,CAACE,UAAb,KAA4B,SADrB,EAEP,sFACEC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACE,UAArB,CADF,GAEE,GAJK,CAAT;IAMA,OAAO;MACL,GAAGF,KADE;MAELK,cAAc,EACZL,KAAK,CAACK,cAAN,IAAwB,IAAxB,gBACEjB,KAAA,CAAAkB,aAAA,CAACb,cAAD;QACES,UAAU,EAAEF,KAAK,CAACE,UADpB;QAEED,SAAS,EAAEA,SAFb;QAGEM,kBAAkB,EAAEP,KAAK,CAACO;MAH5B,EADF,GAOEP,KAAK,CAACK;IAVL,CAAP;EAaD,CApBD,MAoBO;IACL,OAAOL,KAAP;EACD;AACF;AAED,MAAMQ,eAAe,gBAAGpB,KAAK,CAACqB,UAAN,CAAiB,CAACT,KAAD,EAAQU,GAAR,kBACvCtB,KAAA,CAAAkB,aAAA,CAACf,QAAD,EAAAoB,QAAA;EACED,GAAG,EAAEA;AADP,GAEMV,KAFN;EAGEY,qBAAqB,EAAGZ,KAAD,iBACrBZ,KAAA,CAAAkB,aAAA,CAACT,iBAAD,EAAuBE,4BAA4B,CAACC,KAAD,CAAnD;AAJJ,GADsB,CAAxB;AAUA,MAAMa,kBAAkB,gBAAGzB,KAAK,CAACqB,UAAN,CAAiB,CAACT,KAAD,EAAQU,GAAR,kBAC1CtB,KAAA,CAAAkB,aAAA,CAACd,WAAD,EAAAmB,QAAA;EACED,GAAG,EAAEA;AADP,GAEMV,KAFN;EAGEY,qBAAqB,EAAGZ,KAAD,iBACrBZ,KAAA,CAAAkB,aAAA,CAACT,iBAAD,EAAuBE,4BAA4B,CAACC,KAAD,CAAnD;AAJJ,GADyB,CAA3B;AAUA,SACEH,iBAAiB,IAAIR,UADvB,EAEEmB,eAAe,IAAIjB,QAFrB,EAGEsB,kBAAkB,IAAIrB,WAHxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}