{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// @ts-check\nimport * as React from 'react';\n/**\n * @typedef {object} State\n * @prop {number} index\n * @prop {({ key: string } & (State | {}))[]} routes\n * @prop {boolean} [isTransitioning]\n *\n * @typedef {object} ParentPayload\n * @prop {string} type\n * @prop {object} action\n * @prop {State} state\n * @prop {State | {key: string, routes?: undefined, index?: undefined, isTransitioning?: undefined} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Payload\n * @prop {string} type\n * @prop {object} action\n * @prop {State | {key: string}} state\n * @prop {State | {key: string} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Props\n * @prop {object} navigation\n * @prop {Function} navigation.addListener\n * @prop {Function} navigation.removeListener\n * @prop {() => boolean} navigation.isFocused\n * @prop {() => object | undefined} navigation.dangerouslyGetParent\n * @prop {State} navigation.state\n * @prop {(target: string, type: string, data: any) => void} onEvent\n *\n * @extends {React.Component<Props>}\n */\n\nexport default class NavigationEventManager extends React.Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"_actionSubscription\", void 0);\n    _defineProperty(this, \"_willFocusSubscription\", void 0);\n    _defineProperty(this, \"_willBlurSubscription\", void 0);\n    _defineProperty(this, \"_didFocusSubscription\", void 0);\n    _defineProperty(this, \"_didBlurSubscription\", void 0);\n    _defineProperty(this, \"_refocusSubscription\", void 0);\n    _defineProperty(this, \"_lastWillBlurKey\", void 0);\n    _defineProperty(this, \"_lastWillFocusKey\", void 0);\n    _defineProperty(this, \"_lastDidBlurKey\", void 0);\n    _defineProperty(this, \"_lastDidFocusKey\", void 0);\n    _defineProperty(this, \"_handleAction\", _ref => {\n      let {\n        state,\n        lastState,\n        action,\n        type,\n        context\n      } = _ref;\n      var _lastState$routes;\n      const {\n        navigation,\n        onEvent\n      } = this.props; // We should only emit events when the navigator is focused\n      // When navigator is not focused, screens inside shouldn't receive focused status either\n\n      if (!navigation.isFocused()) {\n        return;\n      }\n      const previous = lastState ? (_lastState$routes = lastState.routes) === null || _lastState$routes === void 0 ? void 0 : _lastState$routes[lastState.index] : undefined;\n      const current = state.routes[state.index];\n      const payload = {\n        context: \"\".concat(current.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: current,\n        lastState: previous,\n        action,\n        type\n      };\n      if ((previous === null || previous === void 0 ? void 0 : previous.key) !== current.key) {\n        this._emitWillFocus(current.key, payload);\n        if (previous === null || previous === void 0 ? void 0 : previous.key) {\n          this._emitWillBlur(previous.key, payload);\n        }\n      }\n      if ((lastState === null || lastState === void 0 ? void 0 : lastState.isTransitioning) !== state.isTransitioning && state.isTransitioning === false) {\n        if (this._lastWillBlurKey) {\n          this._emitDidBlur(this._lastWillBlurKey, payload);\n        }\n        if (this._lastWillFocusKey) {\n          this._emitDidFocus(this._lastWillFocusKey, payload);\n        }\n      }\n      onEvent(current.key, 'action', payload);\n    });\n    _defineProperty(this, \"_handleWillFocus\", _ref2 => {\n      let {\n        lastState,\n        action,\n        context,\n        type\n      } = _ref2;\n      var _lastState$routes2;\n      const {\n        navigation\n      } = this.props;\n      const route = navigation.state.routes[navigation.state.index];\n      this._emitWillFocus(route.key, {\n        context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: route,\n        lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes2 = lastState.routes) === null || _lastState$routes2 === void 0 ? void 0 : _lastState$routes2.find(r => r.key === route.key),\n        action,\n        type\n      });\n    });\n    _defineProperty(this, \"_handleWillBlur\", _ref3 => {\n      let {\n        lastState,\n        action,\n        context,\n        type\n      } = _ref3;\n      var _lastState$routes3;\n      const {\n        navigation\n      } = this.props;\n      const route = navigation.state.routes[navigation.state.index];\n      this._emitWillBlur(route.key, {\n        context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n        state: route,\n        lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes3 = lastState.routes) === null || _lastState$routes3 === void 0 ? void 0 : _lastState$routes3.find(r => r.key === route.key),\n        action,\n        type\n      });\n    });\n    _defineProperty(this, \"_handleDidFocus\", _ref4 => {\n      let {\n        lastState,\n        action,\n        context,\n        type\n      } = _ref4;\n      const {\n        navigation\n      } = this.props;\n      if (this._lastWillFocusKey) {\n        const route = navigation.state.routes.find(r => r.key === this._lastWillFocusKey);\n        if (route) {\n          var _lastState$routes4;\n          this._emitDidFocus(route.key, {\n            context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n            state: route,\n            lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes4 = lastState.routes) === null || _lastState$routes4 === void 0 ? void 0 : _lastState$routes4.find(r => r.key === route.key),\n            action,\n            type\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"_handleDidBlur\", _ref5 => {\n      let {\n        lastState,\n        action,\n        context,\n        type\n      } = _ref5;\n      const {\n        navigation\n      } = this.props;\n      if (this._lastWillBlurKey) {\n        const route = navigation.state.routes.find(r => r.key === this._lastWillBlurKey);\n        if (route) {\n          var _lastState$routes5;\n          this._emitDidBlur(route.key, {\n            context: \"\".concat(route.key, \":\").concat(action.type, \"_\").concat(context || 'Root'),\n            state: route,\n            lastState: lastState === null || lastState === void 0 ? void 0 : (_lastState$routes5 = lastState.routes) === null || _lastState$routes5 === void 0 ? void 0 : _lastState$routes5.find(r => r.key === route.key),\n            action,\n            type\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"_handleRefocus\", () => {\n      const {\n        onEvent,\n        navigation\n      } = this.props;\n      const route = navigation.state.routes[navigation.state.index];\n      onEvent(route.key, 'refocus');\n    });\n    _defineProperty(this, \"_emitWillFocus\", (target, payload) => {\n      if (this._lastWillBlurKey === target) {\n        this._lastWillBlurKey = undefined;\n      }\n      if (this._lastWillFocusKey === target) {\n        return;\n      }\n      this._lastDidFocusKey = undefined;\n      this._lastWillFocusKey = target;\n      const {\n        navigation,\n        onEvent\n      } = this.props;\n      onEvent(target, 'willFocus', payload);\n      if (typeof navigation.state.isTransitioning !== 'boolean' || navigation.state.isTransitioning !== true && !navigation.dangerouslyGetParent()) {\n        this._emitDidFocus(target, payload);\n      }\n    });\n    _defineProperty(this, \"_emitWillBlur\", (target, payload) => {\n      if (this._lastWillFocusKey === target) {\n        this._lastWillFocusKey = undefined;\n      }\n      if (this._lastWillBlurKey === target) {\n        return;\n      }\n      this._lastDidBlurKey = undefined;\n      this._lastWillBlurKey = target;\n      const {\n        navigation,\n        onEvent\n      } = this.props;\n      onEvent(target, 'willBlur', payload);\n      if (typeof navigation.state.isTransitioning !== 'boolean' || navigation.state.isTransitioning !== true && !navigation.dangerouslyGetParent()) {\n        this._emitDidBlur(target, payload);\n      }\n    });\n    _defineProperty(this, \"_emitDidFocus\", (target, payload) => {\n      if (this._lastWillFocusKey !== target || this._lastDidFocusKey === target) {\n        return;\n      }\n      this._lastDidFocusKey = target;\n      const {\n        onEvent\n      } = this.props;\n      onEvent(target, 'didFocus', payload);\n    });\n    _defineProperty(this, \"_emitDidBlur\", (target, payload) => {\n      if (this._lastWillBlurKey !== target || this._lastDidBlurKey === target) {\n        return;\n      }\n      this._lastDidBlurKey = target;\n      const {\n        onEvent\n      } = this.props;\n      onEvent(target, 'didBlur', payload);\n    });\n  }\n  componentDidMount() {\n    const {\n      navigation\n    } = this.props;\n    this._actionSubscription = navigation.addListener('action', this._handleAction);\n    this._willFocusSubscription = navigation.addListener('willFocus', this._handleWillFocus);\n    this._willBlurSubscription = navigation.addListener('willBlur', this._handleWillBlur);\n    this._didFocusSubscription = navigation.addListener('didFocus', this._handleDidFocus);\n    this._didBlurSubscription = navigation.addListener('didBlur', this._handleDidBlur);\n    this._refocusSubscription = navigation.addListener('refocus', this._handleRefocus);\n  }\n  componentWillUnmount() {\n    var _this$_actionSubscrip, _this$_willFocusSubsc, _this$_willBlurSubscr, _this$_didFocusSubscr, _this$_didBlurSubscri, _this$_refocusSubscri;\n    (_this$_actionSubscrip = this._actionSubscription) === null || _this$_actionSubscrip === void 0 ? void 0 : _this$_actionSubscrip.remove();\n    (_this$_willFocusSubsc = this._willFocusSubscription) === null || _this$_willFocusSubsc === void 0 ? void 0 : _this$_willFocusSubsc.remove();\n    (_this$_willBlurSubscr = this._willBlurSubscription) === null || _this$_willBlurSubscr === void 0 ? void 0 : _this$_willBlurSubscr.remove();\n    (_this$_didFocusSubscr = this._didFocusSubscription) === null || _this$_didFocusSubscr === void 0 ? void 0 : _this$_didFocusSubscr.remove();\n    (_this$_didBlurSubscri = this._didBlurSubscription) === null || _this$_didBlurSubscri === void 0 ? void 0 : _this$_didBlurSubscri.remove();\n    (_this$_refocusSubscri = this._refocusSubscription) === null || _this$_refocusSubscri === void 0 ? void 0 : _this$_refocusSubscri.remove();\n  }\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n\n  render() {\n    return null;\n  }\n}","map":{"version":3,"names":["React","NavigationEventManager","Component","constructor","arguments","_defineProperty","_ref","state","lastState","action","type","context","_lastState$routes","navigation","onEvent","props","isFocused","previous","routes","index","undefined","current","payload","concat","key","_emitWillFocus","_emitWillBlur","isTransitioning","_lastWillBlurKey","_emitDidBlur","_lastWillFocusKey","_emitDidFocus","_ref2","_lastState$routes2","route","find","r","_ref3","_lastState$routes3","_ref4","_lastState$routes4","_ref5","_lastState$routes5","target","_lastDidFocusKey","dangerouslyGetParent","_lastDidBlurKey","componentDidMount","_actionSubscription","addListener","_handleAction","_willFocusSubscription","_handleWillFocus","_willBlurSubscription","_handleWillBlur","_didFocusSubscription","_handleDidFocus","_didBlurSubscription","_handleDidBlur","_refocusSubscription","_handleRefocus","componentWillUnmount","_this$_actionSubscrip","_this$_willFocusSubsc","_this$_willBlurSubscr","_this$_didFocusSubscr","_this$_didBlurSubscri","_this$_refocusSubscri","remove","render"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@react-navigation/core/lib/module/views/NavigationFocusEvents.js"],"sourcesContent":["// @ts-check\n\nimport * as React from 'react';\n\n/**\n * @typedef {object} State\n * @prop {number} index\n * @prop {({ key: string } & (State | {}))[]} routes\n * @prop {boolean} [isTransitioning]\n *\n * @typedef {object} ParentPayload\n * @prop {string} type\n * @prop {object} action\n * @prop {State} state\n * @prop {State | {key: string, routes?: undefined, index?: undefined, isTransitioning?: undefined} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Payload\n * @prop {string} type\n * @prop {object} action\n * @prop {State | {key: string}} state\n * @prop {State | {key: string} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Props\n * @prop {object} navigation\n * @prop {Function} navigation.addListener\n * @prop {Function} navigation.removeListener\n * @prop {() => boolean} navigation.isFocused\n * @prop {() => object | undefined} navigation.dangerouslyGetParent\n * @prop {State} navigation.state\n * @prop {(target: string, type: string, data: any) => void} onEvent\n *\n * @extends {React.Component<Props>}\n */\nexport default class NavigationEventManager extends React.Component {\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    this._actionSubscription = navigation.addListener(\n      'action',\n      this._handleAction\n    );\n\n    this._willFocusSubscription = navigation.addListener(\n      'willFocus',\n      this._handleWillFocus\n    );\n\n    this._willBlurSubscription = navigation.addListener(\n      'willBlur',\n      this._handleWillBlur\n    );\n\n    this._didFocusSubscription = navigation.addListener(\n      'didFocus',\n      this._handleDidFocus\n    );\n\n    this._didBlurSubscription = navigation.addListener(\n      'didBlur',\n      this._handleDidBlur\n    );\n\n    this._refocusSubscription = navigation.addListener(\n      'refocus',\n      this._handleRefocus\n    );\n  }\n\n  componentWillUnmount() {\n    this._actionSubscription?.remove();\n    this._willFocusSubscription?.remove();\n    this._willBlurSubscription?.remove();\n    this._didFocusSubscription?.remove();\n    this._didBlurSubscription?.remove();\n    this._refocusSubscription?.remove();\n  }\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _actionSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _refocusSubscription;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillFocusKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidFocusKey;\n\n  /**\n   * The 'action' event will fire when navigation state changes.\n   * Detect if the focused route changed here and emit appropriate events.\n   *\n   * @param {ParentPayload} payload\n   */\n  _handleAction = ({ state, lastState, action, type, context }) => {\n    const { navigation, onEvent } = this.props;\n\n    // We should only emit events when the navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (!navigation.isFocused()) {\n      return;\n    }\n\n    const previous = lastState\n      ? lastState.routes?.[lastState.index]\n      : undefined;\n    const current = state.routes[state.index];\n\n    const payload = {\n      context: `${current.key}:${action.type}_${context || 'Root'}`,\n      state: current,\n      lastState: previous,\n      action,\n      type,\n    };\n\n    if (previous?.key !== current.key) {\n      this._emitWillFocus(current.key, payload);\n\n      if (previous?.key) {\n        this._emitWillBlur(previous.key, payload);\n      }\n    }\n\n    if (\n      lastState?.isTransitioning !== state.isTransitioning &&\n      state.isTransitioning === false\n    ) {\n      if (this._lastWillBlurKey) {\n        this._emitDidBlur(this._lastWillBlurKey, payload);\n      }\n\n      if (this._lastWillFocusKey) {\n        this._emitDidFocus(this._lastWillFocusKey, payload);\n      }\n    }\n\n    onEvent(current.key, 'action', payload);\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillFocus(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillBlur(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillFocusKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillFocusKey\n      );\n\n      if (route) {\n        this._emitDidFocus(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillBlurKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillBlurKey\n      );\n\n      if (route) {\n        this._emitDidBlur(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  _handleRefocus = () => {\n    const { onEvent, navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    onEvent(route.key, 'refocus');\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillFocus = (target, payload) => {\n    if (this._lastWillBlurKey === target) {\n      this._lastWillBlurKey = undefined;\n    }\n\n    if (this._lastWillFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = undefined;\n    this._lastWillFocusKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willFocus', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidFocus(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillBlur = (target, payload) => {\n    if (this._lastWillFocusKey === target) {\n      this._lastWillFocusKey = undefined;\n    }\n\n    if (this._lastWillBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = undefined;\n    this._lastWillBlurKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willBlur', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidBlur(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidFocus = (target, payload) => {\n    if (this._lastWillFocusKey !== target || this._lastDidFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didFocus', payload);\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidBlur = (target, payload) => {\n    if (this._lastWillBlurKey !== target || this._lastDidBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didBlur', payload);\n  };\n\n  render() {\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}