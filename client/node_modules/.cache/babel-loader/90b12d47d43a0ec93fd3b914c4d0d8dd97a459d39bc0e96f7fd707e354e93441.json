{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport { EventTypes } from '../interfaces';\nimport GestureHandler from './GestureHandler';\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\nexport default class TapGestureHandler extends GestureHandler {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"maxDeltaX\", Number.MIN_SAFE_INTEGER);\n    _defineProperty(this, \"maxDeltaY\", Number.MIN_SAFE_INTEGER);\n    _defineProperty(this, \"maxDistSq\", Number.MIN_SAFE_INTEGER);\n    _defineProperty(this, \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n    _defineProperty(this, \"maxDelayMs\", DEFAULT_MAX_DELAY_MS);\n    _defineProperty(this, \"numberOfTaps\", DEFAULT_NUMBER_OF_TAPS);\n    _defineProperty(this, \"minNumberOfPointers\", DEFAULT_MIN_NUMBER_OF_POINTERS);\n    _defineProperty(this, \"currentMaxNumberOfPointers\", 1);\n    _defineProperty(this, \"startX\", 0);\n    _defineProperty(this, \"startY\", 0);\n    _defineProperty(this, \"offsetX\", 0);\n    _defineProperty(this, \"offsetY\", 0);\n    _defineProperty(this, \"lastX\", 0);\n    _defineProperty(this, \"lastY\", 0);\n    _defineProperty(this, \"waitTimeout\", void 0);\n    _defineProperty(this, \"delayTimeout\", void 0);\n    _defineProperty(this, \"tapsSoFar\", 0);\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n  }\n  updateGestureConfig(_ref) {\n    let {\n      enabled = true,\n      ...props\n    } = _ref;\n    super.updateGestureConfig({\n      enabled: enabled,\n      ...props\n    });\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n  resetConfig() {\n    super.resetConfig();\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n  transformNativeEvent() {\n    const rect = this.view.getBoundingClientRect();\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY()\n    };\n  }\n  clearTimeouts() {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n  startTap() {\n    this.clearTimeouts();\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n  endTap() {\n    this.clearTimeouts();\n    if (++this.tapsSoFar === this.numberOfTaps && this.currentMaxNumberOfPointers >= this.minNumberOfPointers) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  } //Handling Events\n\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.trySettingPosition(event);\n    this.startX = event.x;\n    this.startY = event.y;\n    this.lastX = event.x;\n    this.lastY = event.y;\n    this.updateState(event);\n  }\n  onPointerAdd(event) {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n    this.updateState(event);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.tracker.removeFromTracker(event.pointerId);\n    this.updateState(event);\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n    this.updateState(event);\n  }\n  onPointerMove(event) {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.updateState(event);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.updateState(event);\n    super.onPointerOutOfBounds(event);\n  }\n  onPointerCancel(event) {\n    super.onPointerCancel(event);\n    this.tracker.resetTracker();\n    this.fail();\n  }\n  updateState(event) {\n    if (this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()) {\n      this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n    }\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n    switch (this.currentState) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  trySettingPosition(event) {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n  shouldFail() {\n    const dx = this.lastX - this.startX + this.offsetX;\n    if (this.maxDeltaX !== Number.MIN_SAFE_INTEGER && Math.abs(dx) > this.maxDeltaX) {\n      return true;\n    }\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (this.maxDeltaY !== Number.MIN_SAFE_INTEGER && Math.abs(dy) > this.maxDeltaY) {\n      return true;\n    }\n    const distSq = dy * dy + dx * dx;\n    return this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq;\n  }\n  activate() {\n    super.activate();\n    this.end();\n  }\n  onCancel() {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n  resetProgress() {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}","map":{"version":3,"names":["State","EventTypes","GestureHandler","DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","constructor","arguments","_defineProperty","Number","MIN_SAFE_INTEGER","init","ref","propsRef","updateGestureConfig","_ref","enabled","props","config","numberOfTaps","undefined","maxDurationMs","maxDelayMs","maxDeltaX","maxDeltaY","maxDist","maxDistSq","minPointers","minNumberOfPointers","resetConfig","transformNativeEvent","rect","view","getBoundingClientRect","x","tracker","getLastAvgX","left","y","getLastAvgY","top","absoluteX","absoluteY","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","setTimeout","fail","endTap","tapsSoFar","currentMaxNumberOfPointers","activate","onPointerDown","event","addToTracker","trySettingPosition","startX","startY","lastX","lastY","updateState","onPointerAdd","offsetX","offsetY","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","onPointerCancel","resetTracker","getTrackedPointersCount","shouldFail","currentState","UNDETERMINED","eventType","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","distSq","end","onCancel","resetProgress"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/react-native-gesture-handler/lib/module/web/handlers/TapGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n    };\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  //Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.tracker.resetTracker();\n    this.fail();\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (\n      this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()\n    ) {\n      this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}