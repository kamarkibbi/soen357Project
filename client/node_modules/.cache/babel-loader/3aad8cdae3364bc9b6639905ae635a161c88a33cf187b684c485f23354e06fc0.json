{"ast":null,"code":"import GestureHandler from './GestureHandler';\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\n\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n  updateGestureConfig(_ref) {\n    let {\n      minPointers = 2,\n      maxPointers = 2,\n      ...props\n    } = _ref;\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props\n    });\n  }\n  isGestureEnabledForEvent(_ref2, _recognizer, _ref3) {\n    let {\n      minPointers,\n      maxPointers\n    } = _ref2;\n    let {\n      maxPointers: pointerLength\n    } = _ref3;\n    if (pointerLength > maxPointers) {\n      return {\n        failed: true\n      };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount\n    };\n  }\n}\nexport default IndiscreteGestureHandler;","map":{"version":3,"names":["GestureHandler","IndiscreteGestureHandler","shouldEnableGestureOnSetup","updateGestureConfig","_ref","minPointers","maxPointers","props","isGestureEnabledForEvent","_ref2","_recognizer","_ref3","pointerLength","failed","validPointerCount","success"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/react-native-gesture-handler/lib/module/web_hammer/IndiscreteGestureHandler.ts"],"sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nabstract class IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;;AACA,MAAeC,wBAAf,SAAgDD,cAAhD,CAA+D;EAC/B,IAA1BE,0BAA0BA,CAAA,EAAG;IAC/B,OAAO,KAAP;EACD;EAEDC,mBAAmBA,CAAAC,IAAA,EAAiD;IAAA,IAAhD;MAAEC,WAAW,GAAG,CAAhB;MAAmBC,WAAW,GAAG,CAAjC;MAAoC,GAAGC;IAAvC,CAAD,GAAAH,IAAA;IACjB,OAAO,MAAMD,mBAAN,CAA0B;MAC/BE,WAD+B;MAE/BC,WAF+B;MAG/B,GAAGC;IAH4B,CAA1B,CAAP;EAKD;EAEDC,wBAAwBA,CAAAC,KAAA,EAEtBC,WAFsB,EAAAC,KAAA,EAItB;IAAA,IAHA;MAAEN,WAAF;MAAeC;IAAf,CADsB,GAAAG,KAAA;IAAA,IAGtB;MAAEH,WAAW,EAAEM;IAAf,CAHsB,GAAAD,KAAA;IAKtB,IAAIC,aAAa,GAAGN,WAApB,EAAiC;MAC/B,OAAO;QAAEO,MAAM,EAAE;MAAV,CAAP;IACD;IACD,MAAMC,iBAAiB,GAAGF,aAAa,IAAIP,WAA3C;IACA,OAAO;MACLU,OAAO,EAAED;IADJ,CAAP;EAGD;AAzB4D;AA2B/D,eAAeb,wBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}