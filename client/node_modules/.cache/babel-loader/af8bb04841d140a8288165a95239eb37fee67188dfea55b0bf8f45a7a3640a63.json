{"ast":null,"code":"import * as React from 'react';\nimport { Animated, I18nManager, Image, View, Platform, StyleSheet } from 'react-native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport useTheme from '../../../utils/useTheme';\nexport default function HeaderBackButton(_ref) {\n  let {\n    disabled,\n    allowFontScaling,\n    backImage,\n    label,\n    labelStyle,\n    labelVisible = Platform.OS === 'ios',\n    onLabelLayout,\n    onPress,\n    pressColorAndroid: customPressColorAndroid,\n    screenLayout,\n    tintColor: customTintColor,\n    titleLayout,\n    truncatedLabel = 'Back',\n    accessibilityLabel = label && label !== 'Back' ? \"\".concat(label, \", back\") : 'Go back',\n    style\n  } = _ref;\n  const {\n    dark,\n    colors\n  } = useTheme();\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState(undefined);\n  const tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  const pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n  const handleLabelLayout = e => {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n  const shouldTruncateLabel = () => {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({\n        tintColor\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor\n        }],\n        source: require('../assets/back-icon.png'),\n        fadeDuration: 0\n      });\n    }\n  };\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n    const labelElement = /*#__PURE__*/React.createElement(View, {\n      style: screenLayout ?\n      // We make the button extend till the middle of the screen\n      // Otherwise it appears to cut off when translating\n      [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, /*#__PURE__*/React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout:\n      // This measurement is used to determine if we should truncate the label when it doesn't fit\n      // Only measure it when label is not truncated because we want the measurement of full label\n      leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n    return /*#__PURE__*/React.createElement(MaskedView, {\n      maskElement: /*#__PURE__*/React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, /*#__PURE__*/React.createElement(Image, {\n        source: require('../assets/back-icon-mask.png'),\n        style: styles.iconMask\n      }), /*#__PURE__*/React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n  return /*#__PURE__*/React.createElement(TouchableItem, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11\n      }\n    })\n  },\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"names":["React","Animated","I18nManager","Image","View","Platform","StyleSheet","MaskedView","TouchableItem","useTheme","HeaderBackButton","_ref","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","OS","onLabelLayout","onPress","pressColorAndroid","customPressColorAndroid","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","concat","style","dark","colors","initialLabelWidth","setInitialLabelWidth","useState","undefined","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","createElement","styles","icon","Boolean","iconWithLabel","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","Text","accessible","onLayout","color","numberOfLines","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","accessibilityRole","accessibilityComponentType","accessibilityTraits","testID","delayPressIn","pressColor","container","hitSlop","top","right","bottom","left","borderless","Fragment","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/react-navigation-stack/lib/module/vendor/views/Header/HeaderBackButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport useTheme from '../../../utils/useTheme';\nimport type { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  style,\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,UANF,QAQO,cARP;AASA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAKA,eAAe,SAASC,gBAATA,CAAAC,IAAA,EAgBL;EAAA,IAhB+B;IACvCC,QADuC;IAEvCC,gBAFuC;IAGvCC,SAHuC;IAIvCC,KAJuC;IAKvCC,UALuC;IAMvCC,YAAY,GAAGZ,QAAQ,CAACa,EAAT,KAAgB,KANQ;IAOvCC,aAPuC;IAQvCC,OARuC;IASvCC,iBAAiB,EAAEC,uBAToB;IAUvCC,YAVuC;IAWvCC,SAAS,EAAEC,eAX4B;IAYvCC,WAZuC;IAavCC,cAAc,GAAG,MAbsB;IAcvCC,kBAAkB,GAAGb,KAAK,IAAIA,KAAK,KAAK,MAAnB,MAAAc,MAAA,CAA+Bd,KAA/B,cAA+C,SAd7B;IAevCe;EAfuC,CAA1B,GAAAnB,IAAA;EAiBb,MAAM;IAAEoB,IAAF;IAAQC;EAAR,IAAmBvB,QAAQ,EAAjC;EAEA,MAAM,CAACwB,iBAAD,EAAoBC,oBAApB,IAA4ClC,KAAK,CAACmC,QAAN,CAEhDC,SAFgD,CAAlD;EAIA,MAAMZ,SAAS,GACbC,eAAe,KAAKW,SAApB,GACIX,eADJ,GAEIpB,QAAQ,CAACgC,MAAT,CAAgB;IACdC,GAAG,EAAEN,MAAM,CAACO,OADE;IAEdC,OAAO,EAAER,MAAM,CAACS;EAFF,CAAhB,CAHN;EAQA,MAAMpB,iBAAiB,GACrBC,uBAAuB,KAAKc,SAA5B,GACId,uBADJ,GAEIS,IAAI,GACJ,0BADI,GAEJ,oBALN;EAOA,MAAMW,iBAAiB,GAAIC,CAAD,IAA0B;IAClDxB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGwB,CAAH,CAAb;IAEAT,oBAAoB,CAACS,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBC,CAArB,GAAyBH,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBE,KAA/C,CAApB;EACD,CAJD;EAMA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OACE,CAACjC,KAAD,IACCkB,iBAAiB,IAChBP,WADD,IAECH,YAFD,IAGC,CAACA,YAAY,CAACwB,KAAb,GAAqBrB,WAAW,CAACqB,KAAlC,IAA2C,CAA3C,GAA+Cd,iBAAiB,GAAG,EALvE;EAOD,CARD;EAUA,MAAMgB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAInC,SAAJ,EAAe;MACb,OAAOA,SAAS,CAAC;QAAEU;MAAF,CAAD,CAAhB;IACD,CAFD,MAEO;MACL,oBACExB,KAAA,CAAAkD,aAAA,CAAC/C,KAAD;QACE2B,KAAK,EAAE,CACLqB,MAAM,CAACC,IADF,EAELC,OAAO,CAACpC,YAAD,CAAP,IAAyBkC,MAAM,CAACG,aAF3B,EAGLD,OAAO,CAAC7B,SAAD,CAAP,IAAsB;UAAEA;QAAF,CAHjB,CADT;QAME+B,MAAM,EAAEC,OAAO,CAAC,yBAAD,CANjB;QAOEC,YAAY,EAAE;MAPhB,EADF;IAWD;EACF,CAhBD;EAkBA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,aAAa,GAAGX,mBAAmB,KAAKrB,cAAL,GAAsBZ,KAA/D;IAEA,IAAI,CAACE,YAAD,IAAiB0C,aAAa,KAAKvB,SAAvC,EAAkD;MAChD,OAAO,IAAP;IACD;IAED,MAAMwB,YAAY,gBAChB5D,KAAA,CAAAkD,aAAA,CAAC9C,IAAD;MACE0B,KAAK,EACHP,YAAY;MACR;MACA;MACA,CAAC4B,MAAM,CAACU,YAAR,EAAsB;QAAEC,QAAQ,EAAEvC,YAAY,CAACwB,KAAb,GAAqB,CAArB,GAAyB;MAArC,CAAtB,CAHQ,GAIR;IANR,gBASE/C,KAAA,CAAAkD,aAAA,CAACjD,QAAD,CAAU8D,IAAV;MACEC,UAAU,EAAE,KADd;MAEEC,QAAQ;MACN;MACA;MACAN,aAAa,KAAK5C,KAAlB,GAA0B2B,iBAA1B,GAA8CN,SALlD;MAOEN,KAAK,EAAE,CACLqB,MAAM,CAACpC,KADF,EAELS,SAAS,GAAG;QAAE0C,KAAK,EAAE1C;MAAT,CAAH,GAA0B,IAF9B,EAGLR,UAHK,CAPT;MAYEmD,aAAa,EAAE,CAZjB;MAaEtD,gBAAgB,EAAE,CAAC,CAACA;IAbtB,GAeG8C,aAfH,CATF,CADF;IA8BA,IAAI7C,SAAS,IAAIT,QAAQ,CAACa,EAAT,KAAgB,KAAjC,EAAwC;MACtC;MACA;MACA,OAAO0C,YAAP;IACD;IAED,oBACE5D,KAAA,CAAAkD,aAAA,CAAC3C,UAAD;MACE6D,WAAW,eACTpE,KAAA,CAAAkD,aAAA,CAAC9C,IAAD;QAAM0B,KAAK,EAAEqB,MAAM,CAACkB;MAApB,gBACErE,KAAA,CAAAkD,aAAA,CAAC/C,KAAD;QACEoD,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADjB;QAEE1B,KAAK,EAAEqB,MAAM,CAACmB;MAFhB,EADF,eAKEtE,KAAA,CAAAkD,aAAA,CAAC9C,IAAD;QAAM0B,KAAK,EAAEqB,MAAM,CAACoB;MAApB,EALF;IAFJ,GAWGX,YAXH,CADF;EAeD,CA1DD;EA4DA,MAAMY,WAAW,GAAGA,CAAA,KAAMpD,OAAO,IAAIqD,qBAAqB,CAACrD,OAAD,CAA1D;EAEA,oBACEpB,KAAA,CAAAkD,aAAA,CAAC1C,aAAD;IACEI,QAAQ,EAAEA,QADZ;IAEEoD,UAAU,MAFZ;IAGEU,iBAAiB,EAAC,QAHpB;IAIEC,0BAA0B,EAAC,QAJ7B;IAKE/C,kBAAkB,EAAEA,kBALtB;IAMEgD,mBAAmB,EAAC,QANtB;IAOEC,MAAM,EAAC,aAPT;IAQEC,YAAY,EAAE,CARhB;IASE1D,OAAO,EAAER,QAAQ,GAAGwB,SAAH,GAAeoC,WATlC;IAUEO,UAAU,EAAE1D,iBAVd;IAWES,KAAK,EAAE,CAACqB,MAAM,CAAC6B,SAAR,EAAmBpE,QAAQ,IAAIuC,MAAM,CAACvC,QAAtC,EAAgDkB,KAAhD,CAXT;IAYEmD,OAAO,EAAE5E,QAAQ,CAACgC,MAAT,CAAgB;MACvBC,GAAG,EAAEF,SADkB;MAEvBI,OAAO,EAAE;QAAE0C,GAAG,EAAE,EAAP;QAAWC,KAAK,EAAE,EAAlB;QAAsBC,MAAM,EAAE,EAA9B;QAAkCC,IAAI,EAAE;MAAxC;IAFc,CAAhB,CAZX;IAgBEC,UAAU;EAhBZ,gBAkBEtF,KAAA,CAAAkD,aAAA,CAAClD,KAAD,CAAOuF,QAAP,QACGtC,eAAe,EADlB,EAEGS,WAAW,EAFd,CAlBF,CADF;AAyBD;AAED,MAAMP,MAAM,GAAG7C,UAAU,CAACkF,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTS,UAAU,EAAE,QADH;IAETC,aAAa,EAAE,KAFN;IAGT,GAAGrF,QAAQ,CAACgC,MAAT,CAAgB;MACjBC,GAAG,EAAE,IADY;MAEjBE,OAAO,EAAE;QACPmD,cAAc,EAAE,CADT;QAEPC,gBAAgB,EAAE;MAFX;IAFQ,CAAhB;EAHM,CADoB;EAY/BhF,QAAQ,EAAE;IACRiF,OAAO,EAAE;EADD,CAZqB;EAe/B9E,KAAK,EAAE;IACL+E,QAAQ,EAAE,EADL;IAEL;IACA;IACAC,aAAa,EAAE;EAJV,CAfwB;EAqB/BlC,YAAY,EAAE;IACZ;IACA;IACA6B,aAAa,EAAE,KAHH;IAIZD,UAAU,EAAE;EAJA,CArBiB;EA2B/BrC,IAAI,EAAE/C,QAAQ,CAACgC,MAAT,CAAgB;IACpBC,GAAG,EAAE;MACH0D,MAAM,EAAE,EADL;MAEHjD,KAAK,EAAE,EAFJ;MAGHkD,UAAU,EAAE,CAHT;MAIHC,WAAW,EAAE,EAJV;MAKHP,cAAc,EAAE,EALb;MAMHQ,UAAU,EAAE,SANT;MAOHC,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEnG,WAAW,CAACoG,KAAZ,GAAoB,CAAC,CAArB,GAAyB;MAAnC,CAAD;IAPR,CADe;IAUpB9D,OAAO,EAAE;MACPwD,MAAM,EAAE,EADD;MAEPjD,KAAK,EAAE,EAFA;MAGPwD,MAAM,EAAE,CAHD;MAIPJ,UAAU,EAAE,SAJL;MAKPC,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEnG,WAAW,CAACoG,KAAZ,GAAoB,CAAC,CAArB,GAAyB;MAAnC,CAAD;IALJ;EAVW,CAAhB,CA3ByB;EA6C/BhD,aAAa,EACXjD,QAAQ,CAACa,EAAT,KAAgB,KAAhB,GACI;IACEgF,WAAW,EAAE;EADf,CADJ,GAII,EAlDyB;EAmD/B7B,iBAAiB,EAAE;IACjBmC,IAAI,EAAE,CADW;IAEjBd,aAAa,EAAE,KAFE;IAGjBe,cAAc,EAAE;EAHC,CAnDY;EAwD/BlC,kBAAkB,EAAE;IAClBiC,IAAI,EAAE,CADY;IAElBE,eAAe,EAAE;EAFC,CAxDW;EA4D/BpC,QAAQ,EAAE;IACR0B,MAAM,EAAE,EADA;IAERjD,KAAK,EAAE,EAFC;IAGRkD,UAAU,EAAE,CAAC,IAHL;IAIRN,cAAc,EAAE,EAJR;IAKRgB,SAAS,EAAE,QALH;IAMRR,UAAU,EAAE,SANJ;IAORC,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAEnG,WAAW,CAACoG,KAAZ,GAAoB,CAAC,CAArB,GAAyB;IAAnC,CAAD;EAPH;AA5DqB,CAAlB,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}