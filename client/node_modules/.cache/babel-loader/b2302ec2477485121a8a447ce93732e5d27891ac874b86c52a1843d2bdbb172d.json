{"ast":null,"code":"import * as React from 'react';\nimport { View } from 'react-native';\nconst Dummy = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\nexport const PanGestureHandler = Dummy;\nexport const GestureHandlerRootView = View;\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5\n};","map":{"version":3,"names":["React","View","Dummy","_ref","children","createElement","Fragment","PanGestureHandler","GestureHandlerRootView","GestureState","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/react-navigation-stack/lib/module/vendor/views/GestureHandler.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport type { PanGestureHandlerProperties } from 'react-native-gesture-handler';\n\nconst Dummy: any = ({ children }: { children: React.ReactNode }) => (\n  <>{children}</>\n);\n\nexport const PanGestureHandler = Dummy as React.ComponentType<\n  PanGestureHandlerProperties\n>;\n\nexport const GestureHandlerRootView = View;\n\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AAGA,MAAMC,KAAU,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAF,CAAD,GAAAD,IAAA;EAAA,oBACjBH,KAAA,CAAAK,aAAA,CAAAL,KAAA,CAAAM,QAAA,QAAGF,QAAH,CADF;AAAA;AAIA,OAAO,MAAMG,iBAAiB,GAAGL,KAA1B;AAIP,OAAO,MAAMM,sBAAsB,GAAGP,IAA/B;AAEP,OAAO,MAAMQ,YAAY,GAAG;EAC1BC,YAAY,EAAE,CADY;EAE1BC,MAAM,EAAE,CAFkB;EAG1BC,KAAK,EAAE,CAHmB;EAI1BC,SAAS,EAAE,CAJe;EAK1BC,MAAM,EAAE,CALkB;EAM1BC,GAAG,EAAE;AANqB,CAArB"},"metadata":{},"sourceType":"module","externalDependencies":[]}