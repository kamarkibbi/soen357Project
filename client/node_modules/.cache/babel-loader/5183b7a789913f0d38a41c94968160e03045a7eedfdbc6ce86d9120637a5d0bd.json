{"ast":null,"code":"// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS'; // Action creators\n\nexport const back = function () {\n  let payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: BACK,\n    key: payload.key,\n    immediate: payload.immediate\n  };\n};\nexport const init = function () {\n  let payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const action = {\n    type: INIT\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\nexport const navigate = payload => {\n  const action = {\n    type: NAVIGATE,\n    routeName: payload.routeName\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\nexport const setParams = payload => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true\n});","map":{"version":3,"names":["BACK","INIT","NAVIGATE","SET_PARAMS","back","payload","arguments","length","undefined","type","key","immediate","init","action","params","navigate","routeName","setParams","preserveFocus"],"sources":["/Users/solomon-moulang-lewis/Documents/University/Year 2/Term 2/User interface design/soen357Project/client/node_modules/@react-navigation/core/lib/module/NavigationActions.ts"],"sourcesContent":["export interface NavigationParams {\n  [key: string]: any;\n}\n\nexport interface NavigationNavigateActionPayload {\n  routeName: string;\n  params?: NavigationParams;\n\n  // The action to run inside the sub-router\n  action?: NavigationNavigateAction;\n\n  key?: string;\n}\n\nexport interface NavigationNavigateAction\n  extends NavigationNavigateActionPayload {\n  type: 'Navigation/NAVIGATE';\n}\n\nexport interface NavigationBackActionPayload {\n  key?: string | null;\n  immediate?: boolean;\n}\n\nexport interface NavigationBackAction extends NavigationBackActionPayload {\n  type: 'Navigation/BACK';\n}\n\nexport interface NavigationInitActionPayload {\n  params?: NavigationParams;\n}\n\nexport interface NavigationInitAction extends NavigationInitActionPayload {\n  type: 'Navigation/INIT';\n}\n\nexport interface NavigationSetParamsActionPayload {\n  // The key of the route where the params should be set\n  key: string;\n\n  // The new params to merge into the existing route params\n  params?: NavigationParams;\n}\n\nexport interface NavigationSetParamsAction\n  extends NavigationSetParamsActionPayload {\n  type: 'Navigation/SET_PARAMS';\n  preserveFocus: true;\n}\n\n// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS';\n\n// Action creators\nexport const back = (\n  payload: NavigationBackActionPayload = {}\n): NavigationBackAction => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n});\n\nexport const init = (payload: NavigationInitActionPayload = {}) => {\n  const action: NavigationInitAction = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\n\nexport const navigate = (\n  payload: NavigationNavigateActionPayload\n): NavigationNavigateAction => {\n  const action: NavigationNavigateAction = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\n\nexport const setParams = (\n  payload: NavigationSetParamsActionPayload\n): NavigationSetParamsAction => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true,\n});\n"],"mappings":"AAkDA;AACA,OAAO,MAAMA,IAAI,GAAG,iBAAb;AACP,OAAO,MAAMC,IAAI,GAAG,iBAAb;AACP,OAAO,MAAMC,QAAQ,GAAG,qBAAjB;AACP,OAAO,MAAMC,UAAU,GAAG,uBAAnB,C,CAEP;;AACA,OAAO,MAAMC,IAAI,GAAG,SAAAA,CAAA;EAAA,IAClBC,OAAoC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EADrB;EAAA,OAEQ;IAC1BG,IAAI,EAAET,IADoB;IAE1BU,GAAG,EAAEL,OAAO,CAACK,GAFa;IAG1BC,SAAS,EAAEN,OAAO,CAACM;EAHO,CAFR;AAAA,CAAb;AAQP,OAAO,MAAMC,IAAI,GAAG,SAAAA,CAAA,EAA+C;EAAA,IAA9CP,OAAoC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAxC;EAClB,MAAMO,MAA4B,GAAG;IACnCJ,IAAI,EAAER;EAD6B,CAArC;EAGA,IAAII,OAAO,CAACS,MAAZ,EAAoB;IAClBD,MAAM,CAACC,MAAP,GAAgBT,OAAO,CAACS,MAAxB;EACD;EACD,OAAOD,MAAP;AACD,CARM;AAUP,OAAO,MAAME,QAAQ,GACnBV,OADsB,IAEO;EAC7B,MAAMQ,MAAgC,GAAG;IACvCJ,IAAI,EAAEP,QADiC;IAEvCc,SAAS,EAAEX,OAAO,CAACW;EAFoB,CAAzC;EAIA,IAAIX,OAAO,CAACS,MAAZ,EAAoB;IAClBD,MAAM,CAACC,MAAP,GAAgBT,OAAO,CAACS,MAAxB;EACD;EACD,IAAIT,OAAO,CAACQ,MAAZ,EAAoB;IAClBA,MAAM,CAACA,MAAP,GAAgBR,OAAO,CAACQ,MAAxB;EACD;EACD,IAAIR,OAAO,CAACK,GAAZ,EAAiB;IACfG,MAAM,CAACH,GAAP,GAAaL,OAAO,CAACK,GAArB;EACD;EACD,OAAOG,MAAP;AACD,CAjBM;AAmBP,OAAO,MAAMI,SAAS,GACpBZ,OADuB,KAEQ;EAC/BI,IAAI,EAAEN,UADyB;EAE/BO,GAAG,EAAEL,OAAO,CAACK,GAFkB;EAG/BI,MAAM,EAAET,OAAO,CAACS,MAHe;EAI/BI,aAAa,EAAE;AAJgB,CAFR,CAAlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}